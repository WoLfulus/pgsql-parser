'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
const TYPES = exports.TYPES = {
  OBJECT_ACCESS_METHOD: 0,
  OBJECT_AGGREGATE: 1,
  OBJECT_CAST: 5,
  OBJECT_COLUMN: 6,
  OBJECT_COLLATION: 7,
  OBJECT_CONVERSION: 8,
  OBJECT_DATABASE: 9,
  OBJECT_DOMAIN: 12,
  OBJECT_DOMCONSTRAINT: 13,
  OBJECT_EXTENSION: 15,
  OBJECT_FDW: 16,
  OBJECT_SERVER: 17,
  OBJECT_FOREIGN_TABLE: 18,
  OBJECT_FUNCTION: 19,
  OBJECT_INDEX: 20,
  OBJECT_LANGUAGE: 21,
  OBJECT_LARGEOBJECT: 22,
  OBJECT_MATVIEW: 23,
  OBJECT_OPCLASS: 24,
  OBJECT_OPERATOR: 25,
  OBJECT_OPFAMILY: 26,
  OBJECT_POLICY: 27,
  OBJECT_ROLE: 30,
  OBJECT_RULE: 31,
  OBJECT_SCHEMA: 32,
  OBJECT_SEQUENCE: 33,
  OBJECT_STATISTIC_EXT: 35,
  OBJECT_TABCONSTRAINT: 36,
  OBJECT_TABLE: 37,
  OBJECT_TABLESPACE: 38,
  OBJECT_TRANSFORM: 39,
  OBJECT_TRIGGER: 40,
  OBJECT_TSCONFIGURATION: 41,
  OBJECT_TSDICTIONARY: 42,
  OBJECT_TSPARSER: 43,
  OBJECT_TSTEMPLATE: 44,
  OBJECT_TYPE: 45,
  OBJECT_VIEW: 47
};

const TYPE_NAMES = exports.TYPE_NAMES = {
  OBJECT_ACCESS_METHOD: 'ACCESS METHOD',
  OBJECT_AGGREGATE: 'AGGREGATE',
  OBJECT_CAST: 'CAST',
  OBJECT_COLUMN: 'COLUMN',
  OBJECT_COLLATION: 'COLLATION',
  OBJECT_CONVERSION: 'CONVERSION',
  OBJECT_DATABASE: 'DATABASE',
  OBJECT_DOMAIN: 'DOMAIN',
  OBJECT_DOMCONSTRAINT: 'CONSTRAINT',
  OBJECT_EXTENSION: 'EXTENSION',
  OBJECT_FDW: 'FOREIGN DATA WRAPPER',
  OBJECT_SERVER: 'SERVER',
  OBJECT_FOREIGN_TABLE: 'FOREIGN TABLE',
  OBJECT_FUNCTION: 'FUNCTION',
  OBJECT_INDEX: 'INDEX',
  OBJECT_LANGUAGE: 'LANGUAGE',
  OBJECT_LARGEOBJECT: 'LARGE OBJECT',
  OBJECT_MATVIEW: 'MATERIALIZED VIEW',
  OBJECT_OPCLASS: 'OPERATOR CLASS',
  OBJECT_OPERATOR: 'OPERATOR',
  OBJECT_OPFAMILY: 'OPERATOR FAMILY',
  OBJECT_POLICY: 'POLICY',
  OBJECT_ROLE: 'ROLE',
  OBJECT_RULE: 'RULE',
  OBJECT_SCHEMA: 'SCHEMA',
  OBJECT_SEQUENCE: 'SEQUENCE',
  OBJECT_STATISTIC_EXT: 'STATISTICS',
  OBJECT_TABCONSTRAINT: 'CONSTRAINT',
  OBJECT_TABLE: 'TABLE',
  OBJECT_TABLESPACE: 'TABLESPACE',
  OBJECT_TRANSFORM: 'TRANSFORM',
  OBJECT_TRIGGER: 'TRIGGER',
  OBJECT_TSCONFIGURATION: 'TEXT SEARCH CONFIGURATION',
  OBJECT_TSDICTIONARY: 'TEXT SEARCH DICTIONARY',
  OBJECT_TSPARSER: 'TEXT SEARCH PARSER',
  OBJECT_TSTEMPLATE: 'TEXT SEARCH TEMPLATE',
  OBJECT_TYPE: 'TYPE',
  OBJECT_VIEW: 'VIEW'
};

const _TYPE_VALUES = Object.values(TYPES);
const _TYPE_KEYS = Object.keys(TYPES);

const objtypeIs = exports.objtypeIs = (objtype, name) => TYPES[name] === objtype;

const objtypeName = exports.objtypeName = arg => {
  if (typeof arg === 'string') {
    return TYPE_NAMES[arg];
  }
  return TYPE_NAMES[_TYPE_KEYS[_TYPE_VALUES.indexOf(arg)]];
};
//# sourceMappingURL=types.js.map
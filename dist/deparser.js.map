{"version":3,"sources":["../src/deparser.js"],"names":["dotty","require","CONSTRAINT_TYPES","RESERVED_WORDS","isReserved","value","includes","toLowerCase","needsQuotes","match","keys","_","compact","o","filter","p","toString","length","fail","type","node","Error","JSON","stringify","parens","string","indent","text","count","Deparser","deparse","query","deparseQuery","constructor","tree","map","join","deparseNodes","nodes","context","isArray","list","separator","prefix","l","listQuotes","split","a","quote","trim","escape","literal","replace","convertTypeName","typeName","size","names","args","name","catalog","mods","String","str","res","item","isNumber","values","stmt","output","kind","lexpr","push","schema","operator","rexpr","op","FuncCall","Null","aliasname","colnames","elements","val","lidx","uidx","arg","i","indirection","subnode","A_Star","substring","boolop","tests","booltesttype","defresult","collname","typevar","coldeflist","renameType","relationType","relation","subname","newname","colname","raw_default","constraints","collClause","get","KEYWORDS","fields","field","toUpperCase","objtype","object","Array","objargs","comment","ctename","aliascolnames","ctequery","defname","A_Const","Integer","ival","defnamespace","params","agg_star","funcname","order","withinGroup","agg_within_group","agg_order","call","agg_distinct","func_variadic","agg_filter","over","content","cols","selectStmt","rel","larg","isNatural","jointype","quals","usingClause","rarg","JoinExpr","alias","using","wrapped","strengths","strength","lockedRels","nulltesttype","number","lateral","funcs","functions","funcCall","calls","is_rowsfrom","ordinality","defList","subquery","method","repeatable","inhOpt","relpersistence","schemaname","relname","row_format","withClause","valuesLists","sets","all","distinctClause","clause","e","targetList","intoClause","fromClause","whereClause","lists","groupClause","havingClause","windowClause","windows","w","window","WindowDef","sortClause","limitCount","limitOffset","lockingClause","forEach","relkind","missing_ok","cmds","subtype","def","if_not_exists","extname","options","opt","DefElem","removeType","objects","behavior","policy_name","table","cmd_name","roles","with_check","qual","isconstraint","trigname","timing","TRIGGER_EVENTS","INSERT","DELETE","UPDATE","TRUNCATE","events","columns","transitionRels","TriggerTransition","isNew","isTable","deferrable","initdeferred","row","whenClause","exists","domainname","tableElts","hasOwnProperty","inhRelations","Number","constraint","contype","conname","pktable","pk_attrs","fk_attrs","ConstraintStmt","getExclusionGroup","nde","out","exclusions","excl","IndexElem","expr","b","access_method","ReferenceConstraint","raw_expr","fk_del_action","fk_upd_action","fk_matchtype","is_no_inherit","skip_validation","ExclusionConstraint","priv_name","is_local","funcargs","mode","argType","defexpr","parameters","parametersList","FunctionParameter","returns","returnType","option","roletype","rolename","getTypeFromNode","nodeObj","targtype","is_grant","grant_option","privileges","grantees","granted_roles","grantee_roles","admin_opt","roleOption","val1","val2","stmt_type","role","opts","search","begin","nodeOpts","index","indexOf","obj","set","flag","lopts","start","gid","sortby_dir","useOp","sortby_nulls","objname","subLinkType","subselect","testexpr","operName","last","deparseInterval","setof","typmods","arrayBounds","result","empty","partitionClause","orderClause","frameOptions","deparseFrameOptions","refname","startOffset","endOffset","windowParts","useParens","partition","orders","recursive","ctes","refName","FRAMEOPTION_NONDEFAULT","FRAMEOPTION_RANGE","FRAMEOPTION_ROWS","FRAMEOPTION_BETWEEN","FRAMEOPTION_START_UNBOUNDED_PRECEDING","FRAMEOPTION_END_UNBOUNDED_PRECEDING","FRAMEOPTION_START_UNBOUNDED_FOLLOWING","FRAMEOPTION_END_UNBOUNDED_FOLLOWING","FRAMEOPTION_START_CURRENT_ROW","FRAMEOPTION_END_CURRENT_ROW","FRAMEOPTION_START_VALUE_PRECEDING","FRAMEOPTION_END_VALUE_PRECEDING","FRAMEOPTION_START_VALUE_FOLLOWING","FRAMEOPTION_END_VALUE_FOLLOWING","between","intervals","interval","part","mask","MASKS","BITS","invert","INTERVALS","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","INTERVAL_FULL_RANGE"],"mappings":"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","file":"deparser.js","sourcesContent":["import _ from 'lodash';\nimport { format } from 'util';\nimport { objtypeName, objtypeIs } from './types';\nconst dotty = require('dotty');\n\nconst CONSTRAINT_TYPES = [\n  'NULL',\n  'NOT NULL',\n  'DEFAULT',\n  null,\n  'CHECK',\n  'PRIMARY KEY',\n  'UNIQUE',\n  'EXCLUDE',\n  'REFERENCES'\n];\n\n// select word from pg_get_keywords() where catcode = 'R';\nconst RESERVED_WORDS = [\n  'all',\n  'analyse',\n  'analyze',\n  'and',\n  'any',\n  'array',\n  'as',\n  'asc',\n  'asymmetric',\n  'both',\n  'case',\n  'cast',\n  'check',\n  'collate',\n  'column',\n  'constraint',\n  'create',\n  'current_catalog',\n  'current_date',\n  'current_role',\n  'current_time',\n  'current_timestamp',\n  'current_user',\n  'default',\n  'deferrable',\n  'desc',\n  'distinct',\n  'do',\n  'else',\n  'end',\n  'except',\n  'false',\n  'fetch',\n  'for',\n  'foreign',\n  'from',\n  'grant',\n  'group',\n  'having',\n  'in',\n  'initially',\n  'intersect',\n  'into',\n  'lateral',\n  'leading',\n  'limit',\n  'localtime',\n  'localtimestamp',\n  'not',\n  'null',\n  'offset',\n  'on',\n  'only',\n  'or',\n  'order',\n  'placing',\n  'primary',\n  'references',\n  'returning',\n  'select',\n  'session_user',\n  'some',\n  'symmetric',\n  'table',\n  'then',\n  'to',\n  'trailing',\n  'true',\n  'union',\n  'unique',\n  'user',\n  'using',\n  'variadic',\n  'when',\n  'where',\n  'window',\n  'with'\n];\n\nconst isReserved = (value) =>\n  RESERVED_WORDS.includes(value.toLowerCase());\n\n// usually the AST lowercases all the things, so if we\n// have both, the author most likely used double quotes\nconst needsQuotes = (value) =>\n  value.match(/[a-z]+[\\W\\w]*[A-Z]+|[A-Z]+[\\W\\w]*[a-z]+/) ||\n  value.match(/\\W/) ||\n  isReserved(value);\n\nconst { keys } = _;\n\nconst compact = o => {\n  return _.filter(_.compact(o), (p) => {\n    if (p == null) {\n      return false;\n    }\n\n    return p.toString().length;\n  });\n};\n\nconst fail = (type, node) => {\n  throw new Error(format('Unhandled %s node: %s', type, JSON.stringify(node)));\n};\n\nconst parens = (string) => {\n  return '(' + string + ')';\n};\n\nconst indent = (text, count = 1) => text;\n\nexport default class Deparser {\n  static deparse(query) {\n    return new Deparser(query).deparseQuery();\n  }\n\n  constructor(tree) {\n    this.tree = tree;\n  }\n\n  deparseQuery() {\n    return (this.tree.map(node => `${this.deparse(node)};`)).join('\\n\\n');\n  }\n\n  deparseNodes(nodes, context) {\n    return nodes.map(node => {\n      return _.isArray(node) ? this.list(node) : this.deparse(node, context);\n    });\n  }\n\n  list(nodes, separator = ', ', prefix = '') {\n    if (!nodes) {\n      return '';\n    }\n\n    return this.deparseNodes(nodes).map(l => `${prefix}${l}`).join(separator);\n  }\n\n  listQuotes(nodes, separator = ', ') {\n    return this.list(nodes, separator).split(separator).map(a => this.quote(a.trim())).join(separator);\n  }\n\n  quote(value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (_.isArray(value)) {\n      return value.map(o => this.quote(o));\n    }\n\n    if (needsQuotes(value)) {\n      return '\"' + value + '\"';\n    }\n    return value;\n  }\n\n  // SELECT encode(E'''123\\\\000\\\\001', 'base64')\n  escape(literal) {\n    return \"'\" + literal.replace(/'/g, \"''\") + \"'\";\n  }\n\n  convertTypeName(typeName, size) {\n    switch (typeName) {\n      case 'bpchar':\n        if (size != null) {\n          return 'char';\n        }\n        // return `pg_catalog.bpchar` below so that the following is symmetric\n        // SELECT char 'c' = char 'c' AS true\n        return 'pg_catalog.bpchar';\n      case 'varchar':\n        return 'varchar';\n      case 'numeric':\n        return 'numeric';\n      case 'bool':\n        return 'boolean';\n      case 'int2':\n        return 'smallint';\n      case 'int4':\n        return 'int';\n      case 'int8':\n        return 'bigint';\n      case 'real': case 'float4':\n        return 'real';\n      case 'float8':\n        return 'pg_catalog.float8';\n      case 'text':\n        // SELECT EXTRACT(CENTURY FROM CURRENT_DATE)>=21 AS True\n        return 'pg_catalog.text';\n      case 'date':\n        return 'pg_catalog.date';\n      case 'time':\n        return 'time';\n      case 'timetz':\n        return 'pg_catalog.timetz';\n      case 'timestamp':\n        return 'timestamp';\n      case 'timestamptz':\n        return 'pg_catalog.timestamptz';\n      case 'interval':\n        return 'interval';\n      case 'bit':\n        return 'bit';\n      default:\n        throw new Error(format('Unhandled data type: %s', typeName));\n    }\n  }\n\n  type(names, args) {\n    const [ catalog, type ] = names.map(name => this.deparse(name));\n\n    const mods = (name, size) => {\n      if (size != null) {\n        return name + '(' + size + ')';\n      }\n\n      return name;\n    };\n\n    // handle the special \"char\" (in quotes) type\n    if (names[0].String.str === 'char') {\n      names[0].String.str = '\"char\"';\n    }\n\n    if (catalog !== 'pg_catalog') {\n      return mods(this.list(names, '.'), args);\n    }\n\n    const res = this.convertTypeName(type, args);\n\n    return mods(res, args);\n  }\n\n  deparse(item, context) {\n    if (item == null) {\n      return null;\n    }\n\n    if (_.isNumber(item)) {\n      return item;\n    }\n\n    const type = keys(item)[0];\n    const node = _.values(item)[0];\n\n    if (this[type] == null) {\n      throw new Error(type + ' is not implemented');\n    }\n\n    return this[type](node, context);\n  }\n\n  ['RawStmt'](node) {\n    return this.deparse(node.stmt);\n  }\n\n  ['A_Expr'](node, context) {\n    const output = [];\n\n    switch (node.kind) {\n      case 0: // AEXPR_OP\n        if (node.lexpr) {\n          output.push(parens(this.deparse(node.lexpr)));\n        }\n\n        if (node.name.length > 1) {\n          const schema = this.deparse(node.name[0]);\n          const operator = this.deparse(node.name[1]);\n          output.push(`OPERATOR(${schema}.${operator})`);\n        } else {\n          output.push(this.deparse(node.name[0], context));\n        }\n\n        if (node.rexpr) {\n          output.push(parens(this.deparse(node.rexpr, context)));\n        }\n\n        if (output.length === 2) {\n          return parens(output.join(''));\n        }\n\n        return parens(output.join(' '));\n\n      case 1: // AEXPR_OP_ANY\n        output.push(this.deparse(node.lexpr));\n        output.push(format('ANY (%s)', this.deparse(node.rexpr, context)));\n        return output.join(` ${this.deparse(node.name[0], context)} `);\n\n      case 2: // AEXPR_OP_ALL\n        output.push(this.deparse(node.lexpr, context));\n        output.push(format('ALL (%s)', this.deparse(node.rexpr, context)));\n        return output.join(` ${this.deparse(node.name[0], context)} `);\n\n      case 3: // AEXPR_DISTINCT\n        return format('%s IS DISTINCT FROM %s', this.deparse(node.lexpr, context), this.deparse(node.rexpr, context));\n\n      case 4: // AEXPR_NULLIF\n        return format('NULLIF(%s, %s)', this.deparse(node.lexpr, context), this.deparse(node.rexpr, context));\n\n      case 5: { // AEXPR_OF\n        const op = node.name[0].String.str === '=' ? 'IS OF' : 'IS NOT OF';\n        return format('%s %s (%s)', this.deparse(node.lexpr, context), op, this.list(node.rexpr, context));\n      }\n\n      case 6: { // AEXPR_IN\n        const operator = node.name[0].String.str === '=' ? 'IN' : 'NOT IN';\n\n        return format('%s %s (%s)', this.deparse(node.lexpr, context), operator, this.list(node.rexpr, context));\n      }\n\n      case 7:\n        return fail('A_Expr', node);\n\n      case 8:\n        output.push(this.deparse(node.lexpr, context));\n\n        if (node.name[0].String.str === '!~~') {\n          output.push(format('NOT LIKE (%s)', this.deparse(node.rexpr, context)));\n        } else {\n          output.push(format('LIKE (%s)', this.deparse(node.rexpr, context)));\n        }\n\n        return output.join(' ');\n\n      case 9:\n\n        output.push(this.deparse(node.lexpr, context));\n\n        if (node.name[0].String.str === '!~~*') {\n          output.push(format('NOT ILIKE (%s)', this.deparse(node.rexpr, context)));\n        } else {\n          output.push(format('ILIKE (%s)', this.deparse(node.rexpr, context)));\n        }\n\n        return output.join(' ');\n\n      case 10:\n        // SIMILAR TO emits a similar_escape FuncCall node with the first argument\n        output.push(this.deparse(node.lexpr, context));\n\n        if (node.name[0].String.str === '!~') {\n          if (this.deparse(node.rexpr.FuncCall.args[1].Null, context)) {\n            output.push(format('NOT SIMILAR TO %s', this.deparse(node.rexpr.FuncCall.args[0], context)));\n          } else {\n            output.push(format('NOT SIMILAR TO %s ESCAPE %s',\n                               this.deparse(node.rexpr.FuncCall.args[0], context),\n                               this.deparse(node.rexpr.FuncCall.args[1], context)));\n          }\n        } else if (this.deparse(node.rexpr.FuncCall.args[1].Null, context)) {\n          output.push(format('SIMILAR TO %s', this.deparse(node.rexpr.FuncCall.args[0], context)));\n        } else {\n          output.push(format('SIMILAR TO %s ESCAPE %s',\n                             this.deparse(node.rexpr.FuncCall.args[0], context),\n                             this.deparse(node.rexpr.FuncCall.args[1], context)));\n        }\n\n        return output.join(' ');\n\n      case 11:\n        output.push(this.deparse(node.lexpr, context));\n        output.push(format('BETWEEN %s AND %s', this.deparse(node.rexpr[0], context), this.deparse(node.rexpr[1], context)));\n        return output.join(' ');\n\n      case 12:\n        output.push(this.deparse(node.lexpr, context));\n        output.push(format('NOT BETWEEN %s AND %s', this.deparse(node.rexpr[0], context), this.deparse(node.rexpr[1], context)));\n        return output.join(' ');\n\n      default:\n        return fail('A_Expr', node);\n    }\n  }\n\n  ['Alias'](node, context) {\n    const name = node.aliasname;\n\n    const output = [ 'AS' ];\n\n    if (node.colnames) {\n      output.push(name + parens(this.list(node.colnames)));\n    } else {\n      output.push(this.quote(name));\n    }\n\n    return output.join(' ');\n  }\n\n  ['A_ArrayExpr'](node) {\n    return format('ARRAY[%s]', this.list(node.elements));\n  }\n\n  ['A_Const'](node, context) {\n    if (node.val.String) {\n      return this.escape(this.deparse(node.val, context));\n    }\n\n    return this.deparse(node.val, context);\n  }\n\n  ['A_Indices'](node) {\n    if (node.lidx) {\n      return format('[%s:%s]', this.deparse(node.lidx), this.deparse(node.uidx));\n    }\n\n    return format('[%s]', this.deparse(node.uidx));\n  }\n\n  ['A_Indirection'](node) {\n    const output = [ `(${this.deparse(node.arg)})` ];\n\n    // TODO(zhm) figure out the actual rules for when a '.' is needed\n    //\n    // select a.b[0] from a;\n    // select (select row(1)).*\n    // select c2[2].f2 from comptable\n    // select c2.a[2].f2[1].f3[0].a1 from comptable\n\n    for (let i = 0; i < node.indirection.length; i++) {\n      const subnode = node.indirection[i];\n\n      if (subnode.String || subnode.A_Star) {\n        const value = subnode.A_Star ? '*' : this.quote(subnode.String.str);\n\n        output.push(`.${value}`);\n      } else {\n        output.push(this.deparse(subnode));\n      }\n    }\n\n    return output.join('');\n  }\n\n  ['A_Star'](node, context) {\n    return '*';\n  }\n\n  ['BitString'](node) {\n    const prefix = node.str[0];\n    return `${prefix}'${node.str.substring(1)}'`;\n  }\n\n  ['BoolExpr'](node) {\n    switch (node.boolop) {\n      case 0:\n        return parens(this.list(node.args, ' AND '));\n      case 1:\n        return parens(this.list(node.args, ' OR '));\n      case 2:\n        return format('NOT (%s)', this.deparse(node.args[0]));\n      default:\n        return fail('BoolExpr', node);\n    }\n  }\n\n  ['BooleanTest'](node) {\n    const output = [];\n\n    output.push(this.deparse(node.arg));\n\n    const tests = [\n      'IS TRUE',\n      'IS NOT TRUE',\n      'IS FALSE',\n      'IS NOT FALSE',\n      'IS UNKNOWN',\n      'IS NOT UNKNOWN'\n    ];\n\n    output.push(tests[node.booltesttype]);\n\n    return output.join(' ');\n  }\n\n  ['CaseExpr'](node) {\n    const output = [ 'CASE' ];\n\n    if (node.arg) {\n      output.push(this.deparse(node.arg));\n    }\n\n    for (let i = 0; i < node.args.length; i++) {\n      output.push(this.deparse(node.args[i]));\n    }\n\n    if (node.defresult) {\n      output.push('ELSE');\n      output.push(this.deparse(node.defresult));\n    }\n\n    output.push('END');\n\n    return output.join(' ');\n  }\n\n  ['CoalesceExpr'](node) {\n    return format('COALESCE(%s)', this.list(node.args));\n  }\n\n  ['CollateClause'](node) {\n    const output = [];\n\n    if (node.arg) {\n      output.push(this.deparse(node.arg));\n    }\n\n    output.push('COLLATE');\n\n    if (node.collname) {\n      output.push(this.quote(this.deparseNodes(node.collname)));\n    }\n\n    return output.join(' ');\n  }\n\n  ['CompositeTypeStmt'](node) {\n    const output = [ ];\n\n    output.push('CREATE TYPE');\n    output.push(this.deparse(node.typevar));\n    output.push('AS');\n    output.push('(');\n    output.push(this.list(node.coldeflist, ',\\n', '\\t'));\n    output.push(')');\n\n    return output.join(' ');\n  }\n\n  ['RenameStmt'](node) {\n    const output = [ ];\n\n    if (!objtypeIs(node.renameType, 'OBJECT_COLUMN')) {\n      throw new Error('renameType not yet implemented');\n    }\n    if (!objtypeIs(node.relationType, 'OBJECT_TABLE')) {\n      throw new Error('relationType not yet implemented');\n    }\n\n    output.push('ALTER');\n    output.push('TABLE');\n    output.push(this.deparse(node.relation));\n    output.push('RENAME');\n    output.push('COLUMN');\n    output.push(node.subname);\n    output.push('TO');\n    output.push(node.newname);\n\n    return output.join(' ');\n  }\n\n  ['ColumnDef'](node) {\n    const output = [ this.quote(node.colname) ];\n\n    output.push(this.deparse(node.typeName));\n\n    if (node.raw_default) {\n      output.push('USING');\n      output.push(this.deparse(node.raw_default));\n    }\n\n    if (node.constraints) {\n      output.push(this.list(node.constraints, ' '));\n    }\n\n    if (node.collClause) {\n      output.push('COLLATE');\n      const str = dotty.get(node, 'collClause.CollateClause.collname.0.String.str');\n      output.push(this.quote(str));\n    }\n\n    return _.compact(output).join(' ');\n  }\n\n  ['SQLValueFunction'](node) {\n    if (node.op === 0) {\n      return 'CURRENT_DATE';\n    }\n    if (node.op === 3) {\n      return 'CURRENT_TIMESTAMP';\n    }\n    if (node.op === 10) {\n      return 'CURRENT_USER';\n    }\n    if (node.op === 12) {\n      return 'SESSION_USER';\n    }\n    throw new Error(`op=${node.op} SQLValueFunction not implemented`);\n  }\n\n  ['ColumnRef'](node, context) {\n    const KEYWORDS = [ 'old', 'new' ];\n    const fields = node.fields.map(field => {\n      if (field.String) {\n        const value = this.deparse(field);\n        if (context === 'trigger' && KEYWORDS.includes(value.toLowerCase())) {\n          return value.toUpperCase();\n        }\n        return this.quote(value);\n      }\n\n      return this.deparse(field);\n    });\n    return fields.join('.');\n  }\n\n  ['CommentStmt'](node) {\n    const output = [];\n\n    output.push('COMMENT');\n    output.push('ON');\n    output.push(objtypeName(node.objtype));\n\n    if (objtypeIs(node.objtype, 'OBJECT_CAST')) {\n      output.push('(');\n      output.push(this.deparse(node.object[0]));\n      output.push('AS');\n      output.push(this.deparse(node.object[1]));\n      output.push(')');\n    } else if (objtypeIs(node.objtype, 'OBJECT_DOMCONSTRAINT')) {\n      output.push(this.deparse(node.object[1]));\n      output.push('ON');\n      output.push('DOMAIN');\n      output.push(this.deparse(node.object[0]));\n    } else if (objtypeIs(node.objtype, 'OBJECT_OPCLASS') || objtypeIs(node.objtype, 'OBJECT_OPFAMILY')) {\n      output.push(this.deparse(node.object[1]));\n      output.push('USING');\n      output.push(this.deparse(node.object[0]));\n    } else if (objtypeIs(node.objtype, 'OBJECT_OPERATOR')) {\n      output.push(this.deparse(node.object, 'noquotes'));\n    } else if (objtypeIs(node.objtype, 'OBJECT_POLICY')) {\n      output.push(this.deparse(node.object[1]));\n      output.push('ON');\n      output.push(this.deparse(node.object[0]));\n    } else if (objtypeIs(node.objtype, 'OBJECT_ROLE')) {\n      output.push(this.deparse(node.object));\n    } else if (objtypeIs(node.objtype, 'OBJECT_RULE')) {\n      output.push(this.deparse(node.object[1]));\n      output.push('ON');\n      output.push(this.deparse(node.object[0]));\n    } else if (objtypeIs(node.objtype, 'OBJECT_TABCONSTRAINT')) {\n      output.push(this.deparse(node.object[1]));\n      output.push('ON');\n      output.push(this.deparse(node.object[0]));\n    } else if (objtypeIs(node.objtype, 'OBJECT_TRANSFORM')) {\n      output.push('FOR');\n      output.push(this.deparse(node.object[0]));\n      output.push('LANGUAGE');\n      output.push(this.deparse(node.object[1]));\n    } else if (objtypeIs(node.objtype, 'OBJECT_TRIGGER')) {\n      output.push(this.deparse(node.object[1]));\n      output.push('ON');\n      output.push(this.deparse(node.object[0]));\n    } else {\n      if (objtypeIs(node.objtype, 'OBJECT_LARGEOBJECT')) {\n        output.push(dotty.get(node, 'object.Integer.ival'));\n      } else if (node.object instanceof Array) {\n        output.push(this.listQuotes(node.object, '.'));\n      } else {\n        output.push(this.deparse(node.object));\n      }\n\n      if (node.objargs) {\n        output.push('(');\n        output.push(this.list(node.objargs));\n        output.push(')');\n      }\n    }\n\n    output.push('IS');\n\n    if (node.comment) {\n      output.push(`E'${node.comment}'`);\n    } else {\n      output.push('NULL');\n    }\n\n    return output.join(' ');\n  }\n\n  ['CommonTableExpr'](node) {\n    const output = [];\n\n    output.push(node.ctename);\n\n    if (node.aliascolnames) {\n      output.push(format('(%s)', this.quote(this.deparseNodes(node.aliascolnames))));\n    }\n\n    output.push(format('AS (%s)', this.deparse(node.ctequery)));\n\n    return output.join(' ');\n  }\n\n  ['DefElem'](node) {\n    if (node.defname === 'transaction_isolation') {\n      return format('ISOLATION LEVEL %s', node.arg.A_Const.val.String.str.toUpperCase());\n    }\n\n    if (node.defname === 'transaction_read_only') {\n      return node.arg.A_Const.val.Integer.ival === 0 ? 'READ WRITE' : 'READ ONLY';\n    }\n\n    if (node.defname === 'transaction_deferrable') {\n      return node.arg.A_Const.val.Integer.ival === 0 ? 'NOT DEFERRABLE' : 'DEFERRABLE';\n    }\n\n    if (node.defname === 'set') {\n      return this.deparse(node.arg);\n    }\n\n    let name = node.defname;\n    if (node.defnamespace) {\n      name = `${node.defnamespace}.${node.defname}`;\n    }\n\n    if (node.arg) {\n      return `${name} = ${this.deparse(node.arg)}`;\n    }\n    return name;\n  }\n\n  ['DoStmt'](node) {\n    return `DO $$\\n  ${dotty.get(node, 'args.0.DefElem.arg.String.str').trim()} $$`;\n  }\n\n  ['Float'](node) {\n    // wrap negative numbers in parens, SELECT (-2147483648)::int4 * (-1)::int4\n    if (node.str[0] === '-') {\n      return `(${node.str})`;\n    }\n\n    return node.str;\n  }\n\n  ['FuncCall'](node, context) {\n    const output = [];\n\n    let params = [];\n\n    if (node.args) {\n      params = node.args.map(item => {\n        return this.deparse(item);\n      });\n    }\n\n    // COUNT(*)\n    if (node.agg_star) {\n      params.push('*');\n    }\n\n    const name = this.list(node.funcname, '.');\n\n    const order = [];\n\n    const withinGroup = node.agg_within_group;\n\n    if (node.agg_order) {\n      order.push('ORDER BY');\n      order.push(this.list(node.agg_order, ', '));\n    }\n\n    const call = [];\n\n    call.push(name + '(');\n\n    if (node.agg_distinct) {\n      call.push('DISTINCT ');\n    }\n\n    // prepend variadic before the last parameter\n    // SELECT CONCAT('|', VARIADIC ARRAY['1','2','3'])\n    if (node.func_variadic) {\n      params[params.length - 1] = 'VARIADIC ' + params[params.length - 1];\n    }\n\n    call.push(params.join(', '));\n\n    if (order.length && !withinGroup) {\n      call.push(' ');\n      call.push(order.join(' '));\n    }\n\n    call.push(')');\n\n    output.push(compact(call).join(''));\n\n    if (order.length && withinGroup) {\n      output.push('WITHIN GROUP');\n      output.push(parens(order.join(' ')));\n    }\n\n    if (node.agg_filter != null) {\n      output.push(format('FILTER (WHERE %s)', this.deparse(node.agg_filter)));\n    }\n\n    if (node.over != null) {\n      output.push(format('OVER %s', this.deparse(node.over)));\n    }\n\n    return output.join(' ');\n  }\n\n  ['GroupingFunc'](node) {\n    return 'GROUPING(' + this.list(node.args) + ')';\n  }\n\n  ['GroupingSet'](node) {\n    switch (node.kind) {\n      case 0: // GROUPING_SET_EMPTY\n        return '()';\n\n      case 1: // GROUPING_SET_SIMPLE\n        return fail('GroupingSet', node);\n\n      case 2: // GROUPING_SET_ROLLUP\n        return 'ROLLUP (' + this.list(node.content) + ')';\n\n      case 3: // GROUPING_SET_CUBE\n        return 'CUBE (' + this.list(node.content) + ')';\n\n      case 4: // GROUPING_SET_SETS\n        return 'GROUPING SETS (' + this.list(node.content) + ')';\n\n      default:\n        return fail('GroupingSet', node);\n    }\n  }\n\n  ['InsertStmt'](node) {\n    const output = [];\n\n    output.push('INSERT INTO');\n    output.push(this.deparse(node.relation));\n    output.push('(');\n    output.push(this.list(node.cols));\n    output.push(')');\n    output.push(this.deparse(node.selectStmt));\n\n    return output.join(' ');\n  }\n\n  ['Integer'](node, context) {\n    if (node.ival < 0 && context !== 'simple') {\n      return `(${node.ival})`;\n    }\n\n    return node.ival.toString();\n  }\n\n  ['IntoClause'](node) {\n    return this.deparse(node.rel);\n  }\n\n  ['JoinExpr'](node, context) {\n    const output = [];\n\n    output.push(this.deparse(node.larg));\n\n    if (node.isNatural) {\n      output.push('NATURAL');\n    }\n\n    let join = null;\n\n    switch (true) {\n      case node.jointype === 0 && (node.quals != null):\n        join = 'INNER JOIN';\n        break;\n\n      case node.jointype === 0 && !node.isNatural && !(node.quals != null) && !(node.usingClause != null):\n        join = 'CROSS JOIN';\n        break;\n\n      case node.jointype === 0:\n        join = 'JOIN';\n        break;\n\n      case node.jointype === 1:\n        join = 'LEFT OUTER JOIN';\n        break;\n\n      case node.jointype === 2:\n        join = 'FULL OUTER JOIN';\n        break;\n\n      case node.jointype === 3:\n        join = 'RIGHT OUTER JOIN';\n        break;\n\n      default:\n        fail('JoinExpr', node);\n        break;\n    }\n\n    output.push(join);\n\n    if (node.rarg) {\n      // wrap nested join expressions in parens to make the following symmetric:\n      // select * from int8_tbl x cross join (int4_tbl x cross join lateral (select x.f1) ss)\n      if ((node.rarg.JoinExpr != null) && !(node.rarg.JoinExpr.alias != null)) {\n        output.push(`(${this.deparse(node.rarg)})`);\n      } else {\n        output.push(this.deparse(node.rarg));\n      }\n    }\n\n    if (node.quals) {\n      output.push(`ON ${this.deparse(node.quals)}`);\n    }\n\n    if (node.usingClause) {\n      const using = this.quote(this.deparseNodes(node.usingClause)).join(', ');\n\n      output.push(`USING (${using})`);\n    }\n\n    const wrapped =\n      (node.rarg.JoinExpr != null) || node.alias ? '(' + output.join(' ') + ')' : output.join(' ');\n\n    if (node.alias) {\n      return wrapped + ' ' + this.deparse(node.alias);\n    }\n\n    return wrapped;\n  }\n\n  ['LockingClause'](node) {\n    const strengths = [\n      'NONE', // LCS_NONE\n      'FOR KEY SHARE',\n      'FOR SHARE',\n      'FOR NO KEY UPDATE',\n      'FOR UPDATE'\n    ];\n\n    const output = [];\n\n    output.push(strengths[node.strength]);\n\n    if (node.lockedRels) {\n      output.push('OF');\n      output.push(this.list(node.lockedRels));\n    }\n\n    return output.join(' ');\n  }\n\n  ['MinMaxExpr'](node) {\n    const output = [];\n\n    if (node.op === 0) {\n      output.push('GREATEST');\n    } else {\n      output.push('LEAST');\n    }\n\n    output.push(parens(this.list(node.args)));\n\n    return output.join('');\n  }\n\n  ['NamedArgExpr'](node) {\n    const output = [];\n\n    output.push(node.name);\n    output.push(':=');\n    output.push(this.deparse(node.arg));\n\n    return output.join(' ');\n  }\n\n  ['Null'](node) {\n    return 'NULL';\n  }\n\n  ['NullTest'](node) {\n    const output = [ this.deparse(node.arg) ];\n\n    if (node.nulltesttype === 0) {\n      output.push('IS NULL');\n    } else if (node.nulltesttype === 1) {\n      output.push('IS NOT NULL');\n    }\n\n    return output.join(' ');\n  }\n\n  ['ParamRef'](node) {\n    if (node.number >= 0) {\n      return [ '$', node.number ].join('');\n    }\n    return '?';\n  }\n\n  ['RangeFunction'](node) {\n    const output = [];\n\n    if (node.lateral) {\n      output.push('LATERAL');\n    }\n\n    const funcs = [];\n\n    for (let i = 0; i < node.functions.length; i++) {\n      const funcCall = node.functions[i];\n      const call = [ this.deparse(funcCall[0]) ];\n\n      if (funcCall[1] && funcCall[1].length) {\n        call.push(format('AS (%s)', this.list(funcCall[1])));\n      }\n\n      funcs.push(call.join(' '));\n    }\n\n    const calls = funcs.join(', ');\n\n    if (node.is_rowsfrom) {\n      output.push(`ROWS FROM (${calls})`);\n    } else {\n      output.push(calls);\n    }\n\n    if (node.ordinality) {\n      output.push('WITH ORDINALITY');\n    }\n\n    if (node.alias) {\n      output.push(this.deparse(node.alias));\n    }\n\n    if (node.coldeflist) {\n      const defList = this.list(node.coldeflist);\n\n      if (!node.alias) {\n        output.push(` AS (${defList})`);\n      } else {\n        output.push(`(${defList})`);\n      }\n    }\n\n    return output.join(' ');\n  }\n\n  ['RangeSubselect'](node, context) {\n    let output = '';\n\n    if (node.lateral) {\n      output += 'LATERAL ';\n    }\n\n    output += parens(this.deparse(node.subquery));\n\n    if (node.alias) {\n      return output + ' ' + this.deparse(node.alias);\n    }\n\n    return output;\n  }\n\n  ['RangeTableSample'](node) {\n    const output = [];\n\n    output.push(this.deparse(node.relation));\n    output.push('TABLESAMPLE');\n    output.push(this.deparse(node.method[0]));\n\n    if (node.args) {\n      output.push(parens(this.list(node.args)));\n    }\n\n    if (node.repeatable) {\n      output.push('REPEATABLE(' + this.deparse(node.repeatable) + ')');\n    }\n\n    return output.join(' ');\n  }\n\n  ['RangeVar'](node, context) {\n    const output = [];\n\n    if (node.inhOpt === 0) {\n      output.push('ONLY');\n    }\n\n    if (node.relpersistence === 'u') {\n      output.push('UNLOGGED');\n    }\n\n    if (node.relpersistence === 't') {\n      output.push('TEMPORARY TABLE');\n    }\n\n    if (node.schemaname != null) {\n      output.push(`${this.quote(node.schemaname)}.${this.quote(node.relname)}`);\n    } else {\n      output.push(this.quote(node.relname));\n    }\n\n    if (node.alias) {\n      output.push(this.deparse(node.alias));\n    }\n\n    return output.join(' ');\n  }\n\n  ['ResTarget'](node, context) {\n    if (context === 'select') {\n      return compact([ this.deparse(node.val), this.quote(node.name) ]).join(' AS ');\n    } else if (context === 'update') {\n      return compact([ node.name, this.deparse(node.val) ]).join(' = ');\n    } else if (!(node.val != null)) {\n      return this.quote(node.name);\n    }\n\n    return fail('ResTarget', node);\n  }\n\n  ['RowExpr'](node) {\n    if (node.row_format === 2) {\n      return parens(this.list(node.args));\n    }\n\n    return format('ROW(%s)', this.list(node.args));\n  }\n\n  ['SelectStmt'](node, context) {\n    const output = [];\n\n    if (node.withClause) {\n      output.push(this.deparse(node.withClause));\n    }\n\n    if (node.op === 0) {\n      // VALUES select's don't get SELECT\n      if (node.valuesLists == null) {\n        output.push('SELECT');\n      }\n    } else {\n      output.push(parens(this.deparse(node.larg)));\n\n      const sets = [\n        'NONE',\n        'UNION',\n        'INTERSECT',\n        'EXCEPT'\n      ];\n\n      output.push(sets[node.op]);\n\n      if (node.all) {\n        output.push('ALL');\n      }\n\n      output.push(parens(this.deparse(node.rarg)));\n    }\n\n    if (node.distinctClause) {\n      if (node.distinctClause[0] != null) {\n        output.push('DISTINCT ON');\n\n        const clause = (node.distinctClause.map(e => this.deparse(e, 'select'))).join(',\\n');\n\n        output.push(`(${clause})`);\n      } else {\n        output.push('DISTINCT');\n      }\n    }\n\n    if (node.targetList) {\n      output.push(indent((node.targetList.map(e => this.deparse(e, 'select'))).join(',\\n')));\n    }\n\n    if (node.intoClause) {\n      output.push('INTO');\n      output.push(indent(this.deparse(node.intoClause)));\n    }\n\n    if (node.fromClause) {\n      output.push('FROM');\n      output.push(indent((node.fromClause.map(e => this.deparse(e, 'from'))).join(',\\n')));\n    }\n\n    if (node.whereClause) {\n      output.push('WHERE');\n      output.push(indent(this.deparse(node.whereClause)));\n    }\n\n    if (node.valuesLists) {\n      output.push('VALUES');\n\n      const lists = node.valuesLists.map(list => {\n        return `(${this.list(list)})`;\n      });\n\n      output.push(lists.join(', '));\n    }\n\n    if (node.groupClause) {\n      output.push('GROUP BY');\n      output.push(indent((node.groupClause.map(e => this.deparse(e, 'group'))).join(',\\n')));\n    }\n\n    if (node.havingClause) {\n      output.push('HAVING');\n      output.push(indent(this.deparse(node.havingClause)));\n    }\n\n    if (node.windowClause) {\n      output.push('WINDOW');\n\n      const windows = [];\n\n      for (let i = 0; i < node.windowClause.length; i++) {\n        const w = node.windowClause[i];\n        const window = [];\n\n        if (w.WindowDef.name) {\n          window.push(this.quote(w.WindowDef.name) + ' AS');\n        }\n\n        window.push(parens(this.deparse(w, 'window')));\n\n        windows.push(window.join(' '));\n      }\n\n      output.push(windows.join(', '));\n    }\n\n    if (node.sortClause) {\n      output.push('ORDER BY');\n      output.push(indent((node.sortClause.map(e => this.deparse(e, 'sort'))).join(',\\n')));\n    }\n\n    if (node.limitCount) {\n      output.push('LIMIT');\n      output.push(indent(this.deparse(node.limitCount)));\n    }\n\n    if (node.limitOffset) {\n      output.push('OFFSET');\n      output.push(indent(this.deparse(node.limitOffset)));\n    }\n\n    if (node.lockingClause) {\n      node.lockingClause.forEach(item => {\n        return output.push(this.deparse(item));\n      });\n    }\n\n    return output.join(' ');\n  }\n\n  ['AlterTableStmt'](node) {\n    const output = [];\n    output.push('ALTER');\n    if (node.relkind === 32) {\n      output.push('TABLE');\n    } else if (node.relkind === 42) {\n      output.push('VIEW');\n    } else if (node.relkind === 40) {\n      output.push('TYPE');\n    } else {\n      output.push('TABLE');\n    }\n    if (node.missing_ok) {\n      output.push('IF EXISTS');\n    }\n    output.push(this.deparse(node.relation));\n    output.push(this.list(node.cmds));\n\n    return output.join(' ');\n  }\n\n  ['AlterTableCmd'](node) {\n    const output = [];\n\n    if (node.subtype === 0) {\n      output.push('ADD COLUMN');\n      output.push(this.quote(node.name));\n      output.push(this.deparse(node.def));\n    }\n\n    if (node.subtype === 3) {\n      output.push('ALTER COLUMN');\n      output.push(this.quote(node.name));\n      if (node.def) {\n        output.push('SET DEFAULT');\n        output.push(this.deparse(node.def));\n      } else {\n        output.push('DROP DEFAULT');\n      }\n    }\n\n    if (node.subtype === 4) {\n      output.push('ALTER COLUMN');\n      output.push(this.quote(node.name));\n      output.push('DROP NOT NULL');\n    }\n\n    if (node.subtype === 5) {\n      output.push('ALTER COLUMN');\n      output.push(this.quote(node.name));\n      output.push('SET NOT NULL');\n    }\n\n    if (node.subtype === 6) {\n      output.push('ALTER');\n      output.push(this.quote(node.name));\n      output.push('SET STATISTICS');\n      output.push(dotty.get(node, 'def.Integer.ival'));\n    }\n\n    if (node.subtype === 7) {\n      output.push('ALTER COLUMN');\n      output.push(this.quote(node.name));\n      output.push('SET');\n      output.push('(');\n      output.push(this.list(node.def));\n      output.push(')');\n    }\n\n    if (node.subtype === 9) {\n      output.push('ALTER');\n      output.push(this.quote(node.name));\n      output.push('SET STORAGE');\n      if (node.def) {\n        output.push(this.deparse(node.def));\n      } else {\n        output.push('PLAIN');\n      }\n    }\n\n    if (node.subtype === 10) {\n      output.push('DROP');\n      if (node.missing_ok) {\n        output.push('IF EXISTS');\n      }\n      output.push(this.quote(node.name));\n    }\n\n    if (node.subtype === 14) {\n      // output.push('ADD CONSTRAINT');\n      output.push('ADD');\n      output.push(this.deparse(node.def));\n    }\n\n    if (node.subtype === 18) {\n      output.push('VALIDATE CONSTRAINT');\n      output.push(this.quote(node.name));\n    }\n\n    if (node.subtype === 22) {\n      output.push('DROP CONSTRAINT');\n      if (node.missing_ok) {\n        output.push('IF EXISTS');\n      }\n      output.push(this.quote(node.name));\n    }\n\n    if (node.subtype === 25) {\n      output.push('ALTER COLUMN');\n      output.push(this.quote(node.name));\n      output.push('TYPE');\n      output.push(this.deparse(node.def));\n    }\n\n    if (node.subtype === 28) {\n      output.push('CLUSTER ON');\n      output.push(this.quote(node.name));\n    }\n\n    if (node.subtype === 29) {\n      output.push('SET WITHOUT CLUSTER');\n    }\n\n    if (node.subtype === 32) {\n      output.push('SET WITH OIDS');\n    }\n\n    if (node.subtype === 34) {\n      output.push('SET WITHOUT OIDS');\n    }\n\n    if (node.subtype === 36) {\n      output.push('SET');\n      output.push('(');\n      output.push(this.list(node.def));\n      output.push(')');\n    }\n\n    if (node.subtype === 37) {\n      output.push('RESET');\n      output.push('(');\n      output.push(this.list(node.def));\n      output.push(')');\n    }\n\n    if (node.subtype === 51) {\n      output.push('INHERIT');\n      output.push(this.deparse(node.def));\n    }\n\n    if (node.subtype === 52) {\n      output.push('NO INHERIT');\n      output.push(this.deparse(node.def));\n    }\n\n    if (node.subtype === 56) {\n      output.push('ENABLE ROW LEVEL SECURITY');\n    }\n    if (node.subtype === 57) {\n      output.push('DISABLE ROW LEVEL SECURITY');\n    }\n    if (node.subtype === 58) {\n      output.push('FORCE ROW SECURITY');\n    }\n    if (node.subtype === 59) {\n      output.push('NO FORCE ROW SECURITY');\n    }\n\n    return output.join(' ');\n  }\n\n  ['CreateExtensionStmt'](node) {\n    const output = [];\n    output.push('CREATE EXTENSION');\n    if (node.if_not_exists) {\n      output.push('IF NOT EXISTS');\n    }\n    output.push(this.quote(node.extname));\n    if (node.options) {\n      node.options.forEach(opt => {\n        if (opt.DefElem.defname === 'cascade' && opt.DefElem.arg.Integer.ival === 1) {\n          output.push('CASCADE');\n        }\n      });\n    }\n    return output.join(' ');\n  }\n\n  ['DropStmt'](node) {\n    const output = [];\n    output.push('DROP');\n    output.push(objtypeName(node.removeType));\n    if (node.missing_ok) {\n      output.push('IF EXISTS');\n    }\n    output.push(this.listQuotes(node.objects));\n    if (node.behavior) {\n      output.push('CASCADE');\n    }\n    return output.join(' ');\n  }\n\n  ['CreatePolicyStmt'](node) {\n    const output = [];\n    output.push('CREATE POLICY');\n\n    output.push(this.quote(node.policy_name));\n    if (node.table) {\n      output.push('ON');\n      output.push(this.deparse(node.table));\n    }\n    if (node.cmd_name) {\n      output.push('FOR');\n      output.push(node.cmd_name.toUpperCase());\n    }\n    output.push('TO');\n    output.push(this.list(node.roles));\n\n    if (node.with_check) {\n      output.push('WITH CHECK');\n      output.push(this.deparse(node.with_check));\n    } else {\n      output.push('USING');\n      output.push(this.deparse(node.qual));\n    }\n\n    return output.join(' ');\n  }\n\n  ['CreateTrigStmt'](node) {\n    const output = [];\n\n    output.push('CREATE');\n    if (node.isconstraint) {\n      output.push('CONSTRAINT');\n    }\n    output.push('TRIGGER');\n    output.push(this.quote(node.trigname));\n    output.push('\\n');\n\n    // int16 timing;  BEFORE, AFTER, or INSTEAD\n\n    if (node.timing === 64) {\n      output.push('INSTEAD OF');\n    } else if (node.timing === 2) {\n      output.push('BEFORE');\n    } else {\n      output.push('AFTER');\n    }\n\n    // int16 events;  \"OR\" of INSERT/UPDATE/DELETE/TRUNCATE\n\n    //  4 = 0b000100 (insert)\n    //  8 = 0b001000 (delete)\n    // 16 = 0b010000 (update)\n    // 32 = 0b100000 (TRUNCATE)\n\n    const TRIGGER_EVENTS = {\n      INSERT: 4,\n      DELETE: 8,\n      UPDATE: 16,\n      TRUNCATE: 32\n    };\n\n    const events = [];\n    if ((TRIGGER_EVENTS.INSERT & node.events) === TRIGGER_EVENTS.INSERT) {\n      events.push('INSERT');\n    }\n    if ((TRIGGER_EVENTS.UPDATE & node.events) === TRIGGER_EVENTS.UPDATE) {\n      events.push('UPDATE');\n    }\n    if ((TRIGGER_EVENTS.DELETE & node.events) === TRIGGER_EVENTS.DELETE) {\n      events.push('DELETE');\n    }\n    if ((TRIGGER_EVENTS.TRUNCATE & node.events) === TRIGGER_EVENTS.TRUNCATE) {\n      events.push('TRUNCATE');\n    }\n\n    // events\n    output.push(events.join(' OR '));\n\n    // columns\n    if (node.columns) {\n      output.push('OF');\n      output.push(this.list(node.columns));\n    }\n\n    // ON\n    output.push('ON');\n    output.push(this.deparse(node.relation));\n    output.push('\\n');\n\n    if (node.transitionRels) {\n      output.push('REFERENCING');\n      node.transitionRels.forEach(({TriggerTransition}) => {\n        if (TriggerTransition.isNew === true && TriggerTransition.isTable === true) {\n          output.push(`NEW TABLE AS ${TriggerTransition.name}`);\n        } else if (TriggerTransition.isNew !== true && TriggerTransition.isTable === true) {\n          output.push(`OLD TABLE AS ${TriggerTransition.name}`);\n        }\n      });\n    }\n\n    // opts\n    if (node.deferrable || node.initdeferred) {\n      if (node.deferrable) {\n        output.push('DEFERRABLE');\n      }\n      if (node.deferrable) {\n        output.push('INITIALLY DEFERRED');\n      }\n      output.push('\\n');\n    }\n\n    if (node.row) {\n      output.push('FOR EACH ROW\\n');\n    } else {\n      output.push('FOR EACH STATEMENT\\n');\n    }\n\n    if (node.whenClause) {\n      output.push('WHEN');\n      output.push('(');\n      output.push(this.deparse(node.whenClause, 'trigger'));\n      output.push(')');\n      output.push('\\n');\n    }\n\n    output.push('EXECUTE PROCEDURE');\n    output.push(this.listQuotes(node.funcname).split(',').join('.'));\n    output.push('(');\n    let args = [];\n    if (node.args) {\n      args = node.args;\n    }\n    // seems that it's only parsing strings?\n    args = args.map(arg => {\n      if (dotty.exists(arg, 'String.str')) {\n        return `'${dotty.get(arg, 'String.str')}'`;\n      }\n      return this.deparse(arg);\n    }).filter(a => a);\n    output.push(args.join(','));\n    output.push(')');\n\n    return output.join(' ');\n  }\n\n  ['CreateDomainStmt'](node) {\n    const output = [];\n    output.push('CREATE DOMAIN');\n    output.push(this.list(node.domainname, '.'));\n    output.push(this.deparse(node.typeName));\n    return output.join(' ');\n  }\n\n  ['CreateStmt'](node) {\n    const output = [];\n    const relpersistence = dotty.get(node, 'relation.RangeVar.relpersistence');\n    if (relpersistence === 't') {\n      output.push('CREATE');\n    } else {\n      output.push('CREATE TABLE');\n    }\n\n    output.push(this.deparse(node.relation));\n    output.push('(\\n');\n    output.push(this.list(node.tableElts, ',\\n', '\\t'));\n    output.push('\\n)');\n\n    if (relpersistence === 'p' && node.hasOwnProperty('inhRelations')) {\n      output.push('INHERITS');\n      output.push('(');\n      output.push(this.list(node.inhRelations));\n      output.push(')');\n    }\n\n    if (node.options) {\n      node.options.forEach(opt => {\n        if (dotty.get(opt, 'DefElem.defname') === 'oids') {\n          if (Number(dotty.get(opt, 'DefElem.arg.Integer.ival')) === 1) {\n            output.push('WITH OIDS');\n          } else {\n            output.push('WITHOUT OIDS');\n          }\n        }\n      });\n    }\n    return output.join(' ');\n  }\n\n  ['ConstraintStmt'](node) {\n    const output = [];\n    const constraint = CONSTRAINT_TYPES[node.contype];\n    if (node.conname) {\n      output.push('CONSTRAINT');\n      output.push(node.conname);\n      if (!node.pktable) {\n        output.push(constraint);\n      }\n    } else {\n      output.push(constraint);\n    }\n    return output.join(' ');\n  }\n\n  ['ReferenceConstraint'](node) {\n    const output = [];\n    if (node.pk_attrs && node.fk_attrs) {\n      if (node.conname) {\n        output.push('CONSTRAINT');\n        output.push(node.conname);\n      }\n      output.push('FOREIGN KEY');\n      output.push('(');\n      output.push(this.listQuotes(node.fk_attrs));\n      output.push(')');\n      output.push('REFERENCES');\n      output.push(this.deparse(node.pktable));\n      output.push('(');\n      output.push(this.listQuotes(node.pk_attrs));\n      output.push(')');\n    } else if (node.pk_attrs) {\n      output.push(this.ConstraintStmt(node));\n      output.push(this.deparse(node.pktable));\n      output.push('(');\n      output.push(this.listQuotes(node.pk_attrs));\n      output.push(')');\n    } else if (node.fk_attrs) {\n      if (node.conname) {\n        output.push('CONSTRAINT');\n        output.push(node.conname);\n      }\n      output.push('FOREIGN KEY');\n      output.push('(');\n      output.push(this.listQuotes(node.fk_attrs));\n      output.push(')');\n      output.push('REFERENCES');\n      output.push(this.deparse(node.pktable));\n    } else {\n      output.push(this.ConstraintStmt(node));\n      output.push(this.deparse(node.pktable));\n    }\n    return output.join(' ');\n  }\n\n  ['ExclusionConstraint'](node) {\n    const output = [];\n    function getExclusionGroup(nde) {\n      const out = [];\n      const a = nde.exclusions.map(excl => {\n        if (excl[0].IndexElem.name) {\n          return excl[0].IndexElem.name;\n        }\n        return excl[0].IndexElem.expr ? this.deparse(excl[0].IndexElem.expr) : null;\n      });\n\n      const b = nde.exclusions.map(excl => this.deparse(excl[1][0]));\n\n      for (let i = 0; i < a.length; i++) {\n        out.push(`${a[i]} WITH ${b[i]}`);\n        if (i !== a.length - 1) {\n          out.push(',');\n        }\n      }\n\n      return out.join(' ');\n    }\n\n    if (node.exclusions && node.access_method) {\n      output.push('USING');\n      output.push(node.access_method);\n      output.push('(');\n      output.push(getExclusionGroup.call(this, node));\n      output.push(')');\n    }\n\n    return output.join(' ');\n  }\n\n  ['Constraint'](node) {\n    const output = [];\n\n    const constraint = CONSTRAINT_TYPES[node.contype];\n    if (!constraint) {\n      throw new Error('contraint type not implemented: ' + node.contype);\n    }\n\n    if (constraint === 'REFERENCES') {\n      output.push(this.ReferenceConstraint(node));\n    } else {\n      output.push(this.ConstraintStmt(node));\n    }\n\n    if (node.keys) {\n      output.push('(');\n      output.push(this.listQuotes(node.keys));\n      output.push(')');\n    }\n\n    if (node.raw_expr) {\n      output.push('(');\n      output.push(this.deparse(node.raw_expr));\n      output.push(')');\n    }\n\n    if (node.fk_del_action) {\n      switch (node.fk_del_action) {\n        case 'r':\n          output.push('ON DELETE RESTRICT');\n          break;\n        case 'c':\n          output.push('ON DELETE CASCADE');\n          break;\n        default:\n      }\n    }\n\n    if (node.fk_upd_action) {\n      switch (node.fk_upd_action) {\n        case 'r':\n          output.push('ON UPDATE RESTRICT');\n          break;\n        case 'c':\n          output.push('ON UPDATE CASCADE');\n          break;\n        default:\n      }\n    }\n\n    if (node.fk_matchtype === 'f') {\n      output.push('MATCH FULL');\n    }\n\n    if (node.is_no_inherit === true) {\n      output.push('NO INHERIT');\n    }\n\n    if (node.skip_validation === true) {\n      output.push('NOT VALID');\n    }\n\n    if (constraint === 'EXCLUDE') {\n      output.push(this.ExclusionConstraint(node));\n    }\n\n    if (node.deferrable) {\n      output.push('deferrable');\n    }\n\n    return output.join(' ');\n  }\n\n  ['AccessPriv'](node) {\n    const output = [];\n    if (node.priv_name) {\n      output.push(node.priv_name.toUpperCase());\n    } else {\n      output.push('ALL');\n    }\n    if (node.cols) {\n      output.push('(');\n      output.push(this.list(node.cols));\n      output.push(')');\n    }\n    return output.join(' ');\n  }\n\n  ['VariableSetStmt'](node) {\n    if (node.kind === 4) {\n      return format('RESET %s', node.name);\n    }\n\n    if (node.kind === 3) {\n      const name = {\n        'TRANSACTION': 'TRANSACTION',\n        'SESSION CHARACTERISTICS': 'SESSION CHARACTERISTICS AS TRANSACTION'\n      }[node.name];\n\n      return format('SET %s %s',\n                    name,\n                    this.deparseNodes(node.args, 'simple').join(', '));\n    }\n\n    if (node.kind === 1) {\n      return format('SET %s TO DEFAULT', node.name);\n    }\n\n    return format('SET %s%s = %s',\n                  node.is_local ? 'LOCAL ' : '',\n                  node.name,\n                  this.deparseNodes(node.args, 'simple').join(', '));\n  }\n\n  ['VariableShowStmt'](node) {\n    return format('SHOW %s', node.name);\n  }\n\n  ['FuncWithArgs'](node) {\n    const output = [];\n    output.push(this.deparse(node.funcname[0]));\n    output.push('(');\n    output.push(this.list(node.funcargs));\n    output.push(')');\n    return output.join(' ');\n  }\n\n  ['FunctionParameter'](node) {\n    const output = [];\n\n    if (node.mode === 118) {\n      output.push('VARIADIC');\n    }\n\n    if (node.mode === 111) {\n      output.push('OUT');\n    }\n\n    if (node.mode === 98) {\n      output.push('INOUT');\n    }\n\n    output.push(node.name);\n    output.push(this.deparse(node.argType));\n\n    if (node.defexpr) {\n      output.push('DEFAULT');\n      output.push(this.deparse(node.defexpr));\n    }\n\n    return output.join(' ');\n  }\n\n  ['CreateFunctionStmt'](node) {\n    const output = [];\n\n    output.push('CREATE');\n    if (node.replace) {\n      output.push('OR REPLACE');\n    }\n    output.push('FUNCTION');\n\n    output.push(node.funcname.map(name => this.deparse(name)).join('.'));\n    output.push('(');\n    let parameters = [];\n    if (node.parameters) {\n      parameters = [ ...node.parameters ];\n    }\n    const parametersList = parameters.filter(\n      ({ FunctionParameter }) =>\n        FunctionParameter.mode === 118 ||\n        FunctionParameter.mode === 111 ||\n        FunctionParameter.mode === 98 ||\n        FunctionParameter.mode === 105\n    );\n    output.push(this.list(parametersList));\n    output.push(')');\n\n    const returns = parameters.filter(\n      ({ FunctionParameter }) => FunctionParameter.mode === 116\n    );\n\n    // const outs = parameters.filter(\n    //   ({ FunctionParameter }) => FunctionParameter.mode === 111\n    // );\n\n    // var setof = node.parameters.filter(\n    //   ({ FunctionParameter }) => FunctionParameter.mode === 109\n    // );\n\n    if (returns.length > 0) {\n      output.push('RETURNS');\n      output.push('TABLE');\n      output.push('(');\n      output.push(this.list(returns));\n      output.push(')');\n    } else if (node.returnType) {\n      output.push('RETURNS');\n      output.push(this.deparse(node.returnType));\n    }\n\n    node.options.forEach((option, i) => {\n      if (option && option.DefElem) {\n        let value = '';\n        switch (option.DefElem.defname) {\n          case 'as':\n            value = this.deparse(option.DefElem.arg[0]);\n            output.push(`AS $EOFCODE$${value}$EOFCODE$`);\n            break;\n\n          case 'language':\n            value = this.deparse(option.DefElem.arg);\n            output.push('LANGUAGE');\n            output.push(value);\n            break;\n\n          case 'security':\n            output.push('SECURITY');\n            value = Number(option.DefElem.arg.Integer.ival);\n            if (value > 0) {\n              output.push('DEFINER');\n            } else {\n              output.push('INVOKER');\n            }\n            break;\n\n          case 'leakproof':\n            value = Number(option.DefElem.arg.Integer.ival);\n            if (value > 0) {\n              output.push('LEAKPROOF');\n            }\n            break;\n\n          case 'window':\n            value = Number(option.DefElem.arg.Integer.ival);\n            if (value > 0) {\n              output.push('WINDOW');\n            }\n            break;\n\n          case 'strict':\n            value = Number(option.DefElem.arg.Integer.ival);\n            if (value > 0) {\n              output.push('STRICT');\n            } else {\n              output.push('CALLED ON NULL INPUT');\n            }\n            break;\n\n          case 'set':\n            if (\n              dotty.get(option, 'DefElem.arg.VariableSetStmt.kind') === 2 &&\n              dotty.get(option, 'DefElem.arg.VariableSetStmt.name') === 'search_path'\n            ) {\n              output.push('SET search_path FROM CURRENT');\n            } else {\n              output.push(this.deparse(option));\n            }\n            break;\n\n          case 'volatility':\n            value = this.deparse(option.DefElem.arg);\n            output.push(value.toUpperCase());\n            break;\n\n          default:\n        }\n      }\n    });\n    return output.join(' ');\n  }\n  ['CreateSchemaStmt'](node) {\n    const output = [];\n\n    output.push('CREATE');\n    if (node.replace) {\n      output.push('OR REPLACE');\n    }\n\n    output.push('SCHEMA');\n\n    if (node.if_not_exists) {\n      output.push('IF NOT EXISTS');\n    }\n\n    output.push(node.schemaname);\n    return output.join(' ');\n  }\n\n  // TODO use RoleSpecType from libpg_enums\n  ['RoleSpec'](node) {\n    if (node.roletype === 0) {\n      return this.quote(node.rolename);\n    }\n    if (node.roletype === 1) {\n      return 'CURRENT_USER';\n    }\n    if (node.roletype === 2) {\n      return 'SESSION_USER';\n    }\n    if (node.roletype === 3) {\n      return 'PUBLIC';\n    }\n    return '';\n  }\n\n  ['GrantStmt'](node) {\n    const output = [];\n\n    const getTypeFromNode = (nodeObj) => {\n      switch (nodeObj.objtype) {\n        case 1:\n          if (nodeObj.targtype === 1) {\n            return 'ALL TABLES IN SCHEMA';\n          }\n          return 'TABLE';\n        case 3:\n          return 'DATABASE';\n        case 4:\n          return 'DOMAIN';\n        case 5:\n          return 'FOREIGN DATA WRAPPER';\n        case 6:\n          return 'FOREIGN SERVER';\n        case 7:\n          if (nodeObj.targtype === 1) {\n            return 'ALL FUNCTIONS IN SCHEMA';\n          }\n          return 'FUNCTION';\n        case 8:\n          return 'LANGUAGE';\n        case 9:\n          return 'LARGE OBJECT';\n        case 10:\n          return 'SCHEMA';\n        case 12:\n          return 'TYPE';\n        default:\n      }\n      return '';\n    };\n\n    if ([ 1, 3, 4, 5, 6, 7, 8, 9, 10, 12 ].includes(node.objtype)) {\n      if (!node.is_grant) {\n        output.push('REVOKE');\n        if (node.grant_option) {\n          output.push('GRANT OPTION');\n          output.push('FOR');\n        }\n        if (node.privileges) {\n          output.push(this.list(node.privileges));\n        } else {\n          output.push('ALL');\n        }\n        output.push('ON');\n        output.push(getTypeFromNode(node));\n        output.push(this.list(node.objects));\n        output.push('FROM');\n        output.push(this.list(node.grantees));\n      } else {\n        output.push('GRANT');\n        if (node.privileges) {\n          output.push(this.list(node.privileges));\n        } else {\n          output.push('ALL');\n        }\n        output.push('ON');\n        output.push(getTypeFromNode(node));\n        output.push(this.list(node.objects));\n        output.push('TO');\n        output.push(this.list(node.grantees));\n        if (node.grant_option) {\n          output.push('WITH GRANT OPTION');\n        }\n      }\n      if (Number(node.behavior) === 1) {\n        output.push('CASCADE');\n      }\n    }\n\n    return output.join(' ');\n  }\n\n  ['GrantRoleStmt'](node) {\n    const output = [];\n\n    if (!node.is_grant) {\n      output.push('REVOKE');\n      output.push(this.list(node.granted_roles));\n      output.push('FROM');\n      output.push(this.list(node.grantee_roles));\n    } else {\n      output.push('GRANT');\n      output.push(this.list(node.granted_roles));\n      output.push('TO');\n      output.push(this.list(node.grantee_roles));\n    }\n    if (node.admin_opt) {\n      output.push('WITH ADMIN OPTION');\n    }\n\n    return output.join(' ');\n  }\n\n  ['CreateRoleStmt'](node) {\n    const output = [];\n\n    const roleOption = (nodeObj, i, val1, val2) => {\n      const val = Number(dotty.get(nodeObj, `options.${i}.DefElem.arg.Integer.ival`));\n      if (val > 0) {\n        output.push(val1);\n      } else {\n        output.push(val2);\n      }\n    };\n\n    output.push('CREATE');\n    if (Number(node.stmt_type) === 1) {\n      output.push('USER');\n    } else if (Number(node.stmt_type) === 2) {\n      output.push('GROUP');\n    } else {\n      output.push('ROLE');\n    }\n\n    output.push(`\"${node.role}\"`);\n\n    if (node.options) {\n      const opts = dotty.search(node, 'options.*.DefElem.defname');\n\n      if (opts.length === 1 && opts[0] === 'addroleto') {\n        // only one case\n      } else {\n        output.push('WITH');\n      }\n\n      opts.forEach((option, i) => {\n        let value = '';\n        switch (option) {\n          case 'canlogin':\n            roleOption(node, i, 'LOGIN', 'NOLOGIN');\n            break;\n          case 'addroleto':\n            output.push('IN ROLE');\n            output.push(dotty.search(node, `options.${i}.DefElem.arg.*.RoleSpec.rolename`).join(','));\n            break;\n          case 'password':\n            output.push('PASSWORD');\n            value = dotty.get(node, `options.${i}.DefElem.arg.A_Const.val.String.str`);\n            output.push(`'${value}'`);\n            break;\n          case 'adminmembers':\n            output.push('ADMIN');\n            output.push(this.list(node.options[i].DefElem.arg));\n            break;\n          case 'rolemembers':\n            output.push('USER');\n            output.push(this.list(node.options[i].DefElem.arg));\n            break;\n          case 'createdb':\n            roleOption(node, i, 'CREATEDB', 'NOCREATEDB');\n            break;\n          case 'isreplication':\n            roleOption(node, i, 'REPLICATION', 'NOREPLICATION');\n            break;\n          case 'bypassrls':\n            roleOption(node, i, 'BYPASSRLS', 'NOBYPASSRLS');\n            break;\n          case 'inherit':\n            roleOption(node, i, 'INHERIT', 'NOINHERIT');\n            break;\n          case 'superuser':\n            roleOption(node, i, 'SUPERUSER', 'NOSUPERUSER');\n            break;\n          case 'createrole':\n            roleOption(node, i, 'CREATEROLE', 'NOCREATEROLE');\n            break;\n          case 'validUntil':\n            output.push('VALID UNTIL');\n            value = dotty.get(node, `options.${i}.DefElem.arg.String.str`);\n            output.push(`'${value}'`);\n            break;\n          default:\n        }\n      });\n    }\n    return output.join(' ');\n  }\n\n  ['TransactionStmt'](node) {\n    const output = [];\n\n    const begin = (nodeOpts) => {\n      const opts = dotty.search(nodeOpts, 'options.*.DefElem.defname');\n      if (opts.includes('transaction_read_only')) {\n        const index = opts.indexOf('transaction_read_only');\n        const obj = nodeOpts.options[index];\n        let set = false;\n        const flag = Number(this.deparse(dotty.get(obj, 'DefElem.arg')));\n        if (flag > 0) {\n          set = true;\n        }\n        if (set) {\n          return 'BEGIN TRANSACTION READ ONLY';\n        }\n        return 'BEGIN TRANSACTION READ WRITE';\n      }\n      if (opts.includes('transaction_isolation')) {\n        const index = opts.indexOf('transaction_isolation');\n        const obj = nodeOpts.options[index];\n        const lopts = this.deparse(dotty.get(obj, 'DefElem.arg')).replace(/['\"]+/g, '');\n        return `BEGIN TRANSACTION ISOLATION LEVEL ${lopts.toUpperCase()}`;\n      }\n      return 'BEGIN';\n    };\n\n    const start = (nodeOpts) => {\n      const opts = dotty.search(nodeOpts, 'options.*.DefElem.defname');\n      if (opts.includes('transaction_read_only')) {\n        const index = opts.indexOf('transaction_read_only');\n        const obj = nodeOpts.options[index];\n        let set = false;\n        const flag = Number(this.deparse(dotty.get(obj, 'DefElem.arg')));\n        if (flag > 0) {\n          set = true;\n        }\n        if (set) {\n          return 'START TRANSACTION READ ONLY';\n        }\n        return 'START TRANSACTION READ WRITE';\n      }\n\n      return 'START TRANSACTION';\n    };\n\n    switch (node.kind) {\n      case 0:\n        return begin(node);\n      case 1:\n        return start(node);\n      case 2:\n        return 'COMMIT';\n      case 3:\n        return 'ROLLBACK';\n      case 4:\n        output.push('SAVEPOINT');\n        output.push(this.deparse(node.options[0].DefElem.arg));\n        break;\n      case 5:\n        output.push('RELEASE SAVEPOINT');\n        output.push(this.deparse(node.options[0].DefElem.arg));\n        break;\n      case 6:\n        output.push('ROLLBACK TO');\n        output.push(this.deparse(node.options[0].DefElem.arg));\n        break;\n      case 7:\n        output.push('PREPARE TRANSACTION');\n        output.push(`'${node.gid}'`);\n        break;\n      case 8:\n        output.push('COMMIT PREPARED');\n        output.push(`'${node.gid}'`);\n        break;\n      case 9:\n        output.push('ROLLBACK PREPARED');\n        output.push(`'${node.gid}'`);\n        break;\n      default:\n    }\n    return output.join(' ');\n  }\n\n  ['SortBy'](node) {\n    const output = [];\n\n    output.push(this.deparse(node.node));\n\n    if (node.sortby_dir === 1) {\n      output.push('ASC');\n    }\n\n    if (node.sortby_dir === 2) {\n      output.push('DESC');\n    }\n\n    if (node.sortby_dir === 3) {\n      output.push(`USING ${this.deparseNodes(node.useOp)}`);\n    }\n\n    if (node.sortby_nulls === 1) {\n      output.push('NULLS FIRST');\n    }\n\n    if (node.sortby_nulls === 2) {\n      output.push('NULLS LAST');\n    }\n\n    return output.join(' ');\n  }\n\n  ['ObjectWithArgs'](node, context) {\n    const output = [];\n\n    if (context === 'noquotes') {\n      output.push(this.list(node.objname));\n    } else {\n      output.push(this.listQuotes(node.objname, '.'));\n    }\n    if (node.objargs && node.objargs.length) {\n      output.push('(');\n      output.push(node.objargs.map(arg => {\n        if (arg === null) {\n          return 'NONE';\n        }\n        return this.deparse(arg);\n      }).join(','));\n      output.push(')');\n    }\n\n    return output.join(' ');\n  }\n\n  ['String'](node) {\n    return node.str;\n  }\n\n  ['SubLink'](node) {\n    switch (true) {\n      case node.subLinkType === 0:\n        return format('EXISTS (%s)', this.deparse(node.subselect));\n      case node.subLinkType === 1:\n        return format('%s %s ALL (%s)', this.deparse(node.testexpr), this.deparse(node.operName[0]), this.deparse(node.subselect));\n      case node.subLinkType === 2 && !(node.operName != null):\n        return format('%s IN (%s)', this.deparse(node.testexpr), this.deparse(node.subselect));\n      case node.subLinkType === 2:\n        return format('%s %s ANY (%s)', this.deparse(node.testexpr), this.deparse(node.operName[0]), this.deparse(node.subselect));\n      case node.subLinkType === 3:\n        return format('%s %s (%s)', this.deparse(node.testexpr), this.deparse(node.operName[0]), this.deparse(node.subselect));\n      case node.subLinkType === 4:\n        return format('(%s)', this.deparse(node.subselect));\n      case node.subLinkType === 5:\n        // TODO(zhm) what is this?\n        return fail('SubLink', node);\n        // MULTIEXPR_SUBLINK\n        // format('(%s)', @deparse(node.subselect))\n      case node.subLinkType === 6:\n        return format('ARRAY (%s)', this.deparse(node.subselect));\n      default:\n        return fail('SubLink', node);\n    }\n  }\n\n  ['TypeCast'](node) {\n    const type = this.deparse(node.typeName);\n    if (type === 'boolean' && dotty.exists(node, 'arg.A_Const.val.String.str')) {\n      const value = dotty.get(node, 'arg.A_Const.val.String.str');\n      if (value === 'f') {\n        return '(FALSE)';\n      }\n      if (value === 't') {\n        return '(TRUE)';\n      }\n    }\n    return this.deparse(node.arg) + '::' + this.deparse(node.typeName);\n  }\n\n  ['TypeName'](node) {\n    if (_.last(node.names).String.str === 'interval') {\n      return this.deparseInterval(node);\n    }\n\n    const output = [];\n\n    if (node.setof) {\n      output.push('SETOF');\n    }\n\n    let args = null;\n\n    if (node.typmods != null) {\n      args = node.typmods.map(item => {\n        return this.deparse(item);\n      });\n    }\n\n    const type = [];\n\n    type.push(this.type(node.names, args && args.join(', ')));\n\n    if (node.arrayBounds != null) {\n      type.push('[]');\n    }\n\n    output.push(type.join(''));\n\n    return output.join(' ');\n  }\n\n  ['CaseWhen'](node) {\n    const output = [ 'WHEN' ];\n\n    output.push(this.deparse(node.expr));\n    output.push('THEN');\n    output.push(this.deparse(node.result));\n\n    return output.join(' ');\n  }\n\n  ['WindowDef'](node, context) {\n    const output = [];\n\n    if (context !== 'window') {\n      if (node.name) {\n        output.push(node.name);\n      }\n    }\n\n    const empty = (!(node.partitionClause != null) && !(node.orderClause != null));\n\n    const frameOptions = this.deparseFrameOptions(node.frameOptions, node.refname, node.startOffset, node.endOffset);\n\n    if (empty && context !== 'window' && !(node.name != null) && frameOptions.length === 0) {\n      return '()';\n    }\n\n    const windowParts = [];\n\n    let useParens = false;\n\n    if (node.partitionClause) {\n      const partition = [ 'PARTITION BY' ];\n\n      const clause = node.partitionClause.map(item => this.deparse(item));\n\n      partition.push(clause.join(', '));\n\n      windowParts.push(partition.join(' '));\n      useParens = true;\n    }\n\n    if (node.orderClause) {\n      windowParts.push('ORDER BY');\n\n      const orders = node.orderClause.map(item => {\n        return this.deparse(item);\n      });\n\n      windowParts.push(orders.join(', '));\n\n      useParens = true;\n    }\n\n    if (frameOptions.length) {\n      useParens = true;\n      windowParts.push(frameOptions);\n    }\n\n    if (useParens && context !== 'window') {\n      return output.join(' ') + ' (' + windowParts.join(' ') + ')';\n    }\n\n    return output.join(' ') + windowParts.join(' ');\n  }\n\n  ['WithClause'](node) {\n    const output = [ 'WITH' ];\n\n    if (node.recursive) {\n      output.push('RECURSIVE');\n    }\n\n    output.push(this.list(node.ctes));\n\n    return output.join(' ');\n  }\n\n  deparseFrameOptions(options, refName, startOffset, endOffset) {\n    const FRAMEOPTION_NONDEFAULT = 0x00001; // any specified?\n    const FRAMEOPTION_RANGE = 0x00002; // RANGE behavior\n    const FRAMEOPTION_ROWS = 0x00004; // ROWS behavior\n    const FRAMEOPTION_BETWEEN = 0x00008; // BETWEEN given?\n    const FRAMEOPTION_START_UNBOUNDED_PRECEDING = 0x00010; // start is U. P.\n    const FRAMEOPTION_END_UNBOUNDED_PRECEDING = 0x00020; // (disallowed)\n    const FRAMEOPTION_START_UNBOUNDED_FOLLOWING = 0x00040; // (disallowed)\n    const FRAMEOPTION_END_UNBOUNDED_FOLLOWING = 0x00080; // end is U. F.\n    const FRAMEOPTION_START_CURRENT_ROW = 0x00100; // start is C. R.\n    const FRAMEOPTION_END_CURRENT_ROW = 0x00200; // end is C. R.\n    const FRAMEOPTION_START_VALUE_PRECEDING = 0x00400; // start is V. P.\n    const FRAMEOPTION_END_VALUE_PRECEDING = 0x00800; // end is V. P.\n    const FRAMEOPTION_START_VALUE_FOLLOWING = 0x01000; // start is V. F.\n    const FRAMEOPTION_END_VALUE_FOLLOWING = 0x02000; // end is V. F.\n\n    if (!(options & FRAMEOPTION_NONDEFAULT)) {\n      return '';\n    }\n\n    const output = [];\n\n    if (refName != null) {\n      output.push(refName);\n    }\n\n    if (options & FRAMEOPTION_RANGE) {\n      output.push('RANGE');\n    }\n\n    if (options & FRAMEOPTION_ROWS) {\n      output.push('ROWS');\n    }\n\n    const between = options & FRAMEOPTION_BETWEEN;\n\n    if (between) {\n      output.push('BETWEEN');\n    }\n\n    if (options & FRAMEOPTION_START_UNBOUNDED_PRECEDING) {\n      output.push('UNBOUNDED PRECEDING');\n    }\n\n    if (options & FRAMEOPTION_START_UNBOUNDED_FOLLOWING) {\n      output.push('UNBOUNDED FOLLOWING');\n    }\n\n    if (options & FRAMEOPTION_START_CURRENT_ROW) {\n      output.push('CURRENT ROW');\n    }\n\n    if (options & FRAMEOPTION_START_VALUE_PRECEDING) {\n      output.push(this.deparse(startOffset) + ' PRECEDING');\n    }\n\n    if (options & FRAMEOPTION_START_VALUE_FOLLOWING) {\n      output.push(this.deparse(startOffset) + ' FOLLOWING');\n    }\n\n    if (between) {\n      output.push('AND');\n\n      if (options & FRAMEOPTION_END_UNBOUNDED_PRECEDING) {\n        output.push('UNBOUNDED PRECEDING');\n      }\n\n      if (options & FRAMEOPTION_END_UNBOUNDED_FOLLOWING) {\n        output.push('UNBOUNDED FOLLOWING');\n      }\n\n      if (options & FRAMEOPTION_END_CURRENT_ROW) {\n        output.push('CURRENT ROW');\n      }\n\n      if (options & FRAMEOPTION_END_VALUE_PRECEDING) {\n        output.push(this.deparse(endOffset) + ' PRECEDING');\n      }\n\n      if (options & FRAMEOPTION_END_VALUE_FOLLOWING) {\n        output.push(this.deparse(endOffset) + ' FOLLOWING');\n      }\n    }\n\n    return output.join(' ');\n  }\n\n  deparseInterval(node) {\n    const type = [ 'interval' ];\n\n    if (node.arrayBounds != null) {\n      type.push('[]');\n    }\n\n    if (node.typmods) {\n      const typmods = node.typmods.map(item => this.deparse(item));\n\n      let intervals = this.interval(typmods[0]);\n\n      // SELECT interval(0) '1 day 01:23:45.6789'\n      if (node.typmods[0] && node.typmods[0].A_Const && node.typmods[0].A_Const.val.Integer.ival === 32767 && node.typmods[1] && (node.typmods[1].A_Const != null)) {\n        intervals = [ `(${node.typmods[1].A_Const.val.Integer.ival})` ];\n      } else {\n        intervals = intervals.map(part => {\n          if (part === 'second' && typmods.length === 2) {\n            return 'second(' + _.last(typmods) + ')';\n          }\n\n          return part;\n        });\n      }\n\n      type.push(intervals.join(' to '));\n    }\n\n    return type.join(' ');\n  }\n\n  interval(mask) {\n    // ported from https://github.com/lfittl/pg_query/blob/master/lib/pg_query/deparse/interval.rb\n    if (this.MASKS == null) {\n      this.MASKS = {\n        0: 'RESERV',\n        1: 'MONTH',\n        2: 'YEAR',\n        3: 'DAY',\n        4: 'JULIAN',\n        5: 'TZ',\n        6: 'DTZ',\n        7: 'DYNTZ',\n        8: 'IGNORE_DTF',\n        9: 'AMPM',\n        10: 'HOUR',\n        11: 'MINUTE',\n        12: 'SECOND',\n        13: 'MILLISECOND',\n        14: 'MICROSECOND',\n        15: 'DOY',\n        16: 'DOW',\n        17: 'UNITS',\n        18: 'ADBC',\n        19: 'AGO',\n        20: 'ABS_BEFORE',\n        21: 'ABS_AFTER',\n        22: 'ISODATE',\n        23: 'ISOTIME',\n        24: 'WEEK',\n        25: 'DECADE',\n        26: 'CENTURY',\n        27: 'MILLENNIUM',\n        28: 'DTZMOD'\n      };\n    }\n\n    if (this.BITS == null) {\n      this.BITS = _.invert(this.MASKS);\n    }\n\n    if (this.INTERVALS == null) {\n      this.INTERVALS = {};\n      this.INTERVALS[(1 << this.BITS.YEAR)] = [ 'year' ];\n      this.INTERVALS[(1 << this.BITS.MONTH)] = [ 'month' ];\n      this.INTERVALS[(1 << this.BITS.DAY)] = [ 'day' ];\n      this.INTERVALS[(1 << this.BITS.HOUR)] = [ 'hour' ];\n      this.INTERVALS[(1 << this.BITS.MINUTE)] = [ 'minute' ];\n      this.INTERVALS[(1 << this.BITS.SECOND)] = [ 'second' ];\n      this.INTERVALS[((1 << this.BITS.YEAR) | (1 << this.BITS.MONTH))] = [ 'year', 'month' ];\n      this.INTERVALS[((1 << this.BITS.DAY) | (1 << this.BITS.HOUR))] = [ 'day', 'hour' ];\n      this.INTERVALS[((1 << this.BITS.DAY) | (1 << this.BITS.HOUR) | (1 << this.BITS.MINUTE))] = [ 'day', 'minute' ];\n      this.INTERVALS[((1 << this.BITS.DAY) | (1 << this.BITS.HOUR) | (1 << this.BITS.MINUTE) | (1 << this.BITS.SECOND))] = [ 'day', 'second' ];\n      this.INTERVALS[((1 << this.BITS.HOUR) | (1 << this.BITS.MINUTE))] = [ 'hour', 'minute' ];\n      this.INTERVALS[((1 << this.BITS.HOUR) | (1 << this.BITS.MINUTE) | (1 << this.BITS.SECOND))] = [ 'hour', 'second' ];\n      this.INTERVALS[((1 << this.BITS.MINUTE) | (1 << this.BITS.SECOND))] = [ 'minute', 'second' ];\n\n      // utils/timestamp.h\n      // #define INTERVAL_FULL_RANGE (0x7FFF)\n      this.INTERVALS[this.INTERVAL_FULL_RANGE = '32767'] = [];\n    }\n\n    return this.INTERVALS[mask.toString()];\n  }\n}\n"]}
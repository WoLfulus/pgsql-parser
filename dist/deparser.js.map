{"version":3,"sources":["../src/deparser.js"],"names":["dotty","require","fail","type","node","Error","JSON","stringify","RESERVED_WORDS","isReserved","value","includes","toLowerCase","needsQuotes","match","keys","_","compact","o","filter","p","toString","length","parens","string","indent","text","count","Deparser","deparse","query","deparseQuery","constructor","tree","map","join","deparseNodes","nodes","context","isArray","list","separator","prefix","l","listQuotes","split","a","quote","trim","escape","literal","replace","convertTypeName","typeName","size","names","args","name","catalog","mods","String","str","res","item","isNumber","values","stmt","output","kind","lexpr","push","schema","operator","rexpr","op","FuncCall","Null","aliasname","colnames","elements","val","lidx","uidx","arg","i","indirection","subnode","A_Star","substring","boolop","tests","booltesttype","defresult","collname","typevar","coldeflist","renameType","relationType","relation","subname","newname","colname","raw_default","constraints","collClause","get","KEYWORDS","fields","field","toUpperCase","objtype","object","Array","objargs","comment","ctename","aliascolnames","ctequery","defname","A_Const","Integer","ival","defnamespace","params","agg_star","funcname","order","withinGroup","agg_within_group","agg_order","call","agg_distinct","func_variadic","agg_filter","over","content","unique","concurrent","idxname","indexParams","whereClause","expr","cols","selectStmt","rel","larg","isNatural","jointype","quals","usingClause","rarg","JoinExpr","alias","using","wrapped","strengths","strength","lockedRels","nulltesttype","number","lateral","funcs","functions","funcCall","calls","is_rowsfrom","ordinality","defList","subquery","method","repeatable","inhOpt","relpersistence","schemaname","relname","row_format","withClause","valuesLists","sets","all","distinctClause","clause","e","targetList","intoClause","fromClause","lists","groupClause","havingClause","windowClause","windows","w","window","WindowDef","sortClause","limitCount","limitOffset","lockingClause","forEach","options","elem","find","el","hasOwnProperty","DefElem","roleSpec","action","relkind","missing_ok","cmds","subtype","def","vals","if_not_exists","extname","opt","removeType","objects","behavior","policy_name","table","cmd_name","roles","with_check","qual","view","into","isconstraint","trigname","timing","TRIGGER_EVENTS","INSERT","DELETE","UPDATE","TRUNCATE","events","columns","transitionRels","TriggerTransition","isNew","isTable","deferrable","initdeferred","row","whenClause","exists","domainname","tableElts","inhRelations","Number","constraint","contype","conname","pktable","pk_attrs","fk_attrs","ConstraintStmt","getExclusionGroup","nde","out","exclusions","excl","IndexElem","b","access_method","CONSTRAINT_TYPES","CONSTR_FOREIGN","ReferenceConstraint","raw_expr","fk_del_action","fk_upd_action","fk_matchtype","is_no_inherit","skip_validation","CONSTR_EXCLUSION","ExclusionConstraint","priv_name","VARIABLESET_TYPES","VAR_SET_VALUE","is_local","VAR_SET_DEFAULT","VAR_SET_CURRENT","VAR_SET_MULTI","TRANSACTION","VAR_RESET","VAR_RESET_ALL","funcargs","mode","argType","defexpr","parameters","parametersList","FunctionParameter","returns","returnType","option","roletype","ROLESPEC_TYPES","ROLESPEC_CSTRING","rolename","ROLESPEC_CURRENT_USER","ROLESPEC_SESSION_USER","ROLESPEC_PUBLIC","getTypeFromNode","nodeObj","GRANTOBJECT_TYPES","ACL_OBJECT_RELATION","targtype","GRANTTARGET_TYPES","ACL_TARGET_ALL_IN_SCHEMA","ACL_TARGET_DEFAULTS","ACL_OBJECT_SEQUENCE","ACL_OBJECT_DATABASE","ACL_OBJECT_DOMAIN","ACL_OBJECT_FDW","ACL_OBJECT_FOREIGN_SERVER","ACL_OBJECT_FUNCTION","ACL_OBJECT_LANGUAGE","ACL_OBJECT_LARGEOBJECT","ACL_OBJECT_NAMESPACE","ACL_OBJECT_TABLESPACE","ACL_OBJECT_TYPE","ACL_OBJECT_COLUMN","is_grant","grant_option","privileges","grantees","granted_roles","grantee_roles","admin_opt","roleOption","val1","val2","stmt_type","ROLESTMT_TYPES","ROLESTMT_USER","ROLESTMT_GROUP","role","opts","search","begin","nodeOpts","index","indexOf","obj","set","flag","lopts","start","TRANSACTIONSTMT_TYPES","TRANS_STMT_BEGIN","TRANS_STMT_START","TRANS_STMT_COMMIT","TRANS_STMT_ROLLBACK","TRANS_STMT_SAVEPOINT","TRANS_STMT_RELEASE","TRANS_STMT_ROLLBACK_TO","TRANS_STMT_PREPARE","gid","TRANS_STMT_COMMIT_PREPARED","TRANS_STMT_ROLLBACK_PREPARED","sortby_dir","SORTBYDIR_TYPES","SORTBY_ASC","SORTBY_DESC","SORTBY_USING","useOp","SORTBY_DEFAULT","sortby_nulls","SORTBYNULLS_TYPES","SORTBY_NULLS_FIRST","SORTBY_NULLS_LAST","objname","subLinkType","subselect","testexpr","operName","last","deparseInterval","setof","typmods","arrayBounds","result","empty","partitionClause","orderClause","frameOptions","deparseFrameOptions","refname","startOffset","endOffset","windowParts","useParens","partition","orders","recursive","ctes","refName","FRAMEOPTION_NONDEFAULT","FRAMEOPTION_RANGE","FRAMEOPTION_ROWS","FRAMEOPTION_BETWEEN","FRAMEOPTION_START_UNBOUNDED_PRECEDING","FRAMEOPTION_END_UNBOUNDED_PRECEDING","FRAMEOPTION_START_UNBOUNDED_FOLLOWING","FRAMEOPTION_END_UNBOUNDED_FOLLOWING","FRAMEOPTION_START_CURRENT_ROW","FRAMEOPTION_END_CURRENT_ROW","FRAMEOPTION_START_VALUE_PRECEDING","FRAMEOPTION_END_VALUE_PRECEDING","FRAMEOPTION_START_VALUE_FOLLOWING","FRAMEOPTION_END_VALUE_FOLLOWING","between","intervals","interval","part","mask","MASKS","BITS","invert","INTERVALS","YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","INTERVAL_FULL_RANGE"],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;;;AAeA,MAAMA,QAAQC,QAAQ,OAAR,CAAd;;AAEA,MAAMC,OAAO,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC3B,QAAM,IAAIC,KAAJ,CAAU,kBAAO,uBAAP,EAAgCF,IAAhC,EAAsCG,KAAKC,SAAL,CAAeH,IAAf,CAAtC,CAAV,CAAN;AACD,CAFD;;AAIA;AACA,MAAMI,iBAAiB,CACrB,KADqB,EAErB,SAFqB,EAGrB,SAHqB,EAIrB,KAJqB,EAKrB,KALqB,EAMrB,OANqB,EAOrB,IAPqB,EAQrB,KARqB,EASrB,YATqB,EAUrB,MAVqB,EAWrB,MAXqB,EAYrB,MAZqB,EAarB,OAbqB,EAcrB,SAdqB,EAerB,QAfqB,EAgBrB,YAhBqB,EAiBrB,QAjBqB,EAkBrB,iBAlBqB,EAmBrB,cAnBqB,EAoBrB,cApBqB,EAqBrB,cArBqB,EAsBrB,mBAtBqB,EAuBrB,cAvBqB,EAwBrB,SAxBqB,EAyBrB,YAzBqB,EA0BrB,MA1BqB,EA2BrB,UA3BqB,EA4BrB,IA5BqB,EA6BrB,MA7BqB,EA8BrB,KA9BqB,EA+BrB,QA/BqB,EAgCrB,OAhCqB,EAiCrB,OAjCqB,EAkCrB,KAlCqB,EAmCrB,SAnCqB,EAoCrB,MApCqB,EAqCrB,OArCqB,EAsCrB,OAtCqB,EAuCrB,QAvCqB,EAwCrB,IAxCqB,EAyCrB,WAzCqB,EA0CrB,WA1CqB,EA2CrB,MA3CqB,EA4CrB,SA5CqB,EA6CrB,SA7CqB,EA8CrB,OA9CqB,EA+CrB,WA/CqB,EAgDrB,gBAhDqB,EAiDrB,KAjDqB,EAkDrB,MAlDqB,EAmDrB,QAnDqB,EAoDrB,IApDqB,EAqDrB,MArDqB,EAsDrB,IAtDqB,EAuDrB,OAvDqB,EAwDrB,SAxDqB,EAyDrB,SAzDqB,EA0DrB,YA1DqB,EA2DrB,WA3DqB,EA4DrB,QA5DqB,EA6DrB,cA7DqB,EA8DrB,MA9DqB,EA+DrB,WA/DqB,EAgErB,OAhEqB,EAiErB,MAjEqB,EAkErB,IAlEqB,EAmErB,UAnEqB,EAoErB,MApEqB,EAqErB,OArEqB,EAsErB,QAtEqB,EAuErB,MAvEqB,EAwErB,OAxEqB,EAyErB,UAzEqB,EA0ErB,MA1EqB,EA2ErB,OA3EqB,EA4ErB,QA5EqB,EA6ErB,MA7EqB,CAAvB;;AAgFA,MAAMC,aAAaC,SAASF,eAAeG,QAAf,CAAwBD,MAAME,WAAN,EAAxB,CAA5B;;AAEA;AACA;AACA,MAAMC,cAAcH,SAClBA,MAAMI,KAAN,CAAY,yCAAZ,KACAJ,MAAMI,KAAN,CAAY,IAAZ,CADA,IAEAL,WAAWC,KAAX,CAHF;;MAKQK,I,GAASC,gB,CAATD,I;;;AAER,MAAME,UAAUC,KAAK;AACnB,SAAOF,iBAAEG,MAAF,CAASH,iBAAEC,OAAF,CAAUC,CAAV,CAAT,EAAuBE,KAAK;AACjC,QAAIA,KAAK,IAAT,EAAe;AACb,aAAO,KAAP;AACD;;AAED,WAAOA,EAAEC,QAAF,GAAaC,MAApB;AACD,GANM,CAAP;AAOD,CARD;;AAUA,MAAMC,SAASC,UAAU;AACvB,SAAO,MAAMA,MAAN,GAAe,GAAtB;AACD,CAFD;;AAIA,MAAMC,SAAS,SAATA,MAAS,CAACC,IAAD;AAAA,MAAOC,KAAP,uEAAe,CAAf;AAAA,SAAqBD,IAArB;AAAA,CAAf;;AAEe,MAAME,QAAN,CAAe;AAC5B,SAAOC,OAAP,CAAeC,KAAf,EAAsB;AACpB,WAAO,IAAIF,QAAJ,CAAaE,KAAb,EAAoBC,YAApB,EAAP;AACD;;AAEDC,cAAYC,IAAZ,EAAkB;AAChB,SAAKA,IAAL,GAAYA,IAAZ;AACD;;AAEDF,iBAAe;AACb,WAAO,KAAKE,IAAL,CAAUC,GAAV,CAAc9B,QAAS,GAAE,KAAKyB,OAAL,CAAazB,IAAb,CAAmB,GAA5C,EAAgD+B,IAAhD,CAAqD,MAArD,CAAP;AACD;;AAEDC,eAAaC,KAAb,EAAoBC,OAApB,EAA6B;AAC3B,WAAOD,MAAMH,GAAN,CAAU9B,QAAQ;AACvB,aAAOY,iBAAEuB,OAAF,CAAUnC,IAAV,IAAkB,KAAKoC,IAAL,CAAUpC,IAAV,CAAlB,GAAoC,KAAKyB,OAAL,CAAazB,IAAb,EAAmBkC,OAAnB,CAA3C;AACD,KAFM,CAAP;AAGD;;AAEDE,OAAKH,KAAL,EAA2C;AAAA,QAA/BI,SAA+B,uEAAnB,IAAmB;AAAA,QAAbC,MAAa,uEAAJ,EAAI;;AACzC,QAAI,CAACL,KAAL,EAAY;AACV,aAAO,EAAP;AACD;;AAED,WAAO,KAAKD,YAAL,CAAkBC,KAAlB,EACJH,GADI,CACAS,KAAM,GAAED,MAAO,GAAEC,CAAE,EADnB,EAEJR,IAFI,CAECM,SAFD,CAAP;AAGD;;AAEDG,aAAWP,KAAX,EAAoC;AAAA,QAAlBI,SAAkB,uEAAN,IAAM;;AAClC,WAAO,KAAKD,IAAL,CAAUH,KAAV,EAAiBI,SAAjB,EACJI,KADI,CACEJ,SADF,EAEJP,GAFI,CAEAY,KAAK,KAAKC,KAAL,CAAWD,EAAEE,IAAF,EAAX,CAFL,EAGJb,IAHI,CAGCM,SAHD,CAAP;AAID;;AAEDM,QAAMrC,KAAN,EAAa;AACX,QAAIA,SAAS,IAAb,EAAmB;AACjB,aAAO,IAAP;AACD;;AAED,QAAIM,iBAAEuB,OAAF,CAAU7B,KAAV,CAAJ,EAAsB;AACpB,aAAOA,MAAMwB,GAAN,CAAUhB,KAAK,KAAK6B,KAAL,CAAW7B,CAAX,CAAf,CAAP;AACD;;AAED,QAAIL,YAAYH,KAAZ,CAAJ,EAAwB;AACtB,aAAO,MAAMA,KAAN,GAAc,GAArB;AACD;AACD,WAAOA,KAAP;AACD;;AAED;AACAuC,SAAOC,OAAP,EAAgB;AACd,WAAO,MAAMA,QAAQC,OAAR,CAAgB,IAAhB,EAAsB,IAAtB,CAAN,GAAoC,GAA3C;AACD;;AAEDC,kBAAgBC,QAAhB,EAA0BC,IAA1B,EAAgC;AAC9B,YAAQD,QAAR;AACE,WAAK,QAAL;AACE,YAAIC,QAAQ,IAAZ,EAAkB;AAChB,iBAAO,MAAP;AACD;AACD;AACA;AACA,eAAO,mBAAP;AACF,WAAK,SAAL;AACE,eAAO,SAAP;AACF,WAAK,SAAL;AACE,eAAO,SAAP;AACF,WAAK,MAAL;AACE,eAAO,SAAP;AACF,WAAK,MAAL;AACE,eAAO,UAAP;AACF,WAAK,MAAL;AACE,eAAO,KAAP;AACF,WAAK,MAAL;AACE,eAAO,QAAP;AACF,WAAK,MAAL;AACA,WAAK,QAAL;AACE,eAAO,MAAP;AACF,WAAK,QAAL;AACE,eAAO,mBAAP;AACF,WAAK,MAAL;AACE;AACA,eAAO,iBAAP;AACF,WAAK,MAAL;AACE,eAAO,iBAAP;AACF,WAAK,MAAL;AACE,eAAO,MAAP;AACF,WAAK,QAAL;AACE,eAAO,mBAAP;AACF,WAAK,WAAL;AACE,eAAO,WAAP;AACF,WAAK,aAAL;AACE,eAAO,wBAAP;AACF,WAAK,UAAL;AACE,eAAO,UAAP;AACF,WAAK,KAAL;AACE,eAAO,KAAP;AACF;AACE,cAAM,IAAIjD,KAAJ,CAAU,kBAAO,yBAAP,EAAkCgD,QAAlC,CAAV,CAAN;AA3CJ;AA6CD;;AAEDlD,OAAKoD,KAAL,EAAYC,IAAZ,EAAkB;AAAA,qBACUD,MAAMrB,GAAN,CAAUuB,QAAQ,KAAK5B,OAAL,CAAa4B,IAAb,CAAlB,CADV;AAAA;;AAAA,UACRC,OADQ;AAAA,UACCvD,IADD;;;AAGhB,UAAMwD,OAAO,CAACF,IAAD,EAAOH,IAAP,KAAgB;AAC3B,UAAIA,QAAQ,IAAZ,EAAkB;AAChB,eAAOG,OAAO,GAAP,GAAaH,IAAb,GAAoB,GAA3B;AACD;;AAED,aAAOG,IAAP;AACD,KAND;;AAQA;AACA,QAAIF,MAAM,CAAN,EAASK,MAAT,CAAgBC,GAAhB,KAAwB,MAA5B,EAAoC;AAClCN,YAAM,CAAN,EAASK,MAAT,CAAgBC,GAAhB,GAAsB,QAAtB;AACD;;AAED,QAAIH,YAAY,YAAhB,EAA8B;AAC5B,aAAOC,KAAK,KAAKnB,IAAL,CAAUe,KAAV,EAAiB,GAAjB,CAAL,EAA4BC,IAA5B,CAAP;AACD;;AAED,UAAMM,MAAM,KAAKV,eAAL,CAAqBjD,IAArB,EAA2BqD,IAA3B,CAAZ;;AAEA,WAAOG,KAAKG,GAAL,EAAUN,IAAV,CAAP;AACD;;AAED3B,UAAQkC,IAAR,EAAczB,OAAd,EAAuB;AACrB,QAAIyB,QAAQ,IAAZ,EAAkB;AAChB,aAAO,IAAP;AACD;;AAED,QAAI/C,iBAAEgD,QAAF,CAAWD,IAAX,CAAJ,EAAsB;AACpB,aAAOA,IAAP;AACD;;AAED,UAAM5D,OAAOY,KAAKgD,IAAL,EAAW,CAAX,CAAb;AACA,UAAM3D,OAAOY,iBAAEiD,MAAF,CAASF,IAAT,EAAe,CAAf,CAAb;;AAEA,QAAI,KAAK5D,IAAL,KAAc,IAAlB,EAAwB;AACtB,YAAM,IAAIE,KAAJ,CAAUF,OAAO,qBAAjB,CAAN;AACD;;AAED,WAAO,KAAKA,IAAL,EAAWC,IAAX,EAAiBkC,OAAjB,CAAP;AACD;;AAED,GAAC,SAAD,EAAYlC,IAAZ,EAAkB;AAChB,WAAO,KAAKyB,OAAL,CAAazB,KAAK8D,IAAlB,CAAP;AACD;;AAED,GAAC,QAAD,EAAW9D,IAAX,EAAiBkC,OAAjB,EAA0B;AACxB,UAAM6B,SAAS,EAAf;;AAEA,YAAQ/D,KAAKgE,IAAb;AACE,WAAK,CAAL;AAAQ;AACN,YAAIhE,KAAKiE,KAAT,EAAgB;AACdF,iBAAOG,IAAP,CAAY/C,OAAO,KAAKM,OAAL,CAAazB,KAAKiE,KAAlB,CAAP,CAAZ;AACD;;AAED,YAAIjE,KAAKqD,IAAL,CAAUnC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,gBAAMiD,SAAS,KAAK1C,OAAL,CAAazB,KAAKqD,IAAL,CAAU,CAAV,CAAb,CAAf;AACA,gBAAMe,WAAW,KAAK3C,OAAL,CAAazB,KAAKqD,IAAL,CAAU,CAAV,CAAb,CAAjB;AACAU,iBAAOG,IAAP,CAAa,YAAWC,MAAO,IAAGC,QAAS,GAA3C;AACD,SAJD,MAIO;AACLL,iBAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKqD,IAAL,CAAU,CAAV,CAAb,EAA2BnB,OAA3B,CAAZ;AACD;;AAED,YAAIlC,KAAKqE,KAAT,EAAgB;AACdN,iBAAOG,IAAP,CAAY/C,OAAO,KAAKM,OAAL,CAAazB,KAAKqE,KAAlB,EAAyBnC,OAAzB,CAAP,CAAZ;AACD;;AAED,YAAI6B,OAAO7C,MAAP,KAAkB,CAAtB,EAAyB;AACvB,iBAAOC,OAAO4C,OAAOhC,IAAP,CAAY,EAAZ,CAAP,CAAP;AACD;;AAED,eAAOZ,OAAO4C,OAAOhC,IAAP,CAAY,GAAZ,CAAP,CAAP;;AAEF,WAAK,CAAL;AAAQ;AACNgC,eAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKiE,KAAlB,CAAZ;AACAF,eAAOG,IAAP,CAAY,kBAAO,UAAP,EAAmB,KAAKzC,OAAL,CAAazB,KAAKqE,KAAlB,EAAyBnC,OAAzB,CAAnB,CAAZ;AACA,eAAO6B,OAAOhC,IAAP,CAAa,IAAG,KAAKN,OAAL,CAAazB,KAAKqD,IAAL,CAAU,CAAV,CAAb,EAA2BnB,OAA3B,CAAoC,GAApD,CAAP;;AAEF,WAAK,CAAL;AAAQ;AACN6B,eAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKiE,KAAlB,EAAyB/B,OAAzB,CAAZ;AACA6B,eAAOG,IAAP,CAAY,kBAAO,UAAP,EAAmB,KAAKzC,OAAL,CAAazB,KAAKqE,KAAlB,EAAyBnC,OAAzB,CAAnB,CAAZ;AACA,eAAO6B,OAAOhC,IAAP,CAAa,IAAG,KAAKN,OAAL,CAAazB,KAAKqD,IAAL,CAAU,CAAV,CAAb,EAA2BnB,OAA3B,CAAoC,GAApD,CAAP;;AAEF,WAAK,CAAL;AAAQ;AACN,eAAO,kBACL,wBADK,EAEL,KAAKT,OAAL,CAAazB,KAAKiE,KAAlB,EAAyB/B,OAAzB,CAFK,EAGL,KAAKT,OAAL,CAAazB,KAAKqE,KAAlB,EAAyBnC,OAAzB,CAHK,CAAP;;AAMF,WAAK,CAAL;AAAQ;AACN,eAAO,kBACL,gBADK,EAEL,KAAKT,OAAL,CAAazB,KAAKiE,KAAlB,EAAyB/B,OAAzB,CAFK,EAGL,KAAKT,OAAL,CAAazB,KAAKqE,KAAlB,EAAyBnC,OAAzB,CAHK,CAAP;;AAMF,WAAK,CAAL;AAAQ;AACN;AACA,gBAAMoC,KAAKtE,KAAKqD,IAAL,CAAU,CAAV,EAAaG,MAAb,CAAoBC,GAApB,KAA4B,GAA5B,GAAkC,OAAlC,GAA4C,WAAvD;AACA,iBAAO,kBACL,YADK,EAEL,KAAKhC,OAAL,CAAazB,KAAKiE,KAAlB,EAAyB/B,OAAzB,CAFK,EAGLoC,EAHK,EAIL,KAAKlC,IAAL,CAAUpC,KAAKqE,KAAf,EAAsBnC,OAAtB,CAJK,CAAP;AAMD;;AAED,WAAK,CAAL;AAAQ;AACN;AACA,gBAAMkC,WAAWpE,KAAKqD,IAAL,CAAU,CAAV,EAAaG,MAAb,CAAoBC,GAApB,KAA4B,GAA5B,GAAkC,IAAlC,GAAyC,QAA1D;;AAEA,iBAAO,kBACL,YADK,EAEL,KAAKhC,OAAL,CAAazB,KAAKiE,KAAlB,EAAyB/B,OAAzB,CAFK,EAGLkC,QAHK,EAIL,KAAKhC,IAAL,CAAUpC,KAAKqE,KAAf,EAAsBnC,OAAtB,CAJK,CAAP;AAMD;;AAED,WAAK,CAAL;AACE,eAAOpC,KAAK,QAAL,EAAeE,IAAf,CAAP;;AAEF,WAAK,CAAL;AACE+D,eAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKiE,KAAlB,EAAyB/B,OAAzB,CAAZ;;AAEA,YAAIlC,KAAKqD,IAAL,CAAU,CAAV,EAAaG,MAAb,CAAoBC,GAApB,KAA4B,KAAhC,EAAuC;AACrCM,iBAAOG,IAAP,CACE,kBAAO,eAAP,EAAwB,KAAKzC,OAAL,CAAazB,KAAKqE,KAAlB,EAAyBnC,OAAzB,CAAxB,CADF;AAGD,SAJD,MAIO;AACL6B,iBAAOG,IAAP,CAAY,kBAAO,WAAP,EAAoB,KAAKzC,OAAL,CAAazB,KAAKqE,KAAlB,EAAyBnC,OAAzB,CAApB,CAAZ;AACD;;AAED,eAAO6B,OAAOhC,IAAP,CAAY,GAAZ,CAAP;;AAEF,WAAK,CAAL;AACEgC,eAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKiE,KAAlB,EAAyB/B,OAAzB,CAAZ;;AAEA,YAAIlC,KAAKqD,IAAL,CAAU,CAAV,EAAaG,MAAb,CAAoBC,GAApB,KAA4B,MAAhC,EAAwC;AACtCM,iBAAOG,IAAP,CACE,kBAAO,gBAAP,EAAyB,KAAKzC,OAAL,CAAazB,KAAKqE,KAAlB,EAAyBnC,OAAzB,CAAzB,CADF;AAGD,SAJD,MAIO;AACL6B,iBAAOG,IAAP,CAAY,kBAAO,YAAP,EAAqB,KAAKzC,OAAL,CAAazB,KAAKqE,KAAlB,EAAyBnC,OAAzB,CAArB,CAAZ;AACD;;AAED,eAAO6B,OAAOhC,IAAP,CAAY,GAAZ,CAAP;;AAEF,WAAK,EAAL;AACE;AACAgC,eAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKiE,KAAlB,EAAyB/B,OAAzB,CAAZ;;AAEA,YAAIlC,KAAKqD,IAAL,CAAU,CAAV,EAAaG,MAAb,CAAoBC,GAApB,KAA4B,IAAhC,EAAsC;AACpC,cAAI,KAAKhC,OAAL,CAAazB,KAAKqE,KAAL,CAAWE,QAAX,CAAoBnB,IAApB,CAAyB,CAAzB,EAA4BoB,IAAzC,EAA+CtC,OAA/C,CAAJ,EAA6D;AAC3D6B,mBAAOG,IAAP,CACE,kBACE,mBADF,EAEE,KAAKzC,OAAL,CAAazB,KAAKqE,KAAL,CAAWE,QAAX,CAAoBnB,IAApB,CAAyB,CAAzB,CAAb,EAA0ClB,OAA1C,CAFF,CADF;AAMD,WAPD,MAOO;AACL6B,mBAAOG,IAAP,CACE,kBACE,6BADF,EAEE,KAAKzC,OAAL,CAAazB,KAAKqE,KAAL,CAAWE,QAAX,CAAoBnB,IAApB,CAAyB,CAAzB,CAAb,EAA0ClB,OAA1C,CAFF,EAGE,KAAKT,OAAL,CAAazB,KAAKqE,KAAL,CAAWE,QAAX,CAAoBnB,IAApB,CAAyB,CAAzB,CAAb,EAA0ClB,OAA1C,CAHF,CADF;AAOD;AACF,SAjBD,MAiBO,IAAI,KAAKT,OAAL,CAAazB,KAAKqE,KAAL,CAAWE,QAAX,CAAoBnB,IAApB,CAAyB,CAAzB,EAA4BoB,IAAzC,EAA+CtC,OAA/C,CAAJ,EAA6D;AAClE6B,iBAAOG,IAAP,CACE,kBACE,eADF,EAEE,KAAKzC,OAAL,CAAazB,KAAKqE,KAAL,CAAWE,QAAX,CAAoBnB,IAApB,CAAyB,CAAzB,CAAb,EAA0ClB,OAA1C,CAFF,CADF;AAMD,SAPM,MAOA;AACL6B,iBAAOG,IAAP,CACE,kBACE,yBADF,EAEE,KAAKzC,OAAL,CAAazB,KAAKqE,KAAL,CAAWE,QAAX,CAAoBnB,IAApB,CAAyB,CAAzB,CAAb,EAA0ClB,OAA1C,CAFF,EAGE,KAAKT,OAAL,CAAazB,KAAKqE,KAAL,CAAWE,QAAX,CAAoBnB,IAApB,CAAyB,CAAzB,CAAb,EAA0ClB,OAA1C,CAHF,CADF;AAOD;;AAED,eAAO6B,OAAOhC,IAAP,CAAY,GAAZ,CAAP;;AAEF,WAAK,EAAL;AACEgC,eAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKiE,KAAlB,EAAyB/B,OAAzB,CAAZ;AACA6B,eAAOG,IAAP,CACE,kBACE,mBADF,EAEE,KAAKzC,OAAL,CAAazB,KAAKqE,KAAL,CAAW,CAAX,CAAb,EAA4BnC,OAA5B,CAFF,EAGE,KAAKT,OAAL,CAAazB,KAAKqE,KAAL,CAAW,CAAX,CAAb,EAA4BnC,OAA5B,CAHF,CADF;AAOA,eAAO6B,OAAOhC,IAAP,CAAY,GAAZ,CAAP;;AAEF,WAAK,EAAL;AACEgC,eAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKiE,KAAlB,EAAyB/B,OAAzB,CAAZ;AACA6B,eAAOG,IAAP,CACE,kBACE,uBADF,EAEE,KAAKzC,OAAL,CAAazB,KAAKqE,KAAL,CAAW,CAAX,CAAb,EAA4BnC,OAA5B,CAFF,EAGE,KAAKT,OAAL,CAAazB,KAAKqE,KAAL,CAAW,CAAX,CAAb,EAA4BnC,OAA5B,CAHF,CADF;AAOA,eAAO6B,OAAOhC,IAAP,CAAY,GAAZ,CAAP;;AAEF;AACE,eAAOjC,KAAK,QAAL,EAAeE,IAAf,CAAP;AAnKJ;AAqKD;;AAED,GAAC,OAAD,EAAUA,IAAV,EAAgBkC,OAAhB,EAAyB;AACvB,UAAMmB,OAAOrD,KAAKyE,SAAlB;;AAEA,UAAMV,SAAS,CAAE,IAAF,CAAf;;AAEA,QAAI/D,KAAK0E,QAAT,EAAmB;AACjBX,aAAOG,IAAP,CAAYb,OAAOlC,OAAO,KAAKiB,IAAL,CAAUpC,KAAK0E,QAAf,CAAP,CAAnB;AACD,KAFD,MAEO;AACLX,aAAOG,IAAP,CAAY,KAAKvB,KAAL,CAAWU,IAAX,CAAZ;AACD;;AAED,WAAOU,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,aAAD,EAAgB/B,IAAhB,EAAsB;AACpB,WAAO,kBAAO,WAAP,EAAoB,KAAKoC,IAAL,CAAUpC,KAAK2E,QAAf,CAApB,CAAP;AACD;;AAED,GAAC,SAAD,EAAY3E,IAAZ,EAAkBkC,OAAlB,EAA2B;AACzB,QAAIlC,KAAK4E,GAAL,CAASpB,MAAb,EAAqB;AACnB,aAAO,KAAKX,MAAL,CAAY,KAAKpB,OAAL,CAAazB,KAAK4E,GAAlB,EAAuB1C,OAAvB,CAAZ,CAAP;AACD;;AAED,WAAO,KAAKT,OAAL,CAAazB,KAAK4E,GAAlB,EAAuB1C,OAAvB,CAAP;AACD;;AAED,GAAC,WAAD,EAAclC,IAAd,EAAoB;AAClB,QAAIA,KAAK6E,IAAT,EAAe;AACb,aAAO,kBACL,SADK,EAEL,KAAKpD,OAAL,CAAazB,KAAK6E,IAAlB,CAFK,EAGL,KAAKpD,OAAL,CAAazB,KAAK8E,IAAlB,CAHK,CAAP;AAKD;;AAED,WAAO,kBAAO,MAAP,EAAe,KAAKrD,OAAL,CAAazB,KAAK8E,IAAlB,CAAf,CAAP;AACD;;AAED,GAAC,eAAD,EAAkB9E,IAAlB,EAAwB;AACtB,UAAM+D,SAAS,CAAG,IAAG,KAAKtC,OAAL,CAAazB,KAAK+E,GAAlB,CAAuB,GAA7B,CAAf;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIhF,KAAKiF,WAAL,CAAiB/D,MAArC,EAA6C8D,GAA7C,EAAkD;AAChD,YAAME,UAAUlF,KAAKiF,WAAL,CAAiBD,CAAjB,CAAhB;;AAEA,UAAIE,QAAQ1B,MAAR,IAAkB0B,QAAQC,MAA9B,EAAsC;AACpC,cAAM7E,QAAQ4E,QAAQC,MAAR,GAAiB,GAAjB,GAAuB,KAAKxC,KAAL,CAAWuC,QAAQ1B,MAAR,CAAeC,GAA1B,CAArC;;AAEAM,eAAOG,IAAP,CAAa,IAAG5D,KAAM,EAAtB;AACD,OAJD,MAIO;AACLyD,eAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAayD,OAAb,CAAZ;AACD;AACF;;AAED,WAAOnB,OAAOhC,IAAP,CAAY,EAAZ,CAAP;AACD;;AAED,GAAC,QAAD,EAAW/B,IAAX,EAAiBkC,OAAjB,EAA0B;AACxB,WAAO,GAAP;AACD;;AAED,GAAC,WAAD,EAAclC,IAAd,EAAoB;AAClB,UAAMsC,SAAStC,KAAKyD,GAAL,CAAS,CAAT,CAAf;AACA,WAAQ,GAAEnB,MAAO,IAAGtC,KAAKyD,GAAL,CAAS2B,SAAT,CAAmB,CAAnB,CAAsB,GAA1C;AACD;;AAED,GAAC,UAAD,EAAapF,IAAb,EAAmB;AACjB,YAAQA,KAAKqF,MAAb;AACE,WAAK,CAAL;AACE,eAAOlE,OAAO,KAAKiB,IAAL,CAAUpC,KAAKoD,IAAf,EAAqB,OAArB,CAAP,CAAP;AACF,WAAK,CAAL;AACE,eAAOjC,OAAO,KAAKiB,IAAL,CAAUpC,KAAKoD,IAAf,EAAqB,MAArB,CAAP,CAAP;AACF,WAAK,CAAL;AACE,eAAO,kBAAO,UAAP,EAAmB,KAAK3B,OAAL,CAAazB,KAAKoD,IAAL,CAAU,CAAV,CAAb,CAAnB,CAAP;AACF;AACE,eAAOtD,KAAK,UAAL,EAAiBE,IAAjB,CAAP;AARJ;AAUD;;AAED,GAAC,aAAD,EAAgBA,IAAhB,EAAsB;AACpB,UAAM+D,SAAS,EAAf;;AAEAA,WAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK+E,GAAlB,CAAZ;;AAEA,UAAMO,QAAQ,CACZ,SADY,EAEZ,aAFY,EAGZ,UAHY,EAIZ,cAJY,EAKZ,YALY,EAMZ,gBANY,CAAd;;AASAvB,WAAOG,IAAP,CAAYoB,MAAMtF,KAAKuF,YAAX,CAAZ;;AAEA,WAAOxB,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,UAAD,EAAa/B,IAAb,EAAmB;AACjB,UAAM+D,SAAS,CAAE,MAAF,CAAf;;AAEA,QAAI/D,KAAK+E,GAAT,EAAc;AACZhB,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK+E,GAAlB,CAAZ;AACD;;AAED,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIhF,KAAKoD,IAAL,CAAUlC,MAA9B,EAAsC8D,GAAtC,EAA2C;AACzCjB,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKoD,IAAL,CAAU4B,CAAV,CAAb,CAAZ;AACD;;AAED,QAAIhF,KAAKwF,SAAT,EAAoB;AAClBzB,aAAOG,IAAP,CAAY,MAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKwF,SAAlB,CAAZ;AACD;;AAEDzB,WAAOG,IAAP,CAAY,KAAZ;;AAEA,WAAOH,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,cAAD,EAAiB/B,IAAjB,EAAuB;AACrB,WAAO,kBAAO,cAAP,EAAuB,KAAKoC,IAAL,CAAUpC,KAAKoD,IAAf,CAAvB,CAAP;AACD;;AAED,GAAC,eAAD,EAAkBpD,IAAlB,EAAwB;AACtB,UAAM+D,SAAS,EAAf;;AAEA,QAAI/D,KAAK+E,GAAT,EAAc;AACZhB,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK+E,GAAlB,CAAZ;AACD;;AAEDhB,WAAOG,IAAP,CAAY,SAAZ;;AAEA,QAAIlE,KAAKyF,QAAT,EAAmB;AACjB1B,aAAOG,IAAP,CAAY,KAAKvB,KAAL,CAAW,KAAKX,YAAL,CAAkBhC,KAAKyF,QAAvB,CAAX,CAAZ;AACD;;AAED,WAAO1B,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,mBAAD,EAAsB/B,IAAtB,EAA4B;AAC1B,UAAM+D,SAAS,EAAf;;AAEAA,WAAOG,IAAP,CAAY,aAAZ;AACAH,WAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK0F,OAAlB,CAAZ;AACA3B,WAAOG,IAAP,CAAY,IAAZ;AACAH,WAAOG,IAAP,CAAY,GAAZ;AACAH,WAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAK2F,UAAf,EAA2B,KAA3B,EAAkC,IAAlC,CAAZ;AACA5B,WAAOG,IAAP,CAAY,GAAZ;;AAEA,WAAOH,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,YAAD,EAAe/B,IAAf,EAAqB;AACnB,UAAM+D,SAAS,EAAf;;AAEA,QAAI,CAAC,sBAAU/D,KAAK4F,UAAf,EAA2B,eAA3B,CAAL,EAAkD;AAChD,YAAM,IAAI3F,KAAJ,CAAU,gCAAV,CAAN;AACD;AACD,QAAI,CAAC,sBAAUD,KAAK6F,YAAf,EAA6B,cAA7B,CAAL,EAAmD;AACjD,YAAM,IAAI5F,KAAJ,CAAU,kCAAV,CAAN;AACD;;AAED8D,WAAOG,IAAP,CAAY,OAAZ;AACAH,WAAOG,IAAP,CAAY,OAAZ;AACAH,WAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK8F,QAAlB,CAAZ;AACA/B,WAAOG,IAAP,CAAY,QAAZ;AACAH,WAAOG,IAAP,CAAY,QAAZ;AACAH,WAAOG,IAAP,CAAYlE,KAAK+F,OAAjB;AACAhC,WAAOG,IAAP,CAAY,IAAZ;AACAH,WAAOG,IAAP,CAAYlE,KAAKgG,OAAjB;;AAEA,WAAOjC,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,WAAD,EAAc/B,IAAd,EAAoB;AAClB,UAAM+D,SAAS,CAAE,KAAKpB,KAAL,CAAW3C,KAAKiG,OAAhB,CAAF,CAAf;;AAEAlC,WAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKiD,QAAlB,CAAZ;;AAEA,QAAIjD,KAAKkG,WAAT,EAAsB;AACpBnC,aAAOG,IAAP,CAAY,OAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKkG,WAAlB,CAAZ;AACD;;AAED,QAAIlG,KAAKmG,WAAT,EAAsB;AACpBpC,aAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAKmG,WAAf,EAA4B,GAA5B,CAAZ;AACD;;AAED,QAAInG,KAAKoG,UAAT,EAAqB;AACnBrC,aAAOG,IAAP,CAAY,SAAZ;AACA,YAAMT,MAAM7D,MAAMyG,GAAN,CACVrG,IADU,EAEV,gDAFU,CAAZ;AAIA+D,aAAOG,IAAP,CAAY,KAAKvB,KAAL,CAAWc,GAAX,CAAZ;AACD;;AAED,WAAO7C,iBAAEC,OAAF,CAAUkD,MAAV,EAAkBhC,IAAlB,CAAuB,GAAvB,CAAP;AACD;;AAED,GAAC,kBAAD,EAAqB/B,IAArB,EAA2B;AACzB,QAAIA,KAAKsE,EAAL,KAAY,CAAhB,EAAmB;AACjB,aAAO,cAAP;AACD;AACD,QAAItE,KAAKsE,EAAL,KAAY,CAAhB,EAAmB;AACjB,aAAO,mBAAP;AACD;AACD,QAAItE,KAAKsE,EAAL,KAAY,EAAhB,EAAoB;AAClB,aAAO,cAAP;AACD;AACD,QAAItE,KAAKsE,EAAL,KAAY,EAAhB,EAAoB;AAClB,aAAO,cAAP;AACD;AACD,UAAM,IAAIrE,KAAJ,CAAW,MAAKD,KAAKsE,EAAG,mCAAxB,CAAN;AACD;;AAED,GAAC,WAAD,EAActE,IAAd,EAAoBkC,OAApB,EAA6B;AAC3B,UAAMoE,WAAW,CAAE,KAAF,EAAS,KAAT,CAAjB;AACA,UAAMC,SAASvG,KAAKuG,MAAL,CAAYzE,GAAZ,CAAgB0E,SAAS;AACtC,UAAIA,MAAMhD,MAAV,EAAkB;AAChB,cAAMlD,QAAQ,KAAKmB,OAAL,CAAa+E,KAAb,CAAd;AACA,YAAItE,YAAY,SAAZ,IAAyBoE,SAAS/F,QAAT,CAAkBD,MAAME,WAAN,EAAlB,CAA7B,EAAqE;AACnE,iBAAOF,MAAMmG,WAAN,EAAP;AACD;AACD,eAAO,KAAK9D,KAAL,CAAWrC,KAAX,CAAP;AACD;;AAED,aAAO,KAAKmB,OAAL,CAAa+E,KAAb,CAAP;AACD,KAVc,CAAf;AAWA,WAAOD,OAAOxE,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,aAAD,EAAgB/B,IAAhB,EAAsB;AACpB,UAAM+D,SAAS,EAAf;;AAEAA,WAAOG,IAAP,CAAY,SAAZ;AACAH,WAAOG,IAAP,CAAY,IAAZ;AACAH,WAAOG,IAAP,CAAY,wBAAYlE,KAAK0G,OAAjB,CAAZ;;AAEA,QAAI,sBAAU1G,KAAK0G,OAAf,EAAwB,aAAxB,CAAJ,EAA4C;AAC1C3C,aAAOG,IAAP,CAAY,GAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK2G,MAAL,CAAY,CAAZ,CAAb,CAAZ;AACA5C,aAAOG,IAAP,CAAY,IAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK2G,MAAL,CAAY,CAAZ,CAAb,CAAZ;AACA5C,aAAOG,IAAP,CAAY,GAAZ;AACD,KAND,MAMO,IAAI,sBAAUlE,KAAK0G,OAAf,EAAwB,sBAAxB,CAAJ,EAAqD;AAC1D3C,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK2G,MAAL,CAAY,CAAZ,CAAb,CAAZ;AACA5C,aAAOG,IAAP,CAAY,IAAZ;AACAH,aAAOG,IAAP,CAAY,QAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK2G,MAAL,CAAY,CAAZ,CAAb,CAAZ;AACD,KALM,MAKA,IACL,sBAAU3G,KAAK0G,OAAf,EAAwB,gBAAxB,KACA,sBAAU1G,KAAK0G,OAAf,EAAwB,iBAAxB,CAFK,EAGL;AACA3C,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK2G,MAAL,CAAY,CAAZ,CAAb,CAAZ;AACA5C,aAAOG,IAAP,CAAY,OAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK2G,MAAL,CAAY,CAAZ,CAAb,CAAZ;AACD,KAPM,MAOA,IAAI,sBAAU3G,KAAK0G,OAAf,EAAwB,iBAAxB,CAAJ,EAAgD;AACrD3C,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK2G,MAAlB,EAA0B,UAA1B,CAAZ;AACD,KAFM,MAEA,IAAI,sBAAU3G,KAAK0G,OAAf,EAAwB,eAAxB,CAAJ,EAA8C;AACnD3C,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK2G,MAAL,CAAY,CAAZ,CAAb,CAAZ;AACA5C,aAAOG,IAAP,CAAY,IAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK2G,MAAL,CAAY,CAAZ,CAAb,CAAZ;AACD,KAJM,MAIA,IAAI,sBAAU3G,KAAK0G,OAAf,EAAwB,aAAxB,CAAJ,EAA4C;AACjD3C,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK2G,MAAlB,CAAZ;AACD,KAFM,MAEA,IAAI,sBAAU3G,KAAK0G,OAAf,EAAwB,aAAxB,CAAJ,EAA4C;AACjD3C,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK2G,MAAL,CAAY,CAAZ,CAAb,CAAZ;AACA5C,aAAOG,IAAP,CAAY,IAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK2G,MAAL,CAAY,CAAZ,CAAb,CAAZ;AACD,KAJM,MAIA,IAAI,sBAAU3G,KAAK0G,OAAf,EAAwB,sBAAxB,CAAJ,EAAqD;AAC1D3C,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK2G,MAAL,CAAY,CAAZ,CAAb,CAAZ;AACA5C,aAAOG,IAAP,CAAY,IAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK2G,MAAL,CAAY,CAAZ,CAAb,CAAZ;AACD,KAJM,MAIA,IAAI,sBAAU3G,KAAK0G,OAAf,EAAwB,kBAAxB,CAAJ,EAAiD;AACtD3C,aAAOG,IAAP,CAAY,KAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK2G,MAAL,CAAY,CAAZ,CAAb,CAAZ;AACA5C,aAAOG,IAAP,CAAY,UAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK2G,MAAL,CAAY,CAAZ,CAAb,CAAZ;AACD,KALM,MAKA,IAAI,sBAAU3G,KAAK0G,OAAf,EAAwB,gBAAxB,CAAJ,EAA+C;AACpD3C,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK2G,MAAL,CAAY,CAAZ,CAAb,CAAZ;AACA5C,aAAOG,IAAP,CAAY,IAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK2G,MAAL,CAAY,CAAZ,CAAb,CAAZ;AACD,KAJM,MAIA;AACL,UAAI,sBAAU3G,KAAK0G,OAAf,EAAwB,oBAAxB,CAAJ,EAAmD;AACjD3C,eAAOG,IAAP,CAAYtE,MAAMyG,GAAN,CAAUrG,IAAV,EAAgB,qBAAhB,CAAZ;AACD,OAFD,MAEO,IAAIA,KAAK2G,MAAL,YAAuBC,KAA3B,EAAkC;AACvC7C,eAAOG,IAAP,CAAY,KAAK1B,UAAL,CAAgBxC,KAAK2G,MAArB,EAA6B,GAA7B,CAAZ;AACD,OAFM,MAEA;AACL5C,eAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK2G,MAAlB,CAAZ;AACD;;AAED,UAAI3G,KAAK6G,OAAT,EAAkB;AAChB9C,eAAOG,IAAP,CAAY,GAAZ;AACAH,eAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAK6G,OAAf,CAAZ;AACA9C,eAAOG,IAAP,CAAY,GAAZ;AACD;AACF;;AAEDH,WAAOG,IAAP,CAAY,IAAZ;;AAEA,QAAIlE,KAAK8G,OAAT,EAAkB;AAChB/C,aAAOG,IAAP,CAAa,KAAIlE,KAAK8G,OAAQ,GAA9B;AACD,KAFD,MAEO;AACL/C,aAAOG,IAAP,CAAY,MAAZ;AACD;;AAED,WAAOH,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,iBAAD,EAAoB/B,IAApB,EAA0B;AACxB,UAAM+D,SAAS,EAAf;;AAEAA,WAAOG,IAAP,CAAYlE,KAAK+G,OAAjB;;AAEA,QAAI/G,KAAKgH,aAAT,EAAwB;AACtBjD,aAAOG,IAAP,CACE,kBAAO,MAAP,EAAe,KAAKvB,KAAL,CAAW,KAAKX,YAAL,CAAkBhC,KAAKgH,aAAvB,CAAX,CAAf,CADF;AAGD;;AAEDjD,WAAOG,IAAP,CAAY,kBAAO,SAAP,EAAkB,KAAKzC,OAAL,CAAazB,KAAKiH,QAAlB,CAAlB,CAAZ;;AAEA,WAAOlD,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,SAAD,EAAY/B,IAAZ,EAAkB;AAChB,QAAIA,KAAKkH,OAAL,KAAiB,uBAArB,EAA8C;AAC5C,aAAO,kBACL,oBADK,EAELlH,KAAK+E,GAAL,CAASoC,OAAT,CAAiBvC,GAAjB,CAAqBpB,MAArB,CAA4BC,GAA5B,CAAgCgD,WAAhC,EAFK,CAAP;AAID;;AAED,QAAIzG,KAAKkH,OAAL,KAAiB,uBAArB,EAA8C;AAC5C,aAAOlH,KAAK+E,GAAL,CAASoC,OAAT,CAAiBvC,GAAjB,CAAqBwC,OAArB,CAA6BC,IAA7B,KAAsC,CAAtC,GACH,YADG,GAEH,WAFJ;AAGD;;AAED,QAAIrH,KAAKkH,OAAL,KAAiB,wBAArB,EAA+C;AAC7C,aAAOlH,KAAK+E,GAAL,CAASoC,OAAT,CAAiBvC,GAAjB,CAAqBwC,OAArB,CAA6BC,IAA7B,KAAsC,CAAtC,GACH,gBADG,GAEH,YAFJ;AAGD;;AAED,QAAIrH,KAAKkH,OAAL,KAAiB,KAArB,EAA4B;AAC1B,aAAO,KAAKzF,OAAL,CAAazB,KAAK+E,GAAlB,CAAP;AACD;;AAED,QAAI1B,OAAOrD,KAAKkH,OAAhB;AACA,QAAIlH,KAAKsH,YAAT,EAAuB;AACrBjE,aAAQ,GAAErD,KAAKsH,YAAa,IAAGtH,KAAKkH,OAAQ,EAA5C;AACD;;AAED,QAAIlH,KAAK+E,GAAT,EAAc;AACZ,aAAQ,GAAE1B,IAAK,MAAK,KAAK5B,OAAL,CAAazB,KAAK+E,GAAlB,CAAuB,EAA3C;AACD;AACD,WAAO1B,IAAP;AACD;;AAED,GAAC,QAAD,EAAWrD,IAAX,EAAiB;AACf,WAAQ,YAAWJ,MAChByG,GADgB,CACZrG,IADY,EACN,+BADM,EAEhB4C,IAFgB,EAET,KAFV;AAGD;;AAED,GAAC,OAAD,EAAU5C,IAAV,EAAgB;AACd;AACA,QAAIA,KAAKyD,GAAL,CAAS,CAAT,MAAgB,GAApB,EAAyB;AACvB,aAAQ,IAAGzD,KAAKyD,GAAI,GAApB;AACD;;AAED,WAAOzD,KAAKyD,GAAZ;AACD;;AAED,GAAC,UAAD,EAAazD,IAAb,EAAmBkC,OAAnB,EAA4B;AAC1B,UAAM6B,SAAS,EAAf;;AAEA,QAAIwD,SAAS,EAAb;;AAEA,QAAIvH,KAAKoD,IAAT,EAAe;AACbmE,eAASvH,KAAKoD,IAAL,CAAUtB,GAAV,CAAc6B,QAAQ;AAC7B,eAAO,KAAKlC,OAAL,CAAakC,IAAb,CAAP;AACD,OAFQ,CAAT;AAGD;;AAED;AACA,QAAI3D,KAAKwH,QAAT,EAAmB;AACjBD,aAAOrD,IAAP,CAAY,GAAZ;AACD;;AAED,UAAMb,OAAO,KAAKjB,IAAL,CAAUpC,KAAKyH,QAAf,EAAyB,GAAzB,CAAb;;AAEA,UAAMC,QAAQ,EAAd;;AAEA,UAAMC,cAAc3H,KAAK4H,gBAAzB;;AAEA,QAAI5H,KAAK6H,SAAT,EAAoB;AAClBH,YAAMxD,IAAN,CAAW,UAAX;AACAwD,YAAMxD,IAAN,CAAW,KAAK9B,IAAL,CAAUpC,KAAK6H,SAAf,EAA0B,IAA1B,CAAX;AACD;;AAED,UAAMC,OAAO,EAAb;;AAEAA,SAAK5D,IAAL,CAAUb,OAAO,GAAjB;;AAEA,QAAIrD,KAAK+H,YAAT,EAAuB;AACrBD,WAAK5D,IAAL,CAAU,WAAV;AACD;;AAED;AACA;AACA,QAAIlE,KAAKgI,aAAT,EAAwB;AACtBT,aAAOA,OAAOrG,MAAP,GAAgB,CAAvB,IAA4B,cAAcqG,OAAOA,OAAOrG,MAAP,GAAgB,CAAvB,CAA1C;AACD;;AAED4G,SAAK5D,IAAL,CAAUqD,OAAOxF,IAAP,CAAY,IAAZ,CAAV;;AAEA,QAAI2F,MAAMxG,MAAN,IAAgB,CAACyG,WAArB,EAAkC;AAChCG,WAAK5D,IAAL,CAAU,GAAV;AACA4D,WAAK5D,IAAL,CAAUwD,MAAM3F,IAAN,CAAW,GAAX,CAAV;AACD;;AAED+F,SAAK5D,IAAL,CAAU,GAAV;;AAEAH,WAAOG,IAAP,CAAYrD,QAAQiH,IAAR,EAAc/F,IAAd,CAAmB,EAAnB,CAAZ;;AAEA,QAAI2F,MAAMxG,MAAN,IAAgByG,WAApB,EAAiC;AAC/B5D,aAAOG,IAAP,CAAY,cAAZ;AACAH,aAAOG,IAAP,CAAY/C,OAAOuG,MAAM3F,IAAN,CAAW,GAAX,CAAP,CAAZ;AACD;;AAED,QAAI/B,KAAKiI,UAAL,IAAmB,IAAvB,EAA6B;AAC3BlE,aAAOG,IAAP,CAAY,kBAAO,mBAAP,EAA4B,KAAKzC,OAAL,CAAazB,KAAKiI,UAAlB,CAA5B,CAAZ;AACD;;AAED,QAAIjI,KAAKkI,IAAL,IAAa,IAAjB,EAAuB;AACrBnE,aAAOG,IAAP,CAAY,kBAAO,SAAP,EAAkB,KAAKzC,OAAL,CAAazB,KAAKkI,IAAlB,CAAlB,CAAZ;AACD;;AAED,WAAOnE,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,cAAD,EAAiB/B,IAAjB,EAAuB;AACrB,WAAO,cAAc,KAAKoC,IAAL,CAAUpC,KAAKoD,IAAf,CAAd,GAAqC,GAA5C;AACD;;AAED,GAAC,aAAD,EAAgBpD,IAAhB,EAAsB;AACpB,YAAQA,KAAKgE,IAAb;AACE,WAAK,CAAL;AAAQ;AACN,eAAO,IAAP;;AAEF,WAAK,CAAL;AAAQ;AACN,eAAOlE,KAAK,aAAL,EAAoBE,IAApB,CAAP;;AAEF,WAAK,CAAL;AAAQ;AACN,eAAO,aAAa,KAAKoC,IAAL,CAAUpC,KAAKmI,OAAf,CAAb,GAAuC,GAA9C;;AAEF,WAAK,CAAL;AAAQ;AACN,eAAO,WAAW,KAAK/F,IAAL,CAAUpC,KAAKmI,OAAf,CAAX,GAAqC,GAA5C;;AAEF,WAAK,CAAL;AAAQ;AACN,eAAO,oBAAoB,KAAK/F,IAAL,CAAUpC,KAAKmI,OAAf,CAApB,GAA8C,GAArD;;AAEF;AACE,eAAOrI,KAAK,aAAL,EAAoBE,IAApB,CAAP;AAjBJ;AAmBD;;AAED,GAAC,WAAD,EAAcA,IAAd,EAAoB;AAClB,UAAM+D,SAAS,EAAf;AACAA,WAAOG,IAAP,CAAY,QAAZ;AACA,QAAIlE,KAAKoI,MAAT,EAAiB;AACfrE,aAAOG,IAAP,CAAY,QAAZ;AACD;AACDH,WAAOG,IAAP,CAAY,OAAZ;AACA,QAAIlE,KAAKqI,UAAT,EAAqB;AACnBtE,aAAOG,IAAP,CAAY,cAAZ;AACD;;AAED,QAAIlE,KAAKsI,OAAT,EAAkB;AAChBvE,aAAOG,IAAP,CAAYlE,KAAKsI,OAAjB;AACD;AACDvE,WAAOG,IAAP,CAAY,IAAZ;AACAH,WAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK8F,QAAlB,CAAZ;;AAEA,QAAI9F,KAAKuI,WAAT,EAAsB;AACpBxE,aAAOG,IAAP,CAAY,GAAZ;AACAH,aAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAKuI,WAAf,CAAZ;AACAxE,aAAOG,IAAP,CAAY,GAAZ;AACD;;AAED,QAAIlE,KAAKwI,WAAT,EAAsB;AACpBzE,aAAOG,IAAP,CAAY,OAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKwI,WAAlB,CAAZ;AACD;;AAED,WAAOzE,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,WAAD,EAAc/B,IAAd,EAAoB;AAClB,QAAIA,KAAKqD,IAAT,EAAe;AACb,aAAOrD,KAAKqD,IAAZ;AACD;AACD,QAAIrD,KAAKyI,IAAT,EAAe;AACb,aAAO,KAAKhH,OAAL,CAAazB,KAAKyI,IAAlB,CAAP;AACD;AACD,WAAO3I,KAAK,WAAL,EAAkBE,IAAlB,CAAP;AACD;;AAED,GAAC,YAAD,EAAeA,IAAf,EAAqB;AACnB,UAAM+D,SAAS,EAAf;;AAEAA,WAAOG,IAAP,CAAY,aAAZ;AACAH,WAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK8F,QAAlB,CAAZ;AACA/B,WAAOG,IAAP,CAAY,GAAZ;AACAH,WAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAK0I,IAAf,CAAZ;AACA3E,WAAOG,IAAP,CAAY,GAAZ;AACAH,WAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK2I,UAAlB,CAAZ;;AAEA,WAAO5E,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,SAAD,EAAY/B,IAAZ,EAAkBkC,OAAlB,EAA2B;AACzB,QAAIlC,KAAKqH,IAAL,GAAY,CAAZ,IAAiBnF,YAAY,QAAjC,EAA2C;AACzC,aAAQ,IAAGlC,KAAKqH,IAAK,GAArB;AACD;;AAED,WAAOrH,KAAKqH,IAAL,CAAUpG,QAAV,EAAP;AACD;;AAED,GAAC,YAAD,EAAejB,IAAf,EAAqB;AACnB,WAAO,KAAKyB,OAAL,CAAazB,KAAK4I,GAAlB,CAAP;AACD;;AAED,GAAC,UAAD,EAAa5I,IAAb,EAAmBkC,OAAnB,EAA4B;AAC1B,UAAM6B,SAAS,EAAf;;AAEAA,WAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK6I,IAAlB,CAAZ;;AAEA,QAAI7I,KAAK8I,SAAT,EAAoB;AAClB/E,aAAOG,IAAP,CAAY,SAAZ;AACD;;AAED,QAAInC,OAAO,IAAX;;AAEA,YAAQ,IAAR;AACE,WAAK/B,KAAK+I,QAAL,KAAkB,CAAlB,IAAuB/I,KAAKgJ,KAAL,IAAc,IAA1C;AACEjH,eAAO,YAAP;AACA;;AAEF,WAAK/B,KAAK+I,QAAL,KAAkB,CAAlB,IACH,CAAC/I,KAAK8I,SADH,IAEH,EAAE9I,KAAKgJ,KAAL,IAAc,IAAhB,CAFG,IAGH,EAAEhJ,KAAKiJ,WAAL,IAAoB,IAAtB,CAHF;AAIElH,eAAO,YAAP;AACA;;AAEF,WAAK/B,KAAK+I,QAAL,KAAkB,CAAvB;AACEhH,eAAO,MAAP;AACA;;AAEF,WAAK/B,KAAK+I,QAAL,KAAkB,CAAvB;AACEhH,eAAO,iBAAP;AACA;;AAEF,WAAK/B,KAAK+I,QAAL,KAAkB,CAAvB;AACEhH,eAAO,iBAAP;AACA;;AAEF,WAAK/B,KAAK+I,QAAL,KAAkB,CAAvB;AACEhH,eAAO,kBAAP;AACA;;AAEF;AACEjC,aAAK,UAAL,EAAiBE,IAAjB;AACA;AA9BJ;;AAiCA+D,WAAOG,IAAP,CAAYnC,IAAZ;;AAEA,QAAI/B,KAAKkJ,IAAT,EAAe;AACb;AACA;AACA,UAAIlJ,KAAKkJ,IAAL,CAAUC,QAAV,IAAsB,IAAtB,IAA8B,EAAEnJ,KAAKkJ,IAAL,CAAUC,QAAV,CAAmBC,KAAnB,IAA4B,IAA9B,CAAlC,EAAuE;AACrErF,eAAOG,IAAP,CAAa,IAAG,KAAKzC,OAAL,CAAazB,KAAKkJ,IAAlB,CAAwB,GAAxC;AACD,OAFD,MAEO;AACLnF,eAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKkJ,IAAlB,CAAZ;AACD;AACF;;AAED,QAAIlJ,KAAKgJ,KAAT,EAAgB;AACdjF,aAAOG,IAAP,CAAa,MAAK,KAAKzC,OAAL,CAAazB,KAAKgJ,KAAlB,CAAyB,EAA3C;AACD;;AAED,QAAIhJ,KAAKiJ,WAAT,EAAsB;AACpB,YAAMI,QAAQ,KAAK1G,KAAL,CAAW,KAAKX,YAAL,CAAkBhC,KAAKiJ,WAAvB,CAAX,EAAgDlH,IAAhD,CAAqD,IAArD,CAAd;;AAEAgC,aAAOG,IAAP,CAAa,UAASmF,KAAM,GAA5B;AACD;;AAED,UAAMC,UACJtJ,KAAKkJ,IAAL,CAAUC,QAAV,IAAsB,IAAtB,IAA8BnJ,KAAKoJ,KAAnC,GACI,MAAMrF,OAAOhC,IAAP,CAAY,GAAZ,CAAN,GAAyB,GAD7B,GAEIgC,OAAOhC,IAAP,CAAY,GAAZ,CAHN;;AAKA,QAAI/B,KAAKoJ,KAAT,EAAgB;AACd,aAAOE,UAAU,GAAV,GAAgB,KAAK7H,OAAL,CAAazB,KAAKoJ,KAAlB,CAAvB;AACD;;AAED,WAAOE,OAAP;AACD;;AAED,GAAC,eAAD,EAAkBtJ,IAAlB,EAAwB;AACtB,UAAMuJ,YAAY,CAChB,MADgB,EACR;AACR,mBAFgB,EAGhB,WAHgB,EAIhB,mBAJgB,EAKhB,YALgB,CAAlB;;AAQA,UAAMxF,SAAS,EAAf;;AAEAA,WAAOG,IAAP,CAAYqF,UAAUvJ,KAAKwJ,QAAf,CAAZ;;AAEA,QAAIxJ,KAAKyJ,UAAT,EAAqB;AACnB1F,aAAOG,IAAP,CAAY,IAAZ;AACAH,aAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAKyJ,UAAf,CAAZ;AACD;;AAED,WAAO1F,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,YAAD,EAAe/B,IAAf,EAAqB;AACnB,UAAM+D,SAAS,EAAf;;AAEA,QAAI/D,KAAKsE,EAAL,KAAY,CAAhB,EAAmB;AACjBP,aAAOG,IAAP,CAAY,UAAZ;AACD,KAFD,MAEO;AACLH,aAAOG,IAAP,CAAY,OAAZ;AACD;;AAEDH,WAAOG,IAAP,CAAY/C,OAAO,KAAKiB,IAAL,CAAUpC,KAAKoD,IAAf,CAAP,CAAZ;;AAEA,WAAOW,OAAOhC,IAAP,CAAY,EAAZ,CAAP;AACD;;AAED,GAAC,cAAD,EAAiB/B,IAAjB,EAAuB;AACrB,UAAM+D,SAAS,EAAf;;AAEAA,WAAOG,IAAP,CAAYlE,KAAKqD,IAAjB;AACAU,WAAOG,IAAP,CAAY,IAAZ;AACAH,WAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK+E,GAAlB,CAAZ;;AAEA,WAAOhB,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,MAAD,EAAS/B,IAAT,EAAe;AACb,WAAO,MAAP;AACD;;AAED,GAAC,UAAD,EAAaA,IAAb,EAAmB;AACjB,UAAM+D,SAAS,CAAE,KAAKtC,OAAL,CAAazB,KAAK+E,GAAlB,CAAF,CAAf;;AAEA,QAAI/E,KAAK0J,YAAL,KAAsB,CAA1B,EAA6B;AAC3B3F,aAAOG,IAAP,CAAY,SAAZ;AACD,KAFD,MAEO,IAAIlE,KAAK0J,YAAL,KAAsB,CAA1B,EAA6B;AAClC3F,aAAOG,IAAP,CAAY,aAAZ;AACD;;AAED,WAAOH,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,UAAD,EAAa/B,IAAb,EAAmB;AACjB,QAAIA,KAAK2J,MAAL,IAAe,CAAnB,EAAsB;AACpB,aAAO,CAAE,GAAF,EAAO3J,KAAK2J,MAAZ,EAAqB5H,IAArB,CAA0B,EAA1B,CAAP;AACD;AACD,WAAO,GAAP;AACD;;AAED,GAAC,eAAD,EAAkB/B,IAAlB,EAAwB;AACtB,UAAM+D,SAAS,EAAf;;AAEA,QAAI/D,KAAK4J,OAAT,EAAkB;AAChB7F,aAAOG,IAAP,CAAY,SAAZ;AACD;;AAED,UAAM2F,QAAQ,EAAd;;AAEA,SAAK,IAAI7E,IAAI,CAAb,EAAgBA,IAAIhF,KAAK8J,SAAL,CAAe5I,MAAnC,EAA2C8D,GAA3C,EAAgD;AAC9C,YAAM+E,WAAW/J,KAAK8J,SAAL,CAAe9E,CAAf,CAAjB;AACA,YAAM8C,OAAO,CAAE,KAAKrG,OAAL,CAAasI,SAAS,CAAT,CAAb,CAAF,CAAb;;AAEA,UAAIA,SAAS,CAAT,KAAeA,SAAS,CAAT,EAAY7I,MAA/B,EAAuC;AACrC4G,aAAK5D,IAAL,CAAU,kBAAO,SAAP,EAAkB,KAAK9B,IAAL,CAAU2H,SAAS,CAAT,CAAV,CAAlB,CAAV;AACD;;AAEDF,YAAM3F,IAAN,CAAW4D,KAAK/F,IAAL,CAAU,GAAV,CAAX;AACD;;AAED,UAAMiI,QAAQH,MAAM9H,IAAN,CAAW,IAAX,CAAd;;AAEA,QAAI/B,KAAKiK,WAAT,EAAsB;AACpBlG,aAAOG,IAAP,CAAa,cAAa8F,KAAM,GAAhC;AACD,KAFD,MAEO;AACLjG,aAAOG,IAAP,CAAY8F,KAAZ;AACD;;AAED,QAAIhK,KAAKkK,UAAT,EAAqB;AACnBnG,aAAOG,IAAP,CAAY,iBAAZ;AACD;;AAED,QAAIlE,KAAKoJ,KAAT,EAAgB;AACdrF,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKoJ,KAAlB,CAAZ;AACD;;AAED,QAAIpJ,KAAK2F,UAAT,EAAqB;AACnB,YAAMwE,UAAU,KAAK/H,IAAL,CAAUpC,KAAK2F,UAAf,CAAhB;;AAEA,UAAI,CAAC3F,KAAKoJ,KAAV,EAAiB;AACfrF,eAAOG,IAAP,CAAa,QAAOiG,OAAQ,GAA5B;AACD,OAFD,MAEO;AACLpG,eAAOG,IAAP,CAAa,IAAGiG,OAAQ,GAAxB;AACD;AACF;;AAED,WAAOpG,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,gBAAD,EAAmB/B,IAAnB,EAAyBkC,OAAzB,EAAkC;AAChC,QAAI6B,SAAS,EAAb;;AAEA,QAAI/D,KAAK4J,OAAT,EAAkB;AAChB7F,gBAAU,UAAV;AACD;;AAEDA,cAAU5C,OAAO,KAAKM,OAAL,CAAazB,KAAKoK,QAAlB,CAAP,CAAV;;AAEA,QAAIpK,KAAKoJ,KAAT,EAAgB;AACd,aAAOrF,SAAS,GAAT,GAAe,KAAKtC,OAAL,CAAazB,KAAKoJ,KAAlB,CAAtB;AACD;;AAED,WAAOrF,MAAP;AACD;;AAED,GAAC,kBAAD,EAAqB/D,IAArB,EAA2B;AACzB,UAAM+D,SAAS,EAAf;;AAEAA,WAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK8F,QAAlB,CAAZ;AACA/B,WAAOG,IAAP,CAAY,aAAZ;AACAH,WAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKqK,MAAL,CAAY,CAAZ,CAAb,CAAZ;;AAEA,QAAIrK,KAAKoD,IAAT,EAAe;AACbW,aAAOG,IAAP,CAAY/C,OAAO,KAAKiB,IAAL,CAAUpC,KAAKoD,IAAf,CAAP,CAAZ;AACD;;AAED,QAAIpD,KAAKsK,UAAT,EAAqB;AACnBvG,aAAOG,IAAP,CAAY,gBAAgB,KAAKzC,OAAL,CAAazB,KAAKsK,UAAlB,CAAhB,GAAgD,GAA5D;AACD;;AAED,WAAOvG,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,UAAD,EAAa/B,IAAb,EAAmBkC,OAAnB,EAA4B;AAC1B,UAAM6B,SAAS,EAAf;;AAEA,QAAI/D,KAAKuK,MAAL,KAAgB,CAApB,EAAuB;AACrBxG,aAAOG,IAAP,CAAY,MAAZ;AACD;;AAED,QAAIlE,KAAKwK,cAAL,KAAwB,GAA5B,EAAiC;AAC/BzG,aAAOG,IAAP,CAAY,UAAZ;AACD;;AAED,QAAIlE,KAAKwK,cAAL,KAAwB,GAA5B,EAAiC;AAC/BzG,aAAOG,IAAP,CAAY,iBAAZ;AACD;;AAED,QAAIlE,KAAKyK,UAAL,IAAmB,IAAvB,EAA6B;AAC3B1G,aAAOG,IAAP,CAAa,GAAE,KAAKvB,KAAL,CAAW3C,KAAKyK,UAAhB,CAA4B,IAAG,KAAK9H,KAAL,CAAW3C,KAAK0K,OAAhB,CAAyB,EAAvE;AACD,KAFD,MAEO;AACL3G,aAAOG,IAAP,CAAY,KAAKvB,KAAL,CAAW3C,KAAK0K,OAAhB,CAAZ;AACD;;AAED,QAAI1K,KAAKoJ,KAAT,EAAgB;AACdrF,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKoJ,KAAlB,CAAZ;AACD;;AAED,WAAOrF,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,WAAD,EAAc/B,IAAd,EAAoBkC,OAApB,EAA6B;AAC3B,QAAIA,YAAY,QAAhB,EAA0B;AACxB,aAAOrB,QAAQ,CAAE,KAAKY,OAAL,CAAazB,KAAK4E,GAAlB,CAAF,EAA0B,KAAKjC,KAAL,CAAW3C,KAAKqD,IAAhB,CAA1B,CAAR,EAA2DtB,IAA3D,CACL,MADK,CAAP;AAGD,KAJD,MAIO,IAAIG,YAAY,QAAhB,EAA0B;AAC/B,aAAOrB,QAAQ,CAAEb,KAAKqD,IAAP,EAAa,KAAK5B,OAAL,CAAazB,KAAK4E,GAAlB,CAAb,CAAR,EAA+C7C,IAA/C,CAAoD,KAApD,CAAP;AACD,KAFM,MAEA,IAAI,EAAE/B,KAAK4E,GAAL,IAAY,IAAd,CAAJ,EAAyB;AAC9B,aAAO,KAAKjC,KAAL,CAAW3C,KAAKqD,IAAhB,CAAP;AACD;;AAED,WAAOvD,KAAK,WAAL,EAAkBE,IAAlB,CAAP;AACD;;AAED,GAAC,SAAD,EAAYA,IAAZ,EAAkB;AAChB,QAAIA,KAAK2K,UAAL,KAAoB,CAAxB,EAA2B;AACzB,aAAOxJ,OAAO,KAAKiB,IAAL,CAAUpC,KAAKoD,IAAf,CAAP,CAAP;AACD;;AAED,WAAO,kBAAO,SAAP,EAAkB,KAAKhB,IAAL,CAAUpC,KAAKoD,IAAf,CAAlB,CAAP;AACD;;AAED,GAAC,YAAD,EAAepD,IAAf,EAAqBkC,OAArB,EAA8B;AAC5B,UAAM6B,SAAS,EAAf;;AAEA,QAAI/D,KAAK4K,UAAT,EAAqB;AACnB7G,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK4K,UAAlB,CAAZ;AACD;;AAED,QAAI5K,KAAKsE,EAAL,KAAY,CAAhB,EAAmB;AACjB;AACA,UAAItE,KAAK6K,WAAL,IAAoB,IAAxB,EAA8B;AAC5B9G,eAAOG,IAAP,CAAY,QAAZ;AACD;AACF,KALD,MAKO;AACLH,aAAOG,IAAP,CAAY/C,OAAO,KAAKM,OAAL,CAAazB,KAAK6I,IAAlB,CAAP,CAAZ;;AAEA,YAAMiC,OAAO,CAAE,MAAF,EAAU,OAAV,EAAmB,WAAnB,EAAgC,QAAhC,CAAb;;AAEA/G,aAAOG,IAAP,CAAY4G,KAAK9K,KAAKsE,EAAV,CAAZ;;AAEA,UAAItE,KAAK+K,GAAT,EAAc;AACZhH,eAAOG,IAAP,CAAY,KAAZ;AACD;;AAEDH,aAAOG,IAAP,CAAY/C,OAAO,KAAKM,OAAL,CAAazB,KAAKkJ,IAAlB,CAAP,CAAZ;AACD;;AAED,QAAIlJ,KAAKgL,cAAT,EAAyB;AACvB,UAAIhL,KAAKgL,cAAL,CAAoB,CAApB,KAA0B,IAA9B,EAAoC;AAClCjH,eAAOG,IAAP,CAAY,aAAZ;;AAEA,cAAM+G,SAASjL,KAAKgL,cAAL,CACZlJ,GADY,CACRoJ,KAAK,KAAKzJ,OAAL,CAAayJ,CAAb,EAAgB,QAAhB,CADG,EAEZnJ,IAFY,CAEP,KAFO,CAAf;;AAIAgC,eAAOG,IAAP,CAAa,IAAG+G,MAAO,GAAvB;AACD,OARD,MAQO;AACLlH,eAAOG,IAAP,CAAY,UAAZ;AACD;AACF;;AAED,QAAIlE,KAAKmL,UAAT,EAAqB;AACnBpH,aAAOG,IAAP,CACE7C,OAAOrB,KAAKmL,UAAL,CAAgBrJ,GAAhB,CAAoBoJ,KAAK,KAAKzJ,OAAL,CAAayJ,CAAb,EAAgB,QAAhB,CAAzB,EAAoDnJ,IAApD,CAAyD,KAAzD,CAAP,CADF;AAGD;;AAED,QAAI/B,KAAKoL,UAAT,EAAqB;AACnBrH,aAAOG,IAAP,CAAY,MAAZ;AACAH,aAAOG,IAAP,CAAY7C,OAAO,KAAKI,OAAL,CAAazB,KAAKoL,UAAlB,CAAP,CAAZ;AACD;;AAED,QAAIpL,KAAKqL,UAAT,EAAqB;AACnBtH,aAAOG,IAAP,CAAY,MAAZ;AACAH,aAAOG,IAAP,CACE7C,OAAOrB,KAAKqL,UAAL,CAAgBvJ,GAAhB,CAAoBoJ,KAAK,KAAKzJ,OAAL,CAAayJ,CAAb,EAAgB,MAAhB,CAAzB,EAAkDnJ,IAAlD,CAAuD,KAAvD,CAAP,CADF;AAGD;;AAED,QAAI/B,KAAKwI,WAAT,EAAsB;AACpBzE,aAAOG,IAAP,CAAY,OAAZ;AACAH,aAAOG,IAAP,CAAY7C,OAAO,KAAKI,OAAL,CAAazB,KAAKwI,WAAlB,CAAP,CAAZ;AACD;;AAED,QAAIxI,KAAK6K,WAAT,EAAsB;AACpB9G,aAAOG,IAAP,CAAY,QAAZ;;AAEA,YAAMoH,QAAQtL,KAAK6K,WAAL,CAAiB/I,GAAjB,CAAqBM,QAAQ;AACzC,eAAQ,IAAG,KAAKA,IAAL,CAAUA,IAAV,CAAgB,GAA3B;AACD,OAFa,CAAd;;AAIA2B,aAAOG,IAAP,CAAYoH,MAAMvJ,IAAN,CAAW,IAAX,CAAZ;AACD;;AAED,QAAI/B,KAAKuL,WAAT,EAAsB;AACpBxH,aAAOG,IAAP,CAAY,UAAZ;AACAH,aAAOG,IAAP,CACE7C,OAAOrB,KAAKuL,WAAL,CAAiBzJ,GAAjB,CAAqBoJ,KAAK,KAAKzJ,OAAL,CAAayJ,CAAb,EAAgB,OAAhB,CAA1B,EAAoDnJ,IAApD,CAAyD,KAAzD,CAAP,CADF;AAGD;;AAED,QAAI/B,KAAKwL,YAAT,EAAuB;AACrBzH,aAAOG,IAAP,CAAY,QAAZ;AACAH,aAAOG,IAAP,CAAY7C,OAAO,KAAKI,OAAL,CAAazB,KAAKwL,YAAlB,CAAP,CAAZ;AACD;;AAED,QAAIxL,KAAKyL,YAAT,EAAuB;AACrB1H,aAAOG,IAAP,CAAY,QAAZ;;AAEA,YAAMwH,UAAU,EAAhB;;AAEA,WAAK,IAAI1G,IAAI,CAAb,EAAgBA,IAAIhF,KAAKyL,YAAL,CAAkBvK,MAAtC,EAA8C8D,GAA9C,EAAmD;AACjD,cAAM2G,IAAI3L,KAAKyL,YAAL,CAAkBzG,CAAlB,CAAV;AACA,cAAM4G,SAAS,EAAf;;AAEA,YAAID,EAAEE,SAAF,CAAYxI,IAAhB,EAAsB;AACpBuI,iBAAO1H,IAAP,CAAY,KAAKvB,KAAL,CAAWgJ,EAAEE,SAAF,CAAYxI,IAAvB,IAA+B,KAA3C;AACD;;AAEDuI,eAAO1H,IAAP,CAAY/C,OAAO,KAAKM,OAAL,CAAakK,CAAb,EAAgB,QAAhB,CAAP,CAAZ;;AAEAD,gBAAQxH,IAAR,CAAa0H,OAAO7J,IAAP,CAAY,GAAZ,CAAb;AACD;;AAEDgC,aAAOG,IAAP,CAAYwH,QAAQ3J,IAAR,CAAa,IAAb,CAAZ;AACD;;AAED,QAAI/B,KAAK8L,UAAT,EAAqB;AACnB/H,aAAOG,IAAP,CAAY,UAAZ;AACAH,aAAOG,IAAP,CACE7C,OAAOrB,KAAK8L,UAAL,CAAgBhK,GAAhB,CAAoBoJ,KAAK,KAAKzJ,OAAL,CAAayJ,CAAb,EAAgB,MAAhB,CAAzB,EAAkDnJ,IAAlD,CAAuD,KAAvD,CAAP,CADF;AAGD;;AAED,QAAI/B,KAAK+L,UAAT,EAAqB;AACnBhI,aAAOG,IAAP,CAAY,OAAZ;AACAH,aAAOG,IAAP,CAAY7C,OAAO,KAAKI,OAAL,CAAazB,KAAK+L,UAAlB,CAAP,CAAZ;AACD;;AAED,QAAI/L,KAAKgM,WAAT,EAAsB;AACpBjI,aAAOG,IAAP,CAAY,QAAZ;AACAH,aAAOG,IAAP,CAAY7C,OAAO,KAAKI,OAAL,CAAazB,KAAKgM,WAAlB,CAAP,CAAZ;AACD;;AAED,QAAIhM,KAAKiM,aAAT,EAAwB;AACtBjM,WAAKiM,aAAL,CAAmBC,OAAnB,CAA2BvI,QAAQ;AACjC,eAAOI,OAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAakC,IAAb,CAAZ,CAAP;AACD,OAFD;AAGD;;AAED,WAAOI,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,4BAAD,EAA+B/B,IAA/B,EAAqC;AACnC,UAAM+D,SAAS,EAAf;AACAA,WAAOG,IAAP,CAAY,0BAAZ;;AAEA,UAAMiI,UAAUvM,MAAMyG,GAAN,CAAUrG,IAAV,EAAgB,SAAhB,CAAhB;;AAEA,QAAImM,OAAJ,EAAa;AACX,YAAMC,OAAOpM,KAAKmM,OAAL,CAAaE,IAAb,CAAkBC,MAAMA,GAAGC,cAAH,CAAkB,SAAlB,CAAxB,CAAb;;AAEA,UAAIH,KAAKI,OAAL,CAAatF,OAAb,KAAyB,SAA7B,EAAwC;AACtCnD,eAAOG,IAAP,CAAY,WAAZ;AACAH,eAAOG,IAAP,CAAYtE,MAAMyG,GAAN,CAAU+F,IAAV,EAAgB,0BAAhB,CAAZ;AACD;AACD,UAAIA,KAAKI,OAAL,CAAatF,OAAb,KAAyB,OAA7B,EAAsC;AACpCnD,eAAOG,IAAP,CAAY,UAAZ;AACA,cAAMuI,WAAW7M,MAAMyG,GAAN,CAAU+F,IAAV,EAAgB,eAAhB,CAAjB;AACArI,eAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAagL,QAAb,CAAZ;AACD;AACD1I,aAAOG,IAAP,CAAY,IAAZ;AACD;AACDH,WAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK0M,MAAlB,CAAZ;;AAEA,WAAO3I,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,gBAAD,EAAmB/B,IAAnB,EAAyB;AACvB,UAAM+D,SAAS,EAAf;AACAA,WAAOG,IAAP,CAAY,OAAZ;AACA,QAAIlE,KAAK2M,OAAL,KAAiB,EAArB,EAAyB;AACvB5I,aAAOG,IAAP,CAAY,OAAZ;AACD,KAFD,MAEO,IAAIlE,KAAK2M,OAAL,KAAiB,EAArB,EAAyB;AAC9B5I,aAAOG,IAAP,CAAY,MAAZ;AACD,KAFM,MAEA,IAAIlE,KAAK2M,OAAL,KAAiB,EAArB,EAAyB;AAC9B5I,aAAOG,IAAP,CAAY,MAAZ;AACD,KAFM,MAEA;AACLH,aAAOG,IAAP,CAAY,OAAZ;AACD;AACD,QAAIlE,KAAK4M,UAAT,EAAqB;AACnB7I,aAAOG,IAAP,CAAY,WAAZ;AACD;AACDH,WAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK8F,QAAlB,CAAZ;AACA/B,WAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAK6M,IAAf,CAAZ;;AAEA,WAAO9I,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,eAAD,EAAkB/B,IAAlB,EAAwB;AACtB,UAAM+D,SAAS,EAAf;;AAEA,QAAI/D,KAAK8M,OAAL,KAAiB,CAArB,EAAwB;AACtB/I,aAAOG,IAAP,CAAY,YAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKvB,KAAL,CAAW3C,KAAKqD,IAAhB,CAAZ;AACAU,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK+M,GAAlB,CAAZ;AACD;;AAED,QAAI/M,KAAK8M,OAAL,KAAiB,CAArB,EAAwB;AACtB/I,aAAOG,IAAP,CAAY,cAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKvB,KAAL,CAAW3C,KAAKqD,IAAhB,CAAZ;AACA,UAAIrD,KAAK+M,GAAT,EAAc;AACZhJ,eAAOG,IAAP,CAAY,aAAZ;AACAH,eAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK+M,GAAlB,CAAZ;AACD,OAHD,MAGO;AACLhJ,eAAOG,IAAP,CAAY,cAAZ;AACD;AACF;;AAED,QAAIlE,KAAK8M,OAAL,KAAiB,CAArB,EAAwB;AACtB/I,aAAOG,IAAP,CAAY,cAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKvB,KAAL,CAAW3C,KAAKqD,IAAhB,CAAZ;AACAU,aAAOG,IAAP,CAAY,eAAZ;AACD;;AAED,QAAIlE,KAAK8M,OAAL,KAAiB,CAArB,EAAwB;AACtB/I,aAAOG,IAAP,CAAY,cAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKvB,KAAL,CAAW3C,KAAKqD,IAAhB,CAAZ;AACAU,aAAOG,IAAP,CAAY,cAAZ;AACD;;AAED,QAAIlE,KAAK8M,OAAL,KAAiB,CAArB,EAAwB;AACtB/I,aAAOG,IAAP,CAAY,OAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKvB,KAAL,CAAW3C,KAAKqD,IAAhB,CAAZ;AACAU,aAAOG,IAAP,CAAY,gBAAZ;AACAH,aAAOG,IAAP,CAAYtE,MAAMyG,GAAN,CAAUrG,IAAV,EAAgB,kBAAhB,CAAZ;AACD;;AAED,QAAIA,KAAK8M,OAAL,KAAiB,CAArB,EAAwB;AACtB/I,aAAOG,IAAP,CAAY,cAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKvB,KAAL,CAAW3C,KAAKqD,IAAhB,CAAZ;AACAU,aAAOG,IAAP,CAAY,KAAZ;AACAH,aAAOG,IAAP,CAAY,GAAZ;AACAH,aAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAK+M,GAAf,CAAZ;AACAhJ,aAAOG,IAAP,CAAY,GAAZ;AACD;;AAED,QAAIlE,KAAK8M,OAAL,KAAiB,CAArB,EAAwB;AACtB/I,aAAOG,IAAP,CAAY,OAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKvB,KAAL,CAAW3C,KAAKqD,IAAhB,CAAZ;AACAU,aAAOG,IAAP,CAAY,aAAZ;AACA,UAAIlE,KAAK+M,GAAT,EAAc;AACZhJ,eAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK+M,GAAlB,CAAZ;AACD,OAFD,MAEO;AACLhJ,eAAOG,IAAP,CAAY,OAAZ;AACD;AACF;;AAED,QAAIlE,KAAK8M,OAAL,KAAiB,EAArB,EAAyB;AACvB/I,aAAOG,IAAP,CAAY,MAAZ;AACA,UAAIlE,KAAK4M,UAAT,EAAqB;AACnB7I,eAAOG,IAAP,CAAY,WAAZ;AACD;AACDH,aAAOG,IAAP,CAAY,KAAKvB,KAAL,CAAW3C,KAAKqD,IAAhB,CAAZ;AACD;;AAED,QAAIrD,KAAK8M,OAAL,KAAiB,EAArB,EAAyB;AACvB;AACA/I,aAAOG,IAAP,CAAY,KAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK+M,GAAlB,CAAZ;AACD;;AAED,QAAI/M,KAAK8M,OAAL,KAAiB,EAArB,EAAyB;AACvB/I,aAAOG,IAAP,CAAY,qBAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKvB,KAAL,CAAW3C,KAAKqD,IAAhB,CAAZ;AACD;;AAED,QAAIrD,KAAK8M,OAAL,KAAiB,EAArB,EAAyB;AACvB/I,aAAOG,IAAP,CAAY,iBAAZ;AACA,UAAIlE,KAAK4M,UAAT,EAAqB;AACnB7I,eAAOG,IAAP,CAAY,WAAZ;AACD;AACDH,aAAOG,IAAP,CAAY,KAAKvB,KAAL,CAAW3C,KAAKqD,IAAhB,CAAZ;AACD;;AAED,QAAIrD,KAAK8M,OAAL,KAAiB,EAArB,EAAyB;AACvB/I,aAAOG,IAAP,CAAY,cAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKvB,KAAL,CAAW3C,KAAKqD,IAAhB,CAAZ;AACAU,aAAOG,IAAP,CAAY,MAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK+M,GAAlB,CAAZ;AACD;;AAED,QAAI/M,KAAK8M,OAAL,KAAiB,EAArB,EAAyB;AACvB/I,aAAOG,IAAP,CAAY,YAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKvB,KAAL,CAAW3C,KAAKqD,IAAhB,CAAZ;AACD;;AAED,QAAIrD,KAAK8M,OAAL,KAAiB,EAArB,EAAyB;AACvB/I,aAAOG,IAAP,CAAY,qBAAZ;AACD;;AAED,QAAIlE,KAAK8M,OAAL,KAAiB,EAArB,EAAyB;AACvB/I,aAAOG,IAAP,CAAY,eAAZ;AACD;;AAED,QAAIlE,KAAK8M,OAAL,KAAiB,EAArB,EAAyB;AACvB/I,aAAOG,IAAP,CAAY,kBAAZ;AACD;;AAED,QAAIlE,KAAK8M,OAAL,KAAiB,EAArB,EAAyB;AACvB/I,aAAOG,IAAP,CAAY,KAAZ;AACAH,aAAOG,IAAP,CAAY,GAAZ;AACAH,aAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAK+M,GAAf,CAAZ;AACAhJ,aAAOG,IAAP,CAAY,GAAZ;AACD;;AAED,QAAIlE,KAAK8M,OAAL,KAAiB,EAArB,EAAyB;AACvB/I,aAAOG,IAAP,CAAY,OAAZ;AACAH,aAAOG,IAAP,CAAY,GAAZ;AACAH,aAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAK+M,GAAf,CAAZ;AACAhJ,aAAOG,IAAP,CAAY,GAAZ;AACD;;AAED,QAAIlE,KAAK8M,OAAL,KAAiB,EAArB,EAAyB;AACvB/I,aAAOG,IAAP,CAAY,SAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK+M,GAAlB,CAAZ;AACD;;AAED,QAAI/M,KAAK8M,OAAL,KAAiB,EAArB,EAAyB;AACvB/I,aAAOG,IAAP,CAAY,YAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK+M,GAAlB,CAAZ;AACD;;AAED,QAAI/M,KAAK8M,OAAL,KAAiB,EAArB,EAAyB;AACvB/I,aAAOG,IAAP,CAAY,2BAAZ;AACD;AACD,QAAIlE,KAAK8M,OAAL,KAAiB,EAArB,EAAyB;AACvB/I,aAAOG,IAAP,CAAY,4BAAZ;AACD;AACD,QAAIlE,KAAK8M,OAAL,KAAiB,EAArB,EAAyB;AACvB/I,aAAOG,IAAP,CAAY,oBAAZ;AACD;AACD,QAAIlE,KAAK8M,OAAL,KAAiB,EAArB,EAAyB;AACvB/I,aAAOG,IAAP,CAAY,uBAAZ;AACD;;AAED,WAAOH,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,gBAAD,EAAmB/B,IAAnB,EAAyB;AACvB,UAAM+D,SAAS,EAAf;AACAA,WAAOG,IAAP,CAAY,aAAZ;AACAH,WAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAKiD,QAAf,EAAyB,GAAzB,CAAZ;AACAc,WAAOG,IAAP,CAAY,SAAZ;AACAH,WAAOG,IAAP,CAAY,KAAZ;AACA,UAAM8I,OAAOhN,KAAKgN,IAAL,CAAUlL,GAAV,CAAc8C,OAAO;AAChC,aAAO,EAAEpB,QAAQ,EAAEC,KAAM,IAAGmB,IAAIpB,MAAJ,CAAWC,GAAI,GAA1B,EAAV,EAAP;AACD,KAFY,CAAb;AAGAM,WAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAU4K,IAAV,EAAgB,KAAhB,EAAuB,IAAvB,CAAZ;AACAjJ,WAAOG,IAAP,CAAY,KAAZ;AACA,WAAOH,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,qBAAD,EAAwB/B,IAAxB,EAA8B;AAC5B,UAAM+D,SAAS,EAAf;AACAA,WAAOG,IAAP,CAAY,kBAAZ;AACA,QAAIlE,KAAKiN,aAAT,EAAwB;AACtBlJ,aAAOG,IAAP,CAAY,eAAZ;AACD;AACDH,WAAOG,IAAP,CAAY,KAAKvB,KAAL,CAAW3C,KAAKkN,OAAhB,CAAZ;AACA,QAAIlN,KAAKmM,OAAT,EAAkB;AAChBnM,WAAKmM,OAAL,CAAaD,OAAb,CAAqBiB,OAAO;AAC1B,YACEA,IAAIX,OAAJ,CAAYtF,OAAZ,KAAwB,SAAxB,IACAiG,IAAIX,OAAJ,CAAYzH,GAAZ,CAAgBqC,OAAhB,CAAwBC,IAAxB,KAAiC,CAFnC,EAGE;AACAtD,iBAAOG,IAAP,CAAY,SAAZ;AACD;AACF,OAPD;AAQD;AACD,WAAOH,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,UAAD,EAAa/B,IAAb,EAAmB;AACjB,UAAM+D,SAAS,EAAf;AACAA,WAAOG,IAAP,CAAY,MAAZ;AACAH,WAAOG,IAAP,CAAY,wBAAYlE,KAAKoN,UAAjB,CAAZ;AACA,QAAIpN,KAAK4M,UAAT,EAAqB;AACnB7I,aAAOG,IAAP,CAAY,WAAZ;AACD;AACDH,WAAOG,IAAP,CAAY,KAAK1B,UAAL,CAAgBxC,KAAKqN,OAArB,CAAZ;AACA,QAAIrN,KAAKsN,QAAT,EAAmB;AACjBvJ,aAAOG,IAAP,CAAY,SAAZ;AACD;AACD,WAAOH,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,kBAAD,EAAqB/B,IAArB,EAA2B;AACzB,UAAM+D,SAAS,EAAf;AACAA,WAAOG,IAAP,CAAY,eAAZ;;AAEAH,WAAOG,IAAP,CAAY,KAAKvB,KAAL,CAAW3C,KAAKuN,WAAhB,CAAZ;AACA,QAAIvN,KAAKwN,KAAT,EAAgB;AACdzJ,aAAOG,IAAP,CAAY,IAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKwN,KAAlB,CAAZ;AACD;AACD,QAAIxN,KAAKyN,QAAT,EAAmB;AACjB1J,aAAOG,IAAP,CAAY,KAAZ;AACAH,aAAOG,IAAP,CAAYlE,KAAKyN,QAAL,CAAchH,WAAd,EAAZ;AACD;AACD1C,WAAOG,IAAP,CAAY,IAAZ;AACAH,WAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAK0N,KAAf,CAAZ;;AAEA,QAAI1N,KAAK2N,UAAT,EAAqB;AACnB5J,aAAOG,IAAP,CAAY,YAAZ;AACAH,aAAOG,IAAP,CAAY,GAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK2N,UAAlB,CAAZ;AACA5J,aAAOG,IAAP,CAAY,GAAZ;AACD,KALD,MAKO;AACLH,aAAOG,IAAP,CAAY,OAAZ;AACAH,aAAOG,IAAP,CAAY,GAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK4N,IAAlB,CAAZ;AACA7J,aAAOG,IAAP,CAAY,GAAZ;AACD;;AAED,WAAOH,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,UAAD,EAAa/B,IAAb,EAAmB;AACjB,UAAM+D,SAAS,EAAf;AACAA,WAAOG,IAAP,CAAY,aAAZ;AACAH,WAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK6N,IAAlB,CAAZ;AACA9J,WAAOG,IAAP,CAAY,IAAZ;AACAH,WAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK0B,KAAlB,CAAZ;AACA,WAAOqC,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,mBAAD,EAAsB/B,IAAtB,EAA4B;AAC1B,UAAM+D,SAAS,EAAf;AACAA,WAAOG,IAAP,CAAY,0BAAZ;AACAH,WAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK8N,IAAlB,CAAZ;AACA/J,WAAOG,IAAP,CAAY,IAAZ;AACAH,WAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK0B,KAAlB,CAAZ;AACA,WAAOqC,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,gBAAD,EAAmB/B,IAAnB,EAAyB;AACvB,UAAM+D,SAAS,EAAf;;AAEAA,WAAOG,IAAP,CAAY,QAAZ;AACA,QAAIlE,KAAK+N,YAAT,EAAuB;AACrBhK,aAAOG,IAAP,CAAY,YAAZ;AACD;AACDH,WAAOG,IAAP,CAAY,SAAZ;AACAH,WAAOG,IAAP,CAAY,KAAKvB,KAAL,CAAW3C,KAAKgO,QAAhB,CAAZ;AACAjK,WAAOG,IAAP,CAAY,IAAZ;;AAEA;;AAEA,QAAIlE,KAAKiO,MAAL,KAAgB,EAApB,EAAwB;AACtBlK,aAAOG,IAAP,CAAY,YAAZ;AACD,KAFD,MAEO,IAAIlE,KAAKiO,MAAL,KAAgB,CAApB,EAAuB;AAC5BlK,aAAOG,IAAP,CAAY,QAAZ;AACD,KAFM,MAEA;AACLH,aAAOG,IAAP,CAAY,OAAZ;AACD;;AAED;;AAEA;AACA;AACA;AACA;;AAEA,UAAMgK,iBAAiB;AACrBC,cAAQ,CADa;AAErBC,cAAQ,CAFa;AAGrBC,cAAQ,EAHa;AAIrBC,gBAAU;AAJW,KAAvB;;AAOA,UAAMC,SAAS,EAAf;AACA,QAAI,CAACL,eAAeC,MAAf,GAAwBnO,KAAKuO,MAA9B,MAA0CL,eAAeC,MAA7D,EAAqE;AACnEI,aAAOrK,IAAP,CAAY,QAAZ;AACD;AACD,QAAI,CAACgK,eAAeG,MAAf,GAAwBrO,KAAKuO,MAA9B,MAA0CL,eAAeG,MAA7D,EAAqE;AACnEE,aAAOrK,IAAP,CAAY,QAAZ;AACD;AACD,QAAI,CAACgK,eAAeE,MAAf,GAAwBpO,KAAKuO,MAA9B,MAA0CL,eAAeE,MAA7D,EAAqE;AACnEG,aAAOrK,IAAP,CAAY,QAAZ;AACD;AACD,QAAI,CAACgK,eAAeI,QAAf,GAA0BtO,KAAKuO,MAAhC,MAA4CL,eAAeI,QAA/D,EAAyE;AACvEC,aAAOrK,IAAP,CAAY,UAAZ;AACD;;AAED;AACAH,WAAOG,IAAP,CAAYqK,OAAOxM,IAAP,CAAY,MAAZ,CAAZ;;AAEA;AACA,QAAI/B,KAAKwO,OAAT,EAAkB;AAChBzK,aAAOG,IAAP,CAAY,IAAZ;AACAH,aAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAKwO,OAAf,CAAZ;AACD;;AAED;AACAzK,WAAOG,IAAP,CAAY,IAAZ;AACAH,WAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK8F,QAAlB,CAAZ;AACA/B,WAAOG,IAAP,CAAY,IAAZ;;AAEA,QAAIlE,KAAKyO,cAAT,EAAyB;AACvB1K,aAAOG,IAAP,CAAY,aAAZ;AACAlE,WAAKyO,cAAL,CAAoBvC,OAApB,CAA4B,UAA2B;AAAA,YAAxBwC,iBAAwB,QAAxBA,iBAAwB;;AACrD,YACEA,kBAAkBC,KAAlB,KAA4B,IAA5B,IACAD,kBAAkBE,OAAlB,KAA8B,IAFhC,EAGE;AACA7K,iBAAOG,IAAP,CAAa,gBAAewK,kBAAkBrL,IAAK,EAAnD;AACD,SALD,MAKO,IACLqL,kBAAkBC,KAAlB,KAA4B,IAA5B,IACAD,kBAAkBE,OAAlB,KAA8B,IAFzB,EAGL;AACA7K,iBAAOG,IAAP,CAAa,gBAAewK,kBAAkBrL,IAAK,EAAnD;AACD;AACF,OAZD;AAaD;;AAED;AACA,QAAIrD,KAAK6O,UAAL,IAAmB7O,KAAK8O,YAA5B,EAA0C;AACxC,UAAI9O,KAAK6O,UAAT,EAAqB;AACnB9K,eAAOG,IAAP,CAAY,YAAZ;AACD;AACD,UAAIlE,KAAK6O,UAAT,EAAqB;AACnB9K,eAAOG,IAAP,CAAY,oBAAZ;AACD;AACDH,aAAOG,IAAP,CAAY,IAAZ;AACD;;AAED,QAAIlE,KAAK+O,GAAT,EAAc;AACZhL,aAAOG,IAAP,CAAY,gBAAZ;AACD,KAFD,MAEO;AACLH,aAAOG,IAAP,CAAY,sBAAZ;AACD;;AAED,QAAIlE,KAAKgP,UAAT,EAAqB;AACnBjL,aAAOG,IAAP,CAAY,MAAZ;AACAH,aAAOG,IAAP,CAAY,GAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKgP,UAAlB,EAA8B,SAA9B,CAAZ;AACAjL,aAAOG,IAAP,CAAY,GAAZ;AACAH,aAAOG,IAAP,CAAY,IAAZ;AACD;;AAEDH,WAAOG,IAAP,CAAY,mBAAZ;AACAH,WAAOG,IAAP,CACE,KAAK1B,UAAL,CAAgBxC,KAAKyH,QAArB,EACGhF,KADH,CACS,GADT,EAEGV,IAFH,CAEQ,GAFR,CADF;AAKAgC,WAAOG,IAAP,CAAY,GAAZ;AACA,QAAId,OAAO,EAAX;AACA,QAAIpD,KAAKoD,IAAT,EAAe;AACbA,aAAOpD,KAAKoD,IAAZ;AACD;AACD;AACAA,WAAOA,KACJtB,GADI,CACAiD,OAAO;AACV,UAAInF,MAAMqP,MAAN,CAAalK,GAAb,EAAkB,YAAlB,CAAJ,EAAqC;AACnC,eAAQ,IAAGnF,MAAMyG,GAAN,CAAUtB,GAAV,EAAe,YAAf,CAA6B,GAAxC;AACD;AACD,aAAO,KAAKtD,OAAL,CAAasD,GAAb,CAAP;AACD,KANI,EAOJhE,MAPI,CAOG2B,KAAKA,CAPR,CAAP;AAQAqB,WAAOG,IAAP,CAAYd,KAAKrB,IAAL,CAAU,GAAV,CAAZ;AACAgC,WAAOG,IAAP,CAAY,GAAZ;;AAEA,WAAOH,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,kBAAD,EAAqB/B,IAArB,EAA2B;AACzB,UAAM+D,SAAS,EAAf;AACAA,WAAOG,IAAP,CAAY,eAAZ;AACAH,WAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAKkP,UAAf,EAA2B,GAA3B,CAAZ;AACAnL,WAAOG,IAAP,CAAY,IAAZ;AACAH,WAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKiD,QAAlB,CAAZ;AACA,QAAIjD,KAAKmG,WAAT,EAAsB;AACpBpC,aAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAKmG,WAAf,CAAZ;AACD;AACD,WAAOpC,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,YAAD,EAAe/B,IAAf,EAAqB;AACnB,UAAM+D,SAAS,EAAf;AACA,UAAMyG,iBAAiB5K,MAAMyG,GAAN,CAAUrG,IAAV,EAAgB,kCAAhB,CAAvB;AACA,QAAIwK,mBAAmB,GAAvB,EAA4B;AAC1BzG,aAAOG,IAAP,CAAY,QAAZ;AACD,KAFD,MAEO;AACLH,aAAOG,IAAP,CAAY,cAAZ;AACD;;AAEDH,WAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK8F,QAAlB,CAAZ;AACA/B,WAAOG,IAAP,CAAY,KAAZ;AACAH,WAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAKmP,SAAf,EAA0B,KAA1B,EAAiC,IAAjC,CAAZ;AACApL,WAAOG,IAAP,CAAY,KAAZ;;AAEA,QAAIsG,mBAAmB,GAAnB,IAA0BxK,KAAKuM,cAAL,CAAoB,cAApB,CAA9B,EAAmE;AACjExI,aAAOG,IAAP,CAAY,UAAZ;AACAH,aAAOG,IAAP,CAAY,GAAZ;AACAH,aAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAKoP,YAAf,CAAZ;AACArL,aAAOG,IAAP,CAAY,GAAZ;AACD;;AAED,QAAIlE,KAAKmM,OAAT,EAAkB;AAChBnM,WAAKmM,OAAL,CAAaD,OAAb,CAAqBiB,OAAO;AAC1B,YAAIvN,MAAMyG,GAAN,CAAU8G,GAAV,EAAe,iBAAf,MAAsC,MAA1C,EAAkD;AAChD,cAAIkC,OAAOzP,MAAMyG,GAAN,CAAU8G,GAAV,EAAe,0BAAf,CAAP,MAAuD,CAA3D,EAA8D;AAC5DpJ,mBAAOG,IAAP,CAAY,WAAZ;AACD,WAFD,MAEO;AACLH,mBAAOG,IAAP,CAAY,cAAZ;AACD;AACF;AACF,OARD;AASD;AACD,WAAOH,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,gBAAD,EAAmB/B,IAAnB,EAAyB;AACvB,UAAM+D,SAAS,EAAf;AACA,UAAMuL,aAAa,wCAA4BtP,KAAKuP,OAAjC,CAAnB;AACA,QAAIvP,KAAKwP,OAAT,EAAkB;AAChBzL,aAAOG,IAAP,CAAY,YAAZ;AACAH,aAAOG,IAAP,CAAYlE,KAAKwP,OAAjB;AACA,UAAI,CAACxP,KAAKyP,OAAV,EAAmB;AACjB1L,eAAOG,IAAP,CAAYoL,UAAZ;AACD;AACF,KAND,MAMO;AACLvL,aAAOG,IAAP,CAAYoL,UAAZ;AACD;AACD,WAAOvL,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,qBAAD,EAAwB/B,IAAxB,EAA8B;AAC5B,UAAM+D,SAAS,EAAf;AACA,QAAI/D,KAAK0P,QAAL,IAAiB1P,KAAK2P,QAA1B,EAAoC;AAClC,UAAI3P,KAAKwP,OAAT,EAAkB;AAChBzL,eAAOG,IAAP,CAAY,YAAZ;AACAH,eAAOG,IAAP,CAAYlE,KAAKwP,OAAjB;AACD;AACDzL,aAAOG,IAAP,CAAY,aAAZ;AACAH,aAAOG,IAAP,CAAY,GAAZ;AACAH,aAAOG,IAAP,CAAY,KAAK1B,UAAL,CAAgBxC,KAAK2P,QAArB,CAAZ;AACA5L,aAAOG,IAAP,CAAY,GAAZ;AACAH,aAAOG,IAAP,CAAY,YAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKyP,OAAlB,CAAZ;AACA1L,aAAOG,IAAP,CAAY,GAAZ;AACAH,aAAOG,IAAP,CAAY,KAAK1B,UAAL,CAAgBxC,KAAK0P,QAArB,CAAZ;AACA3L,aAAOG,IAAP,CAAY,GAAZ;AACD,KAdD,MAcO,IAAIlE,KAAK0P,QAAT,EAAmB;AACxB3L,aAAOG,IAAP,CAAY,KAAK0L,cAAL,CAAoB5P,IAApB,CAAZ;AACA+D,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKyP,OAAlB,CAAZ;AACA1L,aAAOG,IAAP,CAAY,GAAZ;AACAH,aAAOG,IAAP,CAAY,KAAK1B,UAAL,CAAgBxC,KAAK0P,QAArB,CAAZ;AACA3L,aAAOG,IAAP,CAAY,GAAZ;AACD,KANM,MAMA,IAAIlE,KAAK2P,QAAT,EAAmB;AACxB,UAAI3P,KAAKwP,OAAT,EAAkB;AAChBzL,eAAOG,IAAP,CAAY,YAAZ;AACAH,eAAOG,IAAP,CAAYlE,KAAKwP,OAAjB;AACD;AACDzL,aAAOG,IAAP,CAAY,aAAZ;AACAH,aAAOG,IAAP,CAAY,GAAZ;AACAH,aAAOG,IAAP,CAAY,KAAK1B,UAAL,CAAgBxC,KAAK2P,QAArB,CAAZ;AACA5L,aAAOG,IAAP,CAAY,GAAZ;AACAH,aAAOG,IAAP,CAAY,YAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKyP,OAAlB,CAAZ;AACD,KAXM,MAWA;AACL1L,aAAOG,IAAP,CAAY,KAAK0L,cAAL,CAAoB5P,IAApB,CAAZ;AACA+D,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKyP,OAAlB,CAAZ;AACD;AACD,WAAO1L,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,qBAAD,EAAwB/B,IAAxB,EAA8B;AAC5B,UAAM+D,SAAS,EAAf;AACA,aAAS8L,iBAAT,CAA2BC,GAA3B,EAAgC;AAC9B,YAAMC,MAAM,EAAZ;AACA,YAAMrN,IAAIoN,IAAIE,UAAJ,CAAelO,GAAf,CAAmBmO,QAAQ;AACnC,YAAIA,KAAK,CAAL,EAAQC,SAAR,CAAkB7M,IAAtB,EAA4B;AAC1B,iBAAO4M,KAAK,CAAL,EAAQC,SAAR,CAAkB7M,IAAzB;AACD;AACD,eAAO4M,KAAK,CAAL,EAAQC,SAAR,CAAkBzH,IAAlB,GACH,KAAKhH,OAAL,CAAawO,KAAK,CAAL,EAAQC,SAAR,CAAkBzH,IAA/B,CADG,GAEH,IAFJ;AAGD,OAPS,CAAV;;AASA,YAAM0H,IAAIL,IAAIE,UAAJ,CAAelO,GAAf,CAAmBmO,QAAQ,KAAKxO,OAAL,CAAawO,KAAK,CAAL,EAAQ,CAAR,CAAb,CAA3B,CAAV;;AAEA,WAAK,IAAIjL,IAAI,CAAb,EAAgBA,IAAItC,EAAExB,MAAtB,EAA8B8D,GAA9B,EAAmC;AACjC+K,YAAI7L,IAAJ,CAAU,GAAExB,EAAEsC,CAAF,CAAK,SAAQmL,EAAEnL,CAAF,CAAK,EAA9B;AACA,YAAIA,MAAMtC,EAAExB,MAAF,GAAW,CAArB,EAAwB;AACtB6O,cAAI7L,IAAJ,CAAS,GAAT;AACD;AACF;;AAED,aAAO6L,IAAIhO,IAAJ,CAAS,GAAT,CAAP;AACD;;AAED,QAAI/B,KAAKgQ,UAAL,IAAmBhQ,KAAKoQ,aAA5B,EAA2C;AACzCrM,aAAOG,IAAP,CAAY,OAAZ;AACAH,aAAOG,IAAP,CAAYlE,KAAKoQ,aAAjB;AACArM,aAAOG,IAAP,CAAY,GAAZ;AACAH,aAAOG,IAAP,CAAY2L,kBAAkB/H,IAAlB,CAAuB,IAAvB,EAA6B9H,IAA7B,CAAZ;AACA+D,aAAOG,IAAP,CAAY,GAAZ;AACD;;AAED,WAAOH,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,YAAD,EAAe/B,IAAf,EAAqB;AACnB,UAAM+D,SAAS,EAAf;;AAEA,QAAI/D,KAAKuP,OAAL,KAAiBc,wBAAiBC,cAAtC,EAAsD;AACpDvM,aAAOG,IAAP,CAAY,KAAKqM,mBAAL,CAAyBvQ,IAAzB,CAAZ;AACD,KAFD,MAEO;AACL+D,aAAOG,IAAP,CAAY,KAAK0L,cAAL,CAAoB5P,IAApB,CAAZ;AACD;;AAED,QAAIA,KAAKW,IAAT,EAAe;AACboD,aAAOG,IAAP,CAAY,GAAZ;AACAH,aAAOG,IAAP,CAAY,KAAK1B,UAAL,CAAgBxC,KAAKW,IAArB,CAAZ;AACAoD,aAAOG,IAAP,CAAY,GAAZ;AACD;;AAED,QAAIlE,KAAKwQ,QAAT,EAAmB;AACjBzM,aAAOG,IAAP,CAAY,GAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKwQ,QAAlB,CAAZ;AACAzM,aAAOG,IAAP,CAAY,GAAZ;AACD;;AAED,QAAIlE,KAAKyQ,aAAT,EAAwB;AACtB,cAAQzQ,KAAKyQ,aAAb;AACE,aAAK,GAAL;AACE1M,iBAAOG,IAAP,CAAY,oBAAZ;AACA;AACF,aAAK,GAAL;AACEH,iBAAOG,IAAP,CAAY,mBAAZ;AACA;AACF;AAPF;AASD;;AAED,QAAIlE,KAAK0Q,aAAT,EAAwB;AACtB,cAAQ1Q,KAAK0Q,aAAb;AACE,aAAK,GAAL;AACE3M,iBAAOG,IAAP,CAAY,oBAAZ;AACA;AACF,aAAK,GAAL;AACEH,iBAAOG,IAAP,CAAY,mBAAZ;AACA;AACF;AAPF;AASD;;AAED,QAAIlE,KAAK2Q,YAAL,KAAsB,GAA1B,EAA+B;AAC7B5M,aAAOG,IAAP,CAAY,YAAZ;AACD;;AAED,QAAIlE,KAAK4Q,aAAL,KAAuB,IAA3B,EAAiC;AAC/B7M,aAAOG,IAAP,CAAY,YAAZ;AACD;;AAED,QAAIlE,KAAK6Q,eAAL,KAAyB,IAA7B,EAAmC;AACjC9M,aAAOG,IAAP,CAAY,WAAZ;AACD;;AAED,QAAIlE,KAAKuP,OAAL,KAAiBc,wBAAiBS,gBAAtC,EAAwD;AACtD/M,aAAOG,IAAP,CAAY,KAAK6M,mBAAL,CAAyB/Q,IAAzB,CAAZ;AACD;;AAED,QAAIA,KAAK6O,UAAT,EAAqB;AACnB9K,aAAOG,IAAP,CAAY,YAAZ;AACD;;AAED,WAAOH,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,YAAD,EAAe/B,IAAf,EAAqB;AACnB,UAAM+D,SAAS,EAAf;AACA,QAAI/D,KAAKgR,SAAT,EAAoB;AAClBjN,aAAOG,IAAP,CAAYlE,KAAKgR,SAAL,CAAevK,WAAf,EAAZ;AACD,KAFD,MAEO;AACL1C,aAAOG,IAAP,CAAY,KAAZ;AACD;AACD,QAAIlE,KAAK0I,IAAT,EAAe;AACb3E,aAAOG,IAAP,CAAY,GAAZ;AACAH,aAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAK0I,IAAf,CAAZ;AACA3E,aAAOG,IAAP,CAAY,GAAZ;AACD;AACD,WAAOH,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,iBAAD,EAAoB/B,IAApB,EAA0B;AACxB,YAAQA,KAAKgE,IAAb;AACE,WAAKiN,yBAAkBC,aAAvB;AACE,eAAO,kBACL,eADK,EAELlR,KAAKmR,QAAL,GAAgB,QAAhB,GAA2B,EAFtB,EAGLnR,KAAKqD,IAHA,EAIL,KAAKrB,YAAL,CAAkBhC,KAAKoD,IAAvB,EAA6B,QAA7B,EAAuCrB,IAAvC,CAA4C,IAA5C,CAJK,CAAP;AAMF,WAAKkP,yBAAkBG,eAAvB;AACE,eAAO,kBAAO,mBAAP,EAA4BpR,KAAKqD,IAAjC,CAAP;AACF,WAAK4N,yBAAkBI,eAAvB;AACE,eAAO,kBAAO,qBAAP,EAA8BrR,KAAKqD,IAAnC,CAAP;AACF,WAAK4N,yBAAkBK,aAAvB;AAAsC;AACpC,gBAAMjO,OAAO;AACXkO,yBAAa,aADF;AAEX,uCAA2B;AAFhB,YAGXvR,KAAKqD,IAHM,CAAb;;AAKA,iBAAO,kBACL,WADK,EAELA,IAFK,EAGL,KAAKrB,YAAL,CAAkBhC,KAAKoD,IAAvB,EAA6B,QAA7B,EAAuCrB,IAAvC,CAA4C,IAA5C,CAHK,CAAP;AAKD;AACD,WAAKkP,yBAAkBO,SAAvB;AACE,eAAO,kBAAO,UAAP,EAAmBxR,KAAKqD,IAAxB,CAAP;AACF,WAAK4N,yBAAkBQ,aAAvB;AACE,eAAO,WAAP;AACF;AACE,eAAO3R,KAAK,iBAAL,EAAwBE,IAAxB,CAAP;AA7BJ;AA+BD;;AAED,GAAC,kBAAD,EAAqBA,IAArB,EAA2B;AACzB,WAAO,kBAAO,SAAP,EAAkBA,KAAKqD,IAAvB,CAAP;AACD;;AAED,GAAC,cAAD,EAAiBrD,IAAjB,EAAuB;AACrB,UAAM+D,SAAS,EAAf;AACAA,WAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKyH,QAAL,CAAc,CAAd,CAAb,CAAZ;AACA1D,WAAOG,IAAP,CAAY,GAAZ;AACAH,WAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAK0R,QAAf,CAAZ;AACA3N,WAAOG,IAAP,CAAY,GAAZ;AACA,WAAOH,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,mBAAD,EAAsB/B,IAAtB,EAA4B;AAC1B,UAAM+D,SAAS,EAAf;;AAEA,QAAI/D,KAAK2R,IAAL,KAAc,GAAlB,EAAuB;AACrB5N,aAAOG,IAAP,CAAY,UAAZ;AACD;;AAED,QAAIlE,KAAK2R,IAAL,KAAc,GAAlB,EAAuB;AACrB5N,aAAOG,IAAP,CAAY,KAAZ;AACD;;AAED,QAAIlE,KAAK2R,IAAL,KAAc,EAAlB,EAAsB;AACpB5N,aAAOG,IAAP,CAAY,OAAZ;AACD;;AAEDH,WAAOG,IAAP,CAAYlE,KAAKqD,IAAjB;AACAU,WAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK4R,OAAlB,CAAZ;;AAEA,QAAI5R,KAAK6R,OAAT,EAAkB;AAChB9N,aAAOG,IAAP,CAAY,SAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK6R,OAAlB,CAAZ;AACD;;AAED,WAAO9N,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,oBAAD,EAAuB/B,IAAvB,EAA6B;AAC3B,UAAM+D,SAAS,EAAf;;AAEAA,WAAOG,IAAP,CAAY,QAAZ;AACA,QAAIlE,KAAK+C,OAAT,EAAkB;AAChBgB,aAAOG,IAAP,CAAY,YAAZ;AACD;AACDH,WAAOG,IAAP,CAAY,UAAZ;;AAEAH,WAAOG,IAAP,CAAYlE,KAAKyH,QAAL,CAAc3F,GAAd,CAAkBuB,QAAQ,KAAK5B,OAAL,CAAa4B,IAAb,CAA1B,EAA8CtB,IAA9C,CAAmD,GAAnD,CAAZ;AACAgC,WAAOG,IAAP,CAAY,GAAZ;AACA,QAAI4N,aAAa,EAAjB;AACA,QAAI9R,KAAK8R,UAAT,EAAqB;AACnBA,mBAAa,CAAE,GAAG9R,KAAK8R,UAAV,CAAb;AACD;AACD,UAAMC,iBAAiBD,WAAW/Q,MAAX,CACrB;AAAA,UAAGiR,iBAAH,SAAGA,iBAAH;AAAA,aACEA,kBAAkBL,IAAlB,KAA2B,GAA3B,IACAK,kBAAkBL,IAAlB,KAA2B,GAD3B,IAEAK,kBAAkBL,IAAlB,KAA2B,EAF3B,IAGAK,kBAAkBL,IAAlB,KAA2B,GAJ7B;AAAA,KADqB,CAAvB;AAOA5N,WAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAU2P,cAAV,CAAZ;AACAhO,WAAOG,IAAP,CAAY,GAAZ;;AAEA,UAAM+N,UAAUH,WAAW/Q,MAAX,CACd;AAAA,UAAGiR,iBAAH,SAAGA,iBAAH;AAAA,aAA2BA,kBAAkBL,IAAlB,KAA2B,GAAtD;AAAA,KADc,CAAhB;;AAIA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,QAAIM,QAAQ/Q,MAAR,GAAiB,CAArB,EAAwB;AACtB6C,aAAOG,IAAP,CAAY,SAAZ;AACAH,aAAOG,IAAP,CAAY,OAAZ;AACAH,aAAOG,IAAP,CAAY,GAAZ;AACAH,aAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAU6P,OAAV,CAAZ;AACAlO,aAAOG,IAAP,CAAY,GAAZ;AACD,KAND,MAMO,IAAIlE,KAAKkS,UAAT,EAAqB;AAC1BnO,aAAOG,IAAP,CAAY,SAAZ;AACAH,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKkS,UAAlB,CAAZ;AACD;;AAEDlS,SAAKmM,OAAL,CAAaD,OAAb,CAAqB,CAACiG,MAAD,EAASnN,CAAT,KAAe;AAClC,UAAImN,UAAUA,OAAO3F,OAArB,EAA8B;AAC5B,YAAIlM,QAAQ,EAAZ;AACA,gBAAQ6R,OAAO3F,OAAP,CAAetF,OAAvB;AACE,eAAK,IAAL;AACE5G,oBAAQ,KAAKmB,OAAL,CAAa0Q,OAAO3F,OAAP,CAAezH,GAAf,CAAmB,CAAnB,CAAb,CAAR;AACAhB,mBAAOG,IAAP,CAAa,eAAc5D,KAAM,WAAjC;AACA;;AAEF,eAAK,UAAL;AACEA,oBAAQ,KAAKmB,OAAL,CAAa0Q,OAAO3F,OAAP,CAAezH,GAA5B,CAAR;AACAhB,mBAAOG,IAAP,CAAY,UAAZ;AACAH,mBAAOG,IAAP,CAAY5D,KAAZ;AACA;;AAEF,eAAK,UAAL;AACEyD,mBAAOG,IAAP,CAAY,UAAZ;AACA5D,oBAAQ+O,OAAO8C,OAAO3F,OAAP,CAAezH,GAAf,CAAmBqC,OAAnB,CAA2BC,IAAlC,CAAR;AACA,gBAAI/G,QAAQ,CAAZ,EAAe;AACbyD,qBAAOG,IAAP,CAAY,SAAZ;AACD,aAFD,MAEO;AACLH,qBAAOG,IAAP,CAAY,SAAZ;AACD;AACD;;AAEF,eAAK,WAAL;AACE5D,oBAAQ+O,OAAO8C,OAAO3F,OAAP,CAAezH,GAAf,CAAmBqC,OAAnB,CAA2BC,IAAlC,CAAR;AACA,gBAAI/G,QAAQ,CAAZ,EAAe;AACbyD,qBAAOG,IAAP,CAAY,WAAZ;AACD;AACD;;AAEF,eAAK,QAAL;AACE5D,oBAAQ+O,OAAO8C,OAAO3F,OAAP,CAAezH,GAAf,CAAmBqC,OAAnB,CAA2BC,IAAlC,CAAR;AACA,gBAAI/G,QAAQ,CAAZ,EAAe;AACbyD,qBAAOG,IAAP,CAAY,QAAZ;AACD;AACD;;AAEF,eAAK,QAAL;AACE5D,oBAAQ+O,OAAO8C,OAAO3F,OAAP,CAAezH,GAAf,CAAmBqC,OAAnB,CAA2BC,IAAlC,CAAR;AACA,gBAAI/G,QAAQ,CAAZ,EAAe;AACbyD,qBAAOG,IAAP,CAAY,QAAZ;AACD,aAFD,MAEO;AACLH,qBAAOG,IAAP,CAAY,sBAAZ;AACD;AACD;;AAEF,eAAK,KAAL;AACE,gBACEtE,MAAMyG,GAAN,CAAU8L,MAAV,EAAkB,kCAAlB,MAA0D,CAA1D,IACAvS,MAAMyG,GAAN,CAAU8L,MAAV,EAAkB,kCAAlB,MACE,aAHJ,EAIE;AACApO,qBAAOG,IAAP,CAAY,8BAAZ;AACD,aAND,MAMO;AACLH,qBAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAa0Q,MAAb,CAAZ;AACD;AACD;;AAEF,eAAK,YAAL;AACE7R,oBAAQ,KAAKmB,OAAL,CAAa0Q,OAAO3F,OAAP,CAAezH,GAA5B,CAAR;AACAhB,mBAAOG,IAAP,CAAY5D,MAAMmG,WAAN,EAAZ;AACA;;AAEF;AA9DF;AAgED;AACF,KApED;AAqEA,WAAO1C,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;AACD,GAAC,kBAAD,EAAqB/B,IAArB,EAA2B;AACzB,UAAM+D,SAAS,EAAf;;AAEAA,WAAOG,IAAP,CAAY,QAAZ;AACA,QAAIlE,KAAK+C,OAAT,EAAkB;AAChBgB,aAAOG,IAAP,CAAY,YAAZ;AACD;;AAEDH,WAAOG,IAAP,CAAY,QAAZ;;AAEA,QAAIlE,KAAKiN,aAAT,EAAwB;AACtBlJ,aAAOG,IAAP,CAAY,eAAZ;AACD;;AAEDH,WAAOG,IAAP,CAAYlE,KAAKyK,UAAjB;AACA,WAAO1G,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,UAAD,EAAa/B,IAAb,EAAmB;AACjB,YAAQA,KAAKoS,QAAb;AACE,WAAKC,sBAAeC,gBAApB;AACE,eAAO,KAAK3P,KAAL,CAAW3C,KAAKuS,QAAhB,CAAP;AACF,WAAKF,sBAAeG,qBAApB;AACE,eAAO,cAAP;AACF,WAAKH,sBAAeI,qBAApB;AACE,eAAO,cAAP;AACF,WAAKJ,sBAAeK,eAApB;AACE,eAAO,QAAP;AACF;AACE,eAAO5S,KAAK,UAAL,EAAiBE,IAAjB,CAAP;AAVJ;AAYD;;AAED,GAAC,WAAD,EAAcA,IAAd,EAAoB;AAClB,UAAM+D,SAAS,EAAf;;AAEA,UAAM4O,kBAAkBC,WAAW;AACjC,cAAQA,QAAQlM,OAAhB;AACE,aAAKmM,yBAAkBC,mBAAvB;AACE,cAAIF,QAAQG,QAAR,KAAqBC,yBAAkBC,wBAA3C,EAAqE;AACnE,mBAAO,sBAAP;AACD;AACD,cAAIL,QAAQG,QAAR,KAAqBC,yBAAkBE,mBAA3C,EAAgE;AAC9D,mBAAO,QAAP;AACD;AACD;AACA,iBAAO,OAAP;AACF,aAAKL,yBAAkBM,mBAAvB;AACE,iBAAO,UAAP;AACF,aAAKN,yBAAkBO,mBAAvB;AACE,iBAAO,UAAP;AACF,aAAKP,yBAAkBQ,iBAAvB;AACE,iBAAO,QAAP;AACF,aAAKR,yBAAkBS,cAAvB;AACE,iBAAO,sBAAP;AACF,aAAKT,yBAAkBU,yBAAvB;AACE,iBAAO,gBAAP;AACF,aAAKV,yBAAkBW,mBAAvB;AACE,cAAIZ,QAAQG,QAAR,KAAqBC,yBAAkBC,wBAA3C,EAAqE;AACnE,mBAAO,yBAAP;AACD;AACD,cAAIL,QAAQG,QAAR,KAAqBC,yBAAkBE,mBAA3C,EAAgE;AAC9D,mBAAO,WAAP;AACD;AACD,iBAAO,UAAP;AACF,aAAKL,yBAAkBY,mBAAvB;AACE,iBAAO,UAAP;AACF,aAAKZ,yBAAkBa,sBAAvB;AACE,iBAAO,cAAP;AACF,aAAKb,yBAAkBc,oBAAvB;AACE,iBAAO,QAAP;AACF,aAAKd,yBAAkBe,qBAAvB;AACE,iBAAO,YAAP;AACF,aAAKf,yBAAkBgB,eAAvB;AACE,iBAAO,MAAP;AACF;AAtCF;AAwCA,aAAO/T,KAAK,WAAL,EAAkBE,IAAlB,CAAP;AACD,KA1CD;;AA4CA,QAAIA,KAAK0G,OAAL,KAAiBmM,yBAAkBiB,iBAAvC,EAA0D;AACxD,UAAI,CAAC9T,KAAK+T,QAAV,EAAoB;AAClBhQ,eAAOG,IAAP,CAAY,QAAZ;AACA,YAAIlE,KAAKgU,YAAT,EAAuB;AACrBjQ,iBAAOG,IAAP,CAAY,cAAZ;AACAH,iBAAOG,IAAP,CAAY,KAAZ;AACD;AACD,YAAIlE,KAAKiU,UAAT,EAAqB;AACnBlQ,iBAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAKiU,UAAf,CAAZ;AACD,SAFD,MAEO;AACLlQ,iBAAOG,IAAP,CAAY,KAAZ;AACD;AACDH,eAAOG,IAAP,CAAY,IAAZ;AACAH,eAAOG,IAAP,CAAYyO,gBAAgB3S,IAAhB,CAAZ;AACA+D,eAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAKqN,OAAf,CAAZ;AACAtJ,eAAOG,IAAP,CAAY,MAAZ;AACAH,eAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAKkU,QAAf,CAAZ;AACD,OAhBD,MAgBO;AACLnQ,eAAOG,IAAP,CAAY,OAAZ;AACA,YAAIlE,KAAKiU,UAAT,EAAqB;AACnBlQ,iBAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAKiU,UAAf,CAAZ;AACD,SAFD,MAEO;AACLlQ,iBAAOG,IAAP,CAAY,KAAZ;AACD;AACDH,eAAOG,IAAP,CAAY,IAAZ;AACAH,eAAOG,IAAP,CAAYyO,gBAAgB3S,IAAhB,CAAZ;AACA+D,eAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAKqN,OAAf,CAAZ;AACAtJ,eAAOG,IAAP,CAAY,IAAZ;AACAH,eAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAKkU,QAAf,CAAZ;AACA,YAAIlU,KAAKgU,YAAT,EAAuB;AACrBjQ,iBAAOG,IAAP,CAAY,mBAAZ;AACD;AACF;AACD,UAAImL,OAAOrP,KAAKsN,QAAZ,MAA0B,CAA9B,EAAiC;AAC/BvJ,eAAOG,IAAP,CAAY,SAAZ;AACD;AACF;;AAED,WAAOH,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,eAAD,EAAkB/B,IAAlB,EAAwB;AACtB,UAAM+D,SAAS,EAAf;;AAEA,QAAI,CAAC/D,KAAK+T,QAAV,EAAoB;AAClBhQ,aAAOG,IAAP,CAAY,QAAZ;AACAH,aAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAKmU,aAAf,CAAZ;AACApQ,aAAOG,IAAP,CAAY,MAAZ;AACAH,aAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAKoU,aAAf,CAAZ;AACD,KALD,MAKO;AACLrQ,aAAOG,IAAP,CAAY,OAAZ;AACAH,aAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAKmU,aAAf,CAAZ;AACApQ,aAAOG,IAAP,CAAY,IAAZ;AACAH,aAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAKoU,aAAf,CAAZ;AACD;AACD,QAAIpU,KAAKqU,SAAT,EAAoB;AAClBtQ,aAAOG,IAAP,CAAY,mBAAZ;AACD;;AAED,WAAOH,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,gBAAD,EAAmB/B,IAAnB,EAAyB;AACvB,UAAM+D,SAAS,EAAf;;AAEA,UAAMuQ,aAAa,CAAC1B,OAAD,EAAU5N,CAAV,EAAauP,IAAb,EAAmBC,IAAnB,KAA4B;AAC7C,YAAM5P,MAAMyK,OACVzP,MAAMyG,GAAN,CAAUuM,OAAV,EAAoB,WAAU5N,CAAE,2BAAhC,CADU,CAAZ;AAGA,UAAIJ,MAAM,CAAV,EAAa;AACXb,eAAOG,IAAP,CAAYqQ,IAAZ;AACD,OAFD,MAEO;AACLxQ,eAAOG,IAAP,CAAYsQ,IAAZ;AACD;AACF,KATD;;AAWAzQ,WAAOG,IAAP,CAAY,QAAZ;AACA,YAAQlE,KAAKyU,SAAb;AACE,WAAKC,sBAAeC,aAApB;AACE5Q,eAAOG,IAAP,CAAY,MAAZ;AACA;AACF,WAAKwQ,sBAAeE,cAApB;AACE7Q,eAAOG,IAAP,CAAY,OAAZ;AACA;AACF;AACEH,eAAOG,IAAP,CAAY,MAAZ;AARJ;;AAWAH,WAAOG,IAAP,CAAa,IAAGlE,KAAK6U,IAAK,GAA1B;;AAEA,QAAI7U,KAAKmM,OAAT,EAAkB;AAChB,YAAM2I,OAAOlV,MAAMmV,MAAN,CAAa/U,IAAb,EAAmB,2BAAnB,CAAb;;AAEA,UAAI8U,KAAK5T,MAAL,KAAgB,CAAhB,IAAqB4T,KAAK,CAAL,MAAY,WAArC,EAAkD;AAChD;AACD,OAFD,MAEO;AACL/Q,eAAOG,IAAP,CAAY,MAAZ;AACD;;AAED4Q,WAAK5I,OAAL,CAAa,CAACiG,MAAD,EAASnN,CAAT,KAAe;AAC1B,YAAI1E,QAAQ,EAAZ;AACA,gBAAQ6R,MAAR;AACE,eAAK,UAAL;AACEmC,uBAAWtU,IAAX,EAAiBgF,CAAjB,EAAoB,OAApB,EAA6B,SAA7B;AACA;AACF,eAAK,WAAL;AACEjB,mBAAOG,IAAP,CAAY,SAAZ;AACAH,mBAAOG,IAAP,CACEtE,MACGmV,MADH,CACU/U,IADV,EACiB,WAAUgF,CAAE,kCAD7B,EAEGjD,IAFH,CAEQ,GAFR,CADF;AAKA;AACF,eAAK,UAAL;AACEgC,mBAAOG,IAAP,CAAY,UAAZ;AACA5D,oBAAQV,MAAMyG,GAAN,CACNrG,IADM,EAEL,WAAUgF,CAAE,qCAFP,CAAR;AAIAjB,mBAAOG,IAAP,CAAa,IAAG5D,KAAM,GAAtB;AACA;AACF,eAAK,cAAL;AACEyD,mBAAOG,IAAP,CAAY,OAAZ;AACAH,mBAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAKmM,OAAL,CAAanH,CAAb,EAAgBwH,OAAhB,CAAwBzH,GAAlC,CAAZ;AACA;AACF,eAAK,aAAL;AACEhB,mBAAOG,IAAP,CAAY,MAAZ;AACAH,mBAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAKmM,OAAL,CAAanH,CAAb,EAAgBwH,OAAhB,CAAwBzH,GAAlC,CAAZ;AACA;AACF,eAAK,UAAL;AACEuP,uBAAWtU,IAAX,EAAiBgF,CAAjB,EAAoB,UAApB,EAAgC,YAAhC;AACA;AACF,eAAK,eAAL;AACEsP,uBAAWtU,IAAX,EAAiBgF,CAAjB,EAAoB,aAApB,EAAmC,eAAnC;AACA;AACF,eAAK,WAAL;AACEsP,uBAAWtU,IAAX,EAAiBgF,CAAjB,EAAoB,WAApB,EAAiC,aAAjC;AACA;AACF,eAAK,SAAL;AACEsP,uBAAWtU,IAAX,EAAiBgF,CAAjB,EAAoB,SAApB,EAA+B,WAA/B;AACA;AACF,eAAK,WAAL;AACEsP,uBAAWtU,IAAX,EAAiBgF,CAAjB,EAAoB,WAApB,EAAiC,aAAjC;AACA;AACF,eAAK,YAAL;AACEsP,uBAAWtU,IAAX,EAAiBgF,CAAjB,EAAoB,YAApB,EAAkC,cAAlC;AACA;AACF,eAAK,YAAL;AACEjB,mBAAOG,IAAP,CAAY,aAAZ;AACA5D,oBAAQV,MAAMyG,GAAN,CAAUrG,IAAV,EAAiB,WAAUgF,CAAE,yBAA7B,CAAR;AACAjB,mBAAOG,IAAP,CAAa,IAAG5D,KAAM,GAAtB;AACA;AACF;AAnDF;AAqDD,OAvDD;AAwDD;AACD,WAAOyD,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,iBAAD,EAAoB/B,IAApB,EAA0B;AACxB,UAAM+D,SAAS,EAAf;;AAEA,UAAMiR,QAAQC,YAAY;AACxB,YAAMH,OAAOlV,MAAMmV,MAAN,CAAaE,QAAb,EAAuB,2BAAvB,CAAb;AACA,UAAIH,KAAKvU,QAAL,CAAc,uBAAd,CAAJ,EAA4C;AAC1C,cAAM2U,QAAQJ,KAAKK,OAAL,CAAa,uBAAb,CAAd;AACA,cAAMC,MAAMH,SAAS9I,OAAT,CAAiB+I,KAAjB,CAAZ;AACA,YAAIG,MAAM,KAAV;AACA,cAAMC,OAAOjG,OAAO,KAAK5N,OAAL,CAAa7B,MAAMyG,GAAN,CAAU+O,GAAV,EAAe,aAAf,CAAb,CAAP,CAAb;AACA,YAAIE,OAAO,CAAX,EAAc;AACZD,gBAAM,IAAN;AACD;AACD,YAAIA,GAAJ,EAAS;AACP,iBAAO,6BAAP;AACD;AACD,eAAO,8BAAP;AACD;AACD,UAAIP,KAAKvU,QAAL,CAAc,uBAAd,CAAJ,EAA4C;AAC1C,cAAM2U,QAAQJ,KAAKK,OAAL,CAAa,uBAAb,CAAd;AACA,cAAMC,MAAMH,SAAS9I,OAAT,CAAiB+I,KAAjB,CAAZ;AACA,cAAMK,QAAQ,KAAK9T,OAAL,CAAa7B,MAAMyG,GAAN,CAAU+O,GAAV,EAAe,aAAf,CAAb,EAA4CrS,OAA5C,CACZ,QADY,EAEZ,EAFY,CAAd;AAIA,eAAQ,qCAAoCwS,MAAM9O,WAAN,EAAoB,EAAhE;AACD;AACD,aAAO,OAAP;AACD,KAzBD;;AA2BA,UAAM+O,QAAQP,YAAY;AACxB,YAAMH,OAAOlV,MAAMmV,MAAN,CAAaE,QAAb,EAAuB,2BAAvB,CAAb;AACA,UAAIH,KAAKvU,QAAL,CAAc,uBAAd,CAAJ,EAA4C;AAC1C,cAAM2U,QAAQJ,KAAKK,OAAL,CAAa,uBAAb,CAAd;AACA,cAAMC,MAAMH,SAAS9I,OAAT,CAAiB+I,KAAjB,CAAZ;AACA,YAAIG,MAAM,KAAV;AACA,cAAMC,OAAOjG,OAAO,KAAK5N,OAAL,CAAa7B,MAAMyG,GAAN,CAAU+O,GAAV,EAAe,aAAf,CAAb,CAAP,CAAb;AACA,YAAIE,OAAO,CAAX,EAAc;AACZD,gBAAM,IAAN;AACD;AACD,YAAIA,GAAJ,EAAS;AACP,iBAAO,6BAAP;AACD;AACD,eAAO,8BAAP;AACD;;AAED,aAAO,mBAAP;AACD,KAjBD;;AAmBA,YAAQrV,KAAKgE,IAAb;AACE,WAAKyR,6BAAsBC,gBAA3B;AACE,eAAOV,MAAMhV,IAAN,CAAP;AACF,WAAKyV,6BAAsBE,gBAA3B;AACE,eAAOH,MAAMxV,IAAN,CAAP;AACF,WAAKyV,6BAAsBG,iBAA3B;AACE,eAAO,QAAP;AACF,WAAKH,6BAAsBI,mBAA3B;AACE,eAAO,UAAP;AACF,WAAKJ,6BAAsBK,oBAA3B;AACE/R,eAAOG,IAAP,CAAY,WAAZ;AACAH,eAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKmM,OAAL,CAAa,CAAb,EAAgBK,OAAhB,CAAwBzH,GAArC,CAAZ;AACA;AACF,WAAK0Q,6BAAsBM,kBAA3B;AACEhS,eAAOG,IAAP,CAAY,mBAAZ;AACAH,eAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKmM,OAAL,CAAa,CAAb,EAAgBK,OAAhB,CAAwBzH,GAArC,CAAZ;AACA;AACF,WAAK0Q,6BAAsBO,sBAA3B;AACEjS,eAAOG,IAAP,CAAY,aAAZ;AACAH,eAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKmM,OAAL,CAAa,CAAb,EAAgBK,OAAhB,CAAwBzH,GAArC,CAAZ;AACA;AACF,WAAK0Q,6BAAsBQ,kBAA3B;AACElS,eAAOG,IAAP,CAAY,qBAAZ;AACAH,eAAOG,IAAP,CAAa,IAAGlE,KAAKkW,GAAI,GAAzB;AACA;AACF,WAAKT,6BAAsBU,0BAA3B;AACEpS,eAAOG,IAAP,CAAY,iBAAZ;AACAH,eAAOG,IAAP,CAAa,IAAGlE,KAAKkW,GAAI,GAAzB;AACA;AACF,WAAKT,6BAAsBW,4BAA3B;AACErS,eAAOG,IAAP,CAAY,mBAAZ;AACAH,eAAOG,IAAP,CAAa,IAAGlE,KAAKkW,GAAI,GAAzB;AACA;AACF;AAjCF;AAmCA,WAAOnS,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,QAAD,EAAW/B,IAAX,EAAiB;AACf,UAAM+D,SAAS,EAAf;;AAEAA,WAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKA,IAAlB,CAAZ;;AAEA,YAAQA,KAAKqW,UAAb;AACE,WAAKC,uBAAgBC,UAArB;AACExS,eAAOG,IAAP,CAAY,KAAZ;AACA;AACF,WAAKoS,uBAAgBE,WAArB;AACEzS,eAAOG,IAAP,CAAY,MAAZ;AACA;AACF,WAAKoS,uBAAgBG,YAArB;AACE1S,eAAOG,IAAP,CAAa,SAAQ,KAAKlC,YAAL,CAAkBhC,KAAK0W,KAAvB,CAA8B,EAAnD;AACA;AACF,WAAKJ,uBAAgBK,cAArB;AACE;AACF;AACE,eAAO7W,KAAK,QAAL,EAAeE,IAAf,CAAP;AAbJ;;AAgBA,QAAIA,KAAK4W,YAAL,KAAsBC,yBAAkBC,kBAA5C,EAAgE;AAC9D/S,aAAOG,IAAP,CAAY,aAAZ;AACD;;AAED,QAAIlE,KAAK4W,YAAL,KAAsBC,yBAAkBE,iBAA5C,EAA+D;AAC7DhT,aAAOG,IAAP,CAAY,YAAZ;AACD;;AAED,WAAOH,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,gBAAD,EAAmB/B,IAAnB,EAAyBkC,OAAzB,EAAkC;AAChC,UAAM6B,SAAS,EAAf;;AAEA,QAAI7B,YAAY,UAAhB,EAA4B;AAC1B6B,aAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAKgX,OAAf,CAAZ;AACD,KAFD,MAEO;AACLjT,aAAOG,IAAP,CAAY,KAAK1B,UAAL,CAAgBxC,KAAKgX,OAArB,EAA8B,GAA9B,CAAZ;AACD;AACD,QAAIhX,KAAK6G,OAAL,IAAgB7G,KAAK6G,OAAL,CAAa3F,MAAjC,EAAyC;AACvC6C,aAAOG,IAAP,CAAY,GAAZ;AACAH,aAAOG,IAAP,CACElE,KAAK6G,OAAL,CACG/E,GADH,CACOiD,OAAO;AACV,YAAIA,QAAQ,IAAZ,EAAkB;AAChB,iBAAO,MAAP;AACD;AACD,eAAO,KAAKtD,OAAL,CAAasD,GAAb,CAAP;AACD,OANH,EAOGhD,IAPH,CAOQ,GAPR,CADF;AAUAgC,aAAOG,IAAP,CAAY,GAAZ;AACD;;AAED,WAAOH,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,QAAD,EAAW/B,IAAX,EAAiB;AACf,WAAOA,KAAKyD,GAAZ;AACD;;AAED,GAAC,SAAD,EAAYzD,IAAZ,EAAkB;AAChB,YAAQ,IAAR;AACE,WAAKA,KAAKiX,WAAL,KAAqB,CAA1B;AACE,eAAO,kBAAO,aAAP,EAAsB,KAAKxV,OAAL,CAAazB,KAAKkX,SAAlB,CAAtB,CAAP;AACF,WAAKlX,KAAKiX,WAAL,KAAqB,CAA1B;AACE,eAAO,kBACL,gBADK,EAEL,KAAKxV,OAAL,CAAazB,KAAKmX,QAAlB,CAFK,EAGL,KAAK1V,OAAL,CAAazB,KAAKoX,QAAL,CAAc,CAAd,CAAb,CAHK,EAIL,KAAK3V,OAAL,CAAazB,KAAKkX,SAAlB,CAJK,CAAP;AAMF,WAAKlX,KAAKiX,WAAL,KAAqB,CAArB,IAA0B,EAAEjX,KAAKoX,QAAL,IAAiB,IAAnB,CAA/B;AACE,eAAO,kBACL,YADK,EAEL,KAAK3V,OAAL,CAAazB,KAAKmX,QAAlB,CAFK,EAGL,KAAK1V,OAAL,CAAazB,KAAKkX,SAAlB,CAHK,CAAP;AAKF,WAAKlX,KAAKiX,WAAL,KAAqB,CAA1B;AACE,eAAO,kBACL,gBADK,EAEL,KAAKxV,OAAL,CAAazB,KAAKmX,QAAlB,CAFK,EAGL,KAAK1V,OAAL,CAAazB,KAAKoX,QAAL,CAAc,CAAd,CAAb,CAHK,EAIL,KAAK3V,OAAL,CAAazB,KAAKkX,SAAlB,CAJK,CAAP;AAMF,WAAKlX,KAAKiX,WAAL,KAAqB,CAA1B;AACE,eAAO,kBACL,YADK,EAEL,KAAKxV,OAAL,CAAazB,KAAKmX,QAAlB,CAFK,EAGL,KAAK1V,OAAL,CAAazB,KAAKoX,QAAL,CAAc,CAAd,CAAb,CAHK,EAIL,KAAK3V,OAAL,CAAazB,KAAKkX,SAAlB,CAJK,CAAP;AAMF,WAAKlX,KAAKiX,WAAL,KAAqB,CAA1B;AACE,eAAO,kBAAO,MAAP,EAAe,KAAKxV,OAAL,CAAazB,KAAKkX,SAAlB,CAAf,CAAP;AACF,WAAKlX,KAAKiX,WAAL,KAAqB,CAA1B;AACE;AACA,eAAOnX,KAAK,SAAL,EAAgBE,IAAhB,CAAP;AACF;AACA;AACA,WAAKA,KAAKiX,WAAL,KAAqB,CAA1B;AACE,eAAO,kBAAO,YAAP,EAAqB,KAAKxV,OAAL,CAAazB,KAAKkX,SAAlB,CAArB,CAAP;AACF;AACE,eAAOpX,KAAK,SAAL,EAAgBE,IAAhB,CAAP;AAxCJ;AA0CD;;AAED,GAAC,UAAD,EAAaA,IAAb,EAAmB;AACjB,UAAMD,OAAO,KAAK0B,OAAL,CAAazB,KAAKiD,QAAlB,CAAb;AACA,QACElD,SAAS,SAAT,IACAH,MAAMqP,MAAN,CAAajP,IAAb,EAAmB,4BAAnB,CAFF,EAGE;AACA,YAAMM,QAAQV,MAAMyG,GAAN,CAAUrG,IAAV,EAAgB,4BAAhB,CAAd;AACA,UAAIM,UAAU,GAAd,EAAmB;AACjB,eAAO,SAAP;AACD;AACD,UAAIA,UAAU,GAAd,EAAmB;AACjB,eAAO,QAAP;AACD;AACF;AACD,WAAO,KAAKmB,OAAL,CAAazB,KAAK+E,GAAlB,IAAyB,IAAzB,GAAgC,KAAKtD,OAAL,CAAazB,KAAKiD,QAAlB,CAAvC;AACD;;AAED,GAAC,UAAD,EAAajD,IAAb,EAAmB;AACjB,QAAIY,iBAAEyW,IAAF,CAAOrX,KAAKmD,KAAZ,EAAmBK,MAAnB,CAA0BC,GAA1B,KAAkC,UAAtC,EAAkD;AAChD,aAAO,KAAK6T,eAAL,CAAqBtX,IAArB,CAAP;AACD;;AAED,UAAM+D,SAAS,EAAf;;AAEA,QAAI/D,KAAKuX,KAAT,EAAgB;AACdxT,aAAOG,IAAP,CAAY,OAAZ;AACD;;AAED,QAAId,OAAO,IAAX;;AAEA,QAAIpD,KAAKwX,OAAL,IAAgB,IAApB,EAA0B;AACxBpU,aAAOpD,KAAKwX,OAAL,CAAa1V,GAAb,CAAiB6B,QAAQ;AAC9B,eAAO,KAAKlC,OAAL,CAAakC,IAAb,CAAP;AACD,OAFM,CAAP;AAGD;;AAED,UAAM5D,OAAO,EAAb;;AAEAA,SAAKmE,IAAL,CAAU,KAAKnE,IAAL,CAAUC,KAAKmD,KAAf,EAAsBC,QAAQA,KAAKrB,IAAL,CAAU,IAAV,CAA9B,CAAV;;AAEA,QAAI/B,KAAKyX,WAAL,IAAoB,IAAxB,EAA8B;AAC5B1X,WAAKmE,IAAL,CAAU,IAAV;AACD;;AAEDH,WAAOG,IAAP,CAAYnE,KAAKgC,IAAL,CAAU,EAAV,CAAZ;;AAEA,WAAOgC,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,UAAD,EAAa/B,IAAb,EAAmB;AACjB,UAAM+D,SAAS,CAAE,MAAF,CAAf;;AAEAA,WAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAKyI,IAAlB,CAAZ;AACA1E,WAAOG,IAAP,CAAY,MAAZ;AACAH,WAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAazB,KAAK0X,MAAlB,CAAZ;;AAEA,WAAO3T,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAED,GAAC,WAAD,EAAc/B,IAAd,EAAoBkC,OAApB,EAA6B;AAC3B,UAAM6B,SAAS,EAAf;;AAEA,QAAI7B,YAAY,QAAhB,EAA0B;AACxB,UAAIlC,KAAKqD,IAAT,EAAe;AACbU,eAAOG,IAAP,CAAYlE,KAAKqD,IAAjB;AACD;AACF;;AAED,UAAMsU,QACJ,EAAE3X,KAAK4X,eAAL,IAAwB,IAA1B,KAAmC,EAAE5X,KAAK6X,WAAL,IAAoB,IAAtB,CADrC;;AAGA,UAAMC,eAAe,KAAKC,mBAAL,CACnB/X,KAAK8X,YADc,EAEnB9X,KAAKgY,OAFc,EAGnBhY,KAAKiY,WAHc,EAInBjY,KAAKkY,SAJc,CAArB;;AAOA,QACEP,SACAzV,YAAY,QADZ,IAEA,EAAElC,KAAKqD,IAAL,IAAa,IAAf,CAFA,IAGAyU,aAAa5W,MAAb,KAAwB,CAJ1B,EAKE;AACA,aAAO,IAAP;AACD;;AAED,UAAMiX,cAAc,EAApB;;AAEA,QAAIC,YAAY,KAAhB;;AAEA,QAAIpY,KAAK4X,eAAT,EAA0B;AACxB,YAAMS,YAAY,CAAE,cAAF,CAAlB;;AAEA,YAAMpN,SAASjL,KAAK4X,eAAL,CAAqB9V,GAArB,CAAyB6B,QAAQ,KAAKlC,OAAL,CAAakC,IAAb,CAAjC,CAAf;;AAEA0U,gBAAUnU,IAAV,CAAe+G,OAAOlJ,IAAP,CAAY,IAAZ,CAAf;;AAEAoW,kBAAYjU,IAAZ,CAAiBmU,UAAUtW,IAAV,CAAe,GAAf,CAAjB;AACAqW,kBAAY,IAAZ;AACD;;AAED,QAAIpY,KAAK6X,WAAT,EAAsB;AACpBM,kBAAYjU,IAAZ,CAAiB,UAAjB;;AAEA,YAAMoU,SAAStY,KAAK6X,WAAL,CAAiB/V,GAAjB,CAAqB6B,QAAQ;AAC1C,eAAO,KAAKlC,OAAL,CAAakC,IAAb,CAAP;AACD,OAFc,CAAf;;AAIAwU,kBAAYjU,IAAZ,CAAiBoU,OAAOvW,IAAP,CAAY,IAAZ,CAAjB;;AAEAqW,kBAAY,IAAZ;AACD;;AAED,QAAIN,aAAa5W,MAAjB,EAAyB;AACvBkX,kBAAY,IAAZ;AACAD,kBAAYjU,IAAZ,CAAiB4T,YAAjB;AACD;;AAED,QAAIM,aAAalW,YAAY,QAA7B,EAAuC;AACrC,aAAO6B,OAAOhC,IAAP,CAAY,GAAZ,IAAmB,IAAnB,GAA0BoW,YAAYpW,IAAZ,CAAiB,GAAjB,CAA1B,GAAkD,GAAzD;AACD;;AAED,WAAOgC,OAAOhC,IAAP,CAAY,GAAZ,IAAmBoW,YAAYpW,IAAZ,CAAiB,GAAjB,CAA1B;AACD;;AAED,GAAC,YAAD,EAAe/B,IAAf,EAAqB;AACnB,UAAM+D,SAAS,CAAE,MAAF,CAAf;;AAEA,QAAI/D,KAAKuY,SAAT,EAAoB;AAClBxU,aAAOG,IAAP,CAAY,WAAZ;AACD;;AAEDH,WAAOG,IAAP,CAAY,KAAK9B,IAAL,CAAUpC,KAAKwY,IAAf,CAAZ;;AAEA,WAAOzU,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAEDgW,sBAAoB5L,OAApB,EAA6BsM,OAA7B,EAAsCR,WAAtC,EAAmDC,SAAnD,EAA8D;AAC5D,UAAMQ,yBAAyB,OAA/B,CAD4D,CACpB;AACxC,UAAMC,oBAAoB,OAA1B,CAF4D,CAEzB;AACnC,UAAMC,mBAAmB,OAAzB,CAH4D,CAG1B;AAClC,UAAMC,sBAAsB,OAA5B,CAJ4D,CAIvB;AACrC,UAAMC,wCAAwC,OAA9C,CAL4D,CAKL;AACvD,UAAMC,sCAAsC,OAA5C,CAN4D,CAMP;AACrD,UAAMC,wCAAwC,OAA9C,CAP4D,CAOL;AACvD,UAAMC,sCAAsC,OAA5C,CAR4D,CAQP;AACrD,UAAMC,gCAAgC,OAAtC,CAT4D,CASb;AAC/C,UAAMC,8BAA8B,OAApC,CAV4D,CAUf;AAC7C,UAAMC,oCAAoC,OAA1C,CAX4D,CAWT;AACnD,UAAMC,kCAAkC,OAAxC,CAZ4D,CAYX;AACjD,UAAMC,oCAAoC,OAA1C,CAb4D,CAaT;AACnD,UAAMC,kCAAkC,OAAxC,CAd4D,CAcX;;AAEjD,QAAI,EAAEpN,UAAUuM,sBAAZ,CAAJ,EAAyC;AACvC,aAAO,EAAP;AACD;;AAED,UAAM3U,SAAS,EAAf;;AAEA,QAAI0U,WAAW,IAAf,EAAqB;AACnB1U,aAAOG,IAAP,CAAYuU,OAAZ;AACD;;AAED,QAAItM,UAAUwM,iBAAd,EAAiC;AAC/B5U,aAAOG,IAAP,CAAY,OAAZ;AACD;;AAED,QAAIiI,UAAUyM,gBAAd,EAAgC;AAC9B7U,aAAOG,IAAP,CAAY,MAAZ;AACD;;AAED,UAAMsV,UAAUrN,UAAU0M,mBAA1B;;AAEA,QAAIW,OAAJ,EAAa;AACXzV,aAAOG,IAAP,CAAY,SAAZ;AACD;;AAED,QAAIiI,UAAU2M,qCAAd,EAAqD;AACnD/U,aAAOG,IAAP,CAAY,qBAAZ;AACD;;AAED,QAAIiI,UAAU6M,qCAAd,EAAqD;AACnDjV,aAAOG,IAAP,CAAY,qBAAZ;AACD;;AAED,QAAIiI,UAAU+M,6BAAd,EAA6C;AAC3CnV,aAAOG,IAAP,CAAY,aAAZ;AACD;;AAED,QAAIiI,UAAUiN,iCAAd,EAAiD;AAC/CrV,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAawW,WAAb,IAA4B,YAAxC;AACD;;AAED,QAAI9L,UAAUmN,iCAAd,EAAiD;AAC/CvV,aAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAawW,WAAb,IAA4B,YAAxC;AACD;;AAED,QAAIuB,OAAJ,EAAa;AACXzV,aAAOG,IAAP,CAAY,KAAZ;;AAEA,UAAIiI,UAAU4M,mCAAd,EAAmD;AACjDhV,eAAOG,IAAP,CAAY,qBAAZ;AACD;;AAED,UAAIiI,UAAU8M,mCAAd,EAAmD;AACjDlV,eAAOG,IAAP,CAAY,qBAAZ;AACD;;AAED,UAAIiI,UAAUgN,2BAAd,EAA2C;AACzCpV,eAAOG,IAAP,CAAY,aAAZ;AACD;;AAED,UAAIiI,UAAUkN,+BAAd,EAA+C;AAC7CtV,eAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAayW,SAAb,IAA0B,YAAtC;AACD;;AAED,UAAI/L,UAAUoN,+BAAd,EAA+C;AAC7CxV,eAAOG,IAAP,CAAY,KAAKzC,OAAL,CAAayW,SAAb,IAA0B,YAAtC;AACD;AACF;;AAED,WAAOnU,OAAOhC,IAAP,CAAY,GAAZ,CAAP;AACD;;AAEDuV,kBAAgBtX,IAAhB,EAAsB;AACpB,UAAMD,OAAO,CAAE,UAAF,CAAb;;AAEA,QAAIC,KAAKyX,WAAL,IAAoB,IAAxB,EAA8B;AAC5B1X,WAAKmE,IAAL,CAAU,IAAV;AACD;;AAED,QAAIlE,KAAKwX,OAAT,EAAkB;AAChB,YAAMA,UAAUxX,KAAKwX,OAAL,CAAa1V,GAAb,CAAiB6B,QAAQ,KAAKlC,OAAL,CAAakC,IAAb,CAAzB,CAAhB;;AAEA,UAAI8V,YAAY,KAAKC,QAAL,CAAclC,QAAQ,CAAR,CAAd,CAAhB;;AAEA;AACA,UACExX,KAAKwX,OAAL,CAAa,CAAb,KACAxX,KAAKwX,OAAL,CAAa,CAAb,EAAgBrQ,OADhB,IAEAnH,KAAKwX,OAAL,CAAa,CAAb,EAAgBrQ,OAAhB,CAAwBvC,GAAxB,CAA4BwC,OAA5B,CAAoCC,IAApC,KAA6C,KAF7C,IAGArH,KAAKwX,OAAL,CAAa,CAAb,CAHA,IAIAxX,KAAKwX,OAAL,CAAa,CAAb,EAAgBrQ,OAAhB,IAA2B,IAL7B,EAME;AACAsS,oBAAY,CAAG,IAAGzZ,KAAKwX,OAAL,CAAa,CAAb,EAAgBrQ,OAAhB,CAAwBvC,GAAxB,CAA4BwC,OAA5B,CAAoCC,IAAK,GAA/C,CAAZ;AACD,OARD,MAQO;AACLoS,oBAAYA,UAAU3X,GAAV,CAAc6X,QAAQ;AAChC,cAAIA,SAAS,QAAT,IAAqBnC,QAAQtW,MAAR,KAAmB,CAA5C,EAA+C;AAC7C,mBAAO,YAAYN,iBAAEyW,IAAF,CAAOG,OAAP,CAAZ,GAA8B,GAArC;AACD;;AAED,iBAAOmC,IAAP;AACD,SANW,CAAZ;AAOD;;AAED5Z,WAAKmE,IAAL,CAAUuV,UAAU1X,IAAV,CAAe,MAAf,CAAV;AACD;;AAED,WAAOhC,KAAKgC,IAAL,CAAU,GAAV,CAAP;AACD;;AAED2X,WAASE,IAAT,EAAe;AACb;AACA,QAAI,KAAKC,KAAL,IAAc,IAAlB,EAAwB;AACtB,WAAKA,KAAL,GAAa;AACX,WAAG,QADQ;AAEX,WAAG,OAFQ;AAGX,WAAG,MAHQ;AAIX,WAAG,KAJQ;AAKX,WAAG,QALQ;AAMX,WAAG,IANQ;AAOX,WAAG,KAPQ;AAQX,WAAG,OARQ;AASX,WAAG,YATQ;AAUX,WAAG,MAVQ;AAWX,YAAI,MAXO;AAYX,YAAI,QAZO;AAaX,YAAI,QAbO;AAcX,YAAI,aAdO;AAeX,YAAI,aAfO;AAgBX,YAAI,KAhBO;AAiBX,YAAI,KAjBO;AAkBX,YAAI,OAlBO;AAmBX,YAAI,MAnBO;AAoBX,YAAI,KApBO;AAqBX,YAAI,YArBO;AAsBX,YAAI,WAtBO;AAuBX,YAAI,SAvBO;AAwBX,YAAI,SAxBO;AAyBX,YAAI,MAzBO;AA0BX,YAAI,QA1BO;AA2BX,YAAI,SA3BO;AA4BX,YAAI,YA5BO;AA6BX,YAAI;AA7BO,OAAb;AA+BD;;AAED,QAAI,KAAKC,IAAL,IAAa,IAAjB,EAAuB;AACrB,WAAKA,IAAL,GAAYlZ,iBAAEmZ,MAAF,CAAS,KAAKF,KAAd,CAAZ;AACD;;AAED,QAAI,KAAKG,SAAL,IAAkB,IAAtB,EAA4B;AAC1B,WAAKA,SAAL,GAAiB,EAAjB;AACA,WAAKA,SAAL,CAAe,KAAK,KAAKF,IAAL,CAAUG,IAA9B,IAAsC,CAAE,MAAF,CAAtC;AACA,WAAKD,SAAL,CAAe,KAAK,KAAKF,IAAL,CAAUI,KAA9B,IAAuC,CAAE,OAAF,CAAvC;AACA,WAAKF,SAAL,CAAe,KAAK,KAAKF,IAAL,CAAUK,GAA9B,IAAqC,CAAE,KAAF,CAArC;AACA,WAAKH,SAAL,CAAe,KAAK,KAAKF,IAAL,CAAUM,IAA9B,IAAsC,CAAE,MAAF,CAAtC;AACA,WAAKJ,SAAL,CAAe,KAAK,KAAKF,IAAL,CAAUO,MAA9B,IAAwC,CAAE,QAAF,CAAxC;AACA,WAAKL,SAAL,CAAe,KAAK,KAAKF,IAAL,CAAUQ,MAA9B,IAAwC,CAAE,QAAF,CAAxC;AACA,WAAKN,SAAL,CAAgB,KAAK,KAAKF,IAAL,CAAUG,IAAhB,GAAyB,KAAK,KAAKH,IAAL,CAAUI,KAAvD,IAAiE,CAC/D,MAD+D,EAE/D,OAF+D,CAAjE;AAIA,WAAKF,SAAL,CAAgB,KAAK,KAAKF,IAAL,CAAUK,GAAhB,GAAwB,KAAK,KAAKL,IAAL,CAAUM,IAAtD,IAA+D,CAC7D,KAD6D,EAE7D,MAF6D,CAA/D;AAIA,WAAKJ,SAAL,CACG,KAAK,KAAKF,IAAL,CAAUK,GAAhB,GAAwB,KAAK,KAAKL,IAAL,CAAUM,IAAvC,GAAgD,KAAK,KAAKN,IAAL,CAAUO,MADjE,IAEI,CAAE,KAAF,EAAS,QAAT,CAFJ;AAGA,WAAKL,SAAL,CACG,KAAK,KAAKF,IAAL,CAAUK,GAAhB,GACG,KAAK,KAAKL,IAAL,CAAUM,IADlB,GAEG,KAAK,KAAKN,IAAL,CAAUO,MAFlB,GAGG,KAAK,KAAKP,IAAL,CAAUQ,MAJpB,IAKI,CAAE,KAAF,EAAS,QAAT,CALJ;AAMA,WAAKN,SAAL,CAAgB,KAAK,KAAKF,IAAL,CAAUM,IAAhB,GAAyB,KAAK,KAAKN,IAAL,CAAUO,MAAvD,IAAkE,CAChE,MADgE,EAEhE,QAFgE,CAAlE;AAIA,WAAKL,SAAL,CACG,KAAK,KAAKF,IAAL,CAAUM,IAAhB,GACG,KAAK,KAAKN,IAAL,CAAUO,MADlB,GAEG,KAAK,KAAKP,IAAL,CAAUQ,MAHpB,IAII,CAAE,MAAF,EAAU,QAAV,CAJJ;AAKA,WAAKN,SAAL,CAAgB,KAAK,KAAKF,IAAL,CAAUO,MAAhB,GAA2B,KAAK,KAAKP,IAAL,CAAUQ,MAAzD,IAAoE,CAClE,QADkE,EAElE,QAFkE,CAApE;;AAKA;AACA;AACA,WAAKN,SAAL,CAAgB,KAAKO,mBAAL,GAA2B,OAA3C,IAAuD,EAAvD;AACD;;AAED,WAAO,KAAKP,SAAL,CAAeJ,KAAK3Y,QAAL,EAAf,CAAP;AACD;AA30F2B;kBAATO,Q","file":"deparser.js","sourcesContent":["import _ from 'lodash';\nimport { format } from 'util';\nimport {\n  objtypeName,\n  objtypeIs,\n  getConstraintFromConstrType,\n  ROLESPEC_TYPES,\n  GRANTTARGET_TYPES,\n  GRANTOBJECT_TYPES,\n  CONSTRAINT_TYPES,\n  VARIABLESET_TYPES,\n  ROLESTMT_TYPES,\n  TRANSACTIONSTMT_TYPES,\n  SORTBYDIR_TYPES,\n  SORTBYNULLS_TYPES\n} from './types';\n\nconst dotty = require('dotty');\n\nconst fail = (type, node) => {\n  throw new Error(format('Unhandled %s node: %s', type, JSON.stringify(node)));\n};\n\n// select word from pg_get_keywords() where catcode = 'R';\nconst RESERVED_WORDS = [\n  'all',\n  'analyse',\n  'analyze',\n  'and',\n  'any',\n  'array',\n  'as',\n  'asc',\n  'asymmetric',\n  'both',\n  'case',\n  'cast',\n  'check',\n  'collate',\n  'column',\n  'constraint',\n  'create',\n  'current_catalog',\n  'current_date',\n  'current_role',\n  'current_time',\n  'current_timestamp',\n  'current_user',\n  'default',\n  'deferrable',\n  'desc',\n  'distinct',\n  'do',\n  'else',\n  'end',\n  'except',\n  'false',\n  'fetch',\n  'for',\n  'foreign',\n  'from',\n  'grant',\n  'group',\n  'having',\n  'in',\n  'initially',\n  'intersect',\n  'into',\n  'lateral',\n  'leading',\n  'limit',\n  'localtime',\n  'localtimestamp',\n  'not',\n  'null',\n  'offset',\n  'on',\n  'only',\n  'or',\n  'order',\n  'placing',\n  'primary',\n  'references',\n  'returning',\n  'select',\n  'session_user',\n  'some',\n  'symmetric',\n  'table',\n  'then',\n  'to',\n  'trailing',\n  'true',\n  'union',\n  'unique',\n  'user',\n  'using',\n  'variadic',\n  'when',\n  'where',\n  'window',\n  'with'\n];\n\nconst isReserved = value => RESERVED_WORDS.includes(value.toLowerCase());\n\n// usually the AST lowercases all the things, so if we\n// have both, the author most likely used double quotes\nconst needsQuotes = value =>\n  value.match(/[a-z]+[\\W\\w]*[A-Z]+|[A-Z]+[\\W\\w]*[a-z]+/) ||\n  value.match(/\\W/) ||\n  isReserved(value);\n\nconst { keys } = _;\n\nconst compact = o => {\n  return _.filter(_.compact(o), p => {\n    if (p == null) {\n      return false;\n    }\n\n    return p.toString().length;\n  });\n};\n\nconst parens = string => {\n  return '(' + string + ')';\n};\n\nconst indent = (text, count = 1) => text;\n\nexport default class Deparser {\n  static deparse(query) {\n    return new Deparser(query).deparseQuery();\n  }\n\n  constructor(tree) {\n    this.tree = tree;\n  }\n\n  deparseQuery() {\n    return this.tree.map(node => `${this.deparse(node)};`).join('\\n\\n');\n  }\n\n  deparseNodes(nodes, context) {\n    return nodes.map(node => {\n      return _.isArray(node) ? this.list(node) : this.deparse(node, context);\n    });\n  }\n\n  list(nodes, separator = ', ', prefix = '') {\n    if (!nodes) {\n      return '';\n    }\n\n    return this.deparseNodes(nodes)\n      .map(l => `${prefix}${l}`)\n      .join(separator);\n  }\n\n  listQuotes(nodes, separator = ', ') {\n    return this.list(nodes, separator)\n      .split(separator)\n      .map(a => this.quote(a.trim()))\n      .join(separator);\n  }\n\n  quote(value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (_.isArray(value)) {\n      return value.map(o => this.quote(o));\n    }\n\n    if (needsQuotes(value)) {\n      return '\"' + value + '\"';\n    }\n    return value;\n  }\n\n  // SELECT encode(E'''123\\\\000\\\\001', 'base64')\n  escape(literal) {\n    return \"'\" + literal.replace(/'/g, \"''\") + \"'\";\n  }\n\n  convertTypeName(typeName, size) {\n    switch (typeName) {\n      case 'bpchar':\n        if (size != null) {\n          return 'char';\n        }\n        // return `pg_catalog.bpchar` below so that the following is symmetric\n        // SELECT char 'c' = char 'c' AS true\n        return 'pg_catalog.bpchar';\n      case 'varchar':\n        return 'varchar';\n      case 'numeric':\n        return 'numeric';\n      case 'bool':\n        return 'boolean';\n      case 'int2':\n        return 'smallint';\n      case 'int4':\n        return 'int';\n      case 'int8':\n        return 'bigint';\n      case 'real':\n      case 'float4':\n        return 'real';\n      case 'float8':\n        return 'pg_catalog.float8';\n      case 'text':\n        // SELECT EXTRACT(CENTURY FROM CURRENT_DATE)>=21 AS True\n        return 'pg_catalog.text';\n      case 'date':\n        return 'pg_catalog.date';\n      case 'time':\n        return 'time';\n      case 'timetz':\n        return 'pg_catalog.timetz';\n      case 'timestamp':\n        return 'timestamp';\n      case 'timestamptz':\n        return 'pg_catalog.timestamptz';\n      case 'interval':\n        return 'interval';\n      case 'bit':\n        return 'bit';\n      default:\n        throw new Error(format('Unhandled data type: %s', typeName));\n    }\n  }\n\n  type(names, args) {\n    const [ catalog, type ] = names.map(name => this.deparse(name));\n\n    const mods = (name, size) => {\n      if (size != null) {\n        return name + '(' + size + ')';\n      }\n\n      return name;\n    };\n\n    // handle the special \"char\" (in quotes) type\n    if (names[0].String.str === 'char') {\n      names[0].String.str = '\"char\"';\n    }\n\n    if (catalog !== 'pg_catalog') {\n      return mods(this.list(names, '.'), args);\n    }\n\n    const res = this.convertTypeName(type, args);\n\n    return mods(res, args);\n  }\n\n  deparse(item, context) {\n    if (item == null) {\n      return null;\n    }\n\n    if (_.isNumber(item)) {\n      return item;\n    }\n\n    const type = keys(item)[0];\n    const node = _.values(item)[0];\n\n    if (this[type] == null) {\n      throw new Error(type + ' is not implemented');\n    }\n\n    return this[type](node, context);\n  }\n\n  ['RawStmt'](node) {\n    return this.deparse(node.stmt);\n  }\n\n  ['A_Expr'](node, context) {\n    const output = [];\n\n    switch (node.kind) {\n      case 0: // AEXPR_OP\n        if (node.lexpr) {\n          output.push(parens(this.deparse(node.lexpr)));\n        }\n\n        if (node.name.length > 1) {\n          const schema = this.deparse(node.name[0]);\n          const operator = this.deparse(node.name[1]);\n          output.push(`OPERATOR(${schema}.${operator})`);\n        } else {\n          output.push(this.deparse(node.name[0], context));\n        }\n\n        if (node.rexpr) {\n          output.push(parens(this.deparse(node.rexpr, context)));\n        }\n\n        if (output.length === 2) {\n          return parens(output.join(''));\n        }\n\n        return parens(output.join(' '));\n\n      case 1: // AEXPR_OP_ANY\n        output.push(this.deparse(node.lexpr));\n        output.push(format('ANY (%s)', this.deparse(node.rexpr, context)));\n        return output.join(` ${this.deparse(node.name[0], context)} `);\n\n      case 2: // AEXPR_OP_ALL\n        output.push(this.deparse(node.lexpr, context));\n        output.push(format('ALL (%s)', this.deparse(node.rexpr, context)));\n        return output.join(` ${this.deparse(node.name[0], context)} `);\n\n      case 3: // AEXPR_DISTINCT\n        return format(\n          '%s IS DISTINCT FROM %s',\n          this.deparse(node.lexpr, context),\n          this.deparse(node.rexpr, context)\n        );\n\n      case 4: // AEXPR_NULLIF\n        return format(\n          'NULLIF(%s, %s)',\n          this.deparse(node.lexpr, context),\n          this.deparse(node.rexpr, context)\n        );\n\n      case 5: {\n        // AEXPR_OF\n        const op = node.name[0].String.str === '=' ? 'IS OF' : 'IS NOT OF';\n        return format(\n          '%s %s (%s)',\n          this.deparse(node.lexpr, context),\n          op,\n          this.list(node.rexpr, context)\n        );\n      }\n\n      case 6: {\n        // AEXPR_IN\n        const operator = node.name[0].String.str === '=' ? 'IN' : 'NOT IN';\n\n        return format(\n          '%s %s (%s)',\n          this.deparse(node.lexpr, context),\n          operator,\n          this.list(node.rexpr, context)\n        );\n      }\n\n      case 7:\n        return fail('A_Expr', node);\n\n      case 8:\n        output.push(this.deparse(node.lexpr, context));\n\n        if (node.name[0].String.str === '!~~') {\n          output.push(\n            format('NOT LIKE (%s)', this.deparse(node.rexpr, context))\n          );\n        } else {\n          output.push(format('LIKE (%s)', this.deparse(node.rexpr, context)));\n        }\n\n        return output.join(' ');\n\n      case 9:\n        output.push(this.deparse(node.lexpr, context));\n\n        if (node.name[0].String.str === '!~~*') {\n          output.push(\n            format('NOT ILIKE (%s)', this.deparse(node.rexpr, context))\n          );\n        } else {\n          output.push(format('ILIKE (%s)', this.deparse(node.rexpr, context)));\n        }\n\n        return output.join(' ');\n\n      case 10:\n        // SIMILAR TO emits a similar_escape FuncCall node with the first argument\n        output.push(this.deparse(node.lexpr, context));\n\n        if (node.name[0].String.str === '!~') {\n          if (this.deparse(node.rexpr.FuncCall.args[1].Null, context)) {\n            output.push(\n              format(\n                'NOT SIMILAR TO %s',\n                this.deparse(node.rexpr.FuncCall.args[0], context)\n              )\n            );\n          } else {\n            output.push(\n              format(\n                'NOT SIMILAR TO %s ESCAPE %s',\n                this.deparse(node.rexpr.FuncCall.args[0], context),\n                this.deparse(node.rexpr.FuncCall.args[1], context)\n              )\n            );\n          }\n        } else if (this.deparse(node.rexpr.FuncCall.args[1].Null, context)) {\n          output.push(\n            format(\n              'SIMILAR TO %s',\n              this.deparse(node.rexpr.FuncCall.args[0], context)\n            )\n          );\n        } else {\n          output.push(\n            format(\n              'SIMILAR TO %s ESCAPE %s',\n              this.deparse(node.rexpr.FuncCall.args[0], context),\n              this.deparse(node.rexpr.FuncCall.args[1], context)\n            )\n          );\n        }\n\n        return output.join(' ');\n\n      case 11:\n        output.push(this.deparse(node.lexpr, context));\n        output.push(\n          format(\n            'BETWEEN %s AND %s',\n            this.deparse(node.rexpr[0], context),\n            this.deparse(node.rexpr[1], context)\n          )\n        );\n        return output.join(' ');\n\n      case 12:\n        output.push(this.deparse(node.lexpr, context));\n        output.push(\n          format(\n            'NOT BETWEEN %s AND %s',\n            this.deparse(node.rexpr[0], context),\n            this.deparse(node.rexpr[1], context)\n          )\n        );\n        return output.join(' ');\n\n      default:\n        return fail('A_Expr', node);\n    }\n  }\n\n  ['Alias'](node, context) {\n    const name = node.aliasname;\n\n    const output = [ 'AS' ];\n\n    if (node.colnames) {\n      output.push(name + parens(this.list(node.colnames)));\n    } else {\n      output.push(this.quote(name));\n    }\n\n    return output.join(' ');\n  }\n\n  ['A_ArrayExpr'](node) {\n    return format('ARRAY[%s]', this.list(node.elements));\n  }\n\n  ['A_Const'](node, context) {\n    if (node.val.String) {\n      return this.escape(this.deparse(node.val, context));\n    }\n\n    return this.deparse(node.val, context);\n  }\n\n  ['A_Indices'](node) {\n    if (node.lidx) {\n      return format(\n        '[%s:%s]',\n        this.deparse(node.lidx),\n        this.deparse(node.uidx)\n      );\n    }\n\n    return format('[%s]', this.deparse(node.uidx));\n  }\n\n  ['A_Indirection'](node) {\n    const output = [ `(${this.deparse(node.arg)})` ];\n\n    // TODO(zhm) figure out the actual rules for when a '.' is needed\n    //\n    // select a.b[0] from a;\n    // select (select row(1)).*\n    // select c2[2].f2 from comptable\n    // select c2.a[2].f2[1].f3[0].a1 from comptable\n\n    for (let i = 0; i < node.indirection.length; i++) {\n      const subnode = node.indirection[i];\n\n      if (subnode.String || subnode.A_Star) {\n        const value = subnode.A_Star ? '*' : this.quote(subnode.String.str);\n\n        output.push(`.${value}`);\n      } else {\n        output.push(this.deparse(subnode));\n      }\n    }\n\n    return output.join('');\n  }\n\n  ['A_Star'](node, context) {\n    return '*';\n  }\n\n  ['BitString'](node) {\n    const prefix = node.str[0];\n    return `${prefix}'${node.str.substring(1)}'`;\n  }\n\n  ['BoolExpr'](node) {\n    switch (node.boolop) {\n      case 0:\n        return parens(this.list(node.args, ' AND '));\n      case 1:\n        return parens(this.list(node.args, ' OR '));\n      case 2:\n        return format('NOT (%s)', this.deparse(node.args[0]));\n      default:\n        return fail('BoolExpr', node);\n    }\n  }\n\n  ['BooleanTest'](node) {\n    const output = [];\n\n    output.push(this.deparse(node.arg));\n\n    const tests = [\n      'IS TRUE',\n      'IS NOT TRUE',\n      'IS FALSE',\n      'IS NOT FALSE',\n      'IS UNKNOWN',\n      'IS NOT UNKNOWN'\n    ];\n\n    output.push(tests[node.booltesttype]);\n\n    return output.join(' ');\n  }\n\n  ['CaseExpr'](node) {\n    const output = [ 'CASE' ];\n\n    if (node.arg) {\n      output.push(this.deparse(node.arg));\n    }\n\n    for (let i = 0; i < node.args.length; i++) {\n      output.push(this.deparse(node.args[i]));\n    }\n\n    if (node.defresult) {\n      output.push('ELSE');\n      output.push(this.deparse(node.defresult));\n    }\n\n    output.push('END');\n\n    return output.join(' ');\n  }\n\n  ['CoalesceExpr'](node) {\n    return format('COALESCE(%s)', this.list(node.args));\n  }\n\n  ['CollateClause'](node) {\n    const output = [];\n\n    if (node.arg) {\n      output.push(this.deparse(node.arg));\n    }\n\n    output.push('COLLATE');\n\n    if (node.collname) {\n      output.push(this.quote(this.deparseNodes(node.collname)));\n    }\n\n    return output.join(' ');\n  }\n\n  ['CompositeTypeStmt'](node) {\n    const output = [];\n\n    output.push('CREATE TYPE');\n    output.push(this.deparse(node.typevar));\n    output.push('AS');\n    output.push('(');\n    output.push(this.list(node.coldeflist, ',\\n', '\\t'));\n    output.push(')');\n\n    return output.join(' ');\n  }\n\n  ['RenameStmt'](node) {\n    const output = [];\n\n    if (!objtypeIs(node.renameType, 'OBJECT_COLUMN')) {\n      throw new Error('renameType not yet implemented');\n    }\n    if (!objtypeIs(node.relationType, 'OBJECT_TABLE')) {\n      throw new Error('relationType not yet implemented');\n    }\n\n    output.push('ALTER');\n    output.push('TABLE');\n    output.push(this.deparse(node.relation));\n    output.push('RENAME');\n    output.push('COLUMN');\n    output.push(node.subname);\n    output.push('TO');\n    output.push(node.newname);\n\n    return output.join(' ');\n  }\n\n  ['ColumnDef'](node) {\n    const output = [ this.quote(node.colname) ];\n\n    output.push(this.deparse(node.typeName));\n\n    if (node.raw_default) {\n      output.push('USING');\n      output.push(this.deparse(node.raw_default));\n    }\n\n    if (node.constraints) {\n      output.push(this.list(node.constraints, ' '));\n    }\n\n    if (node.collClause) {\n      output.push('COLLATE');\n      const str = dotty.get(\n        node,\n        'collClause.CollateClause.collname.0.String.str'\n      );\n      output.push(this.quote(str));\n    }\n\n    return _.compact(output).join(' ');\n  }\n\n  ['SQLValueFunction'](node) {\n    if (node.op === 0) {\n      return 'CURRENT_DATE';\n    }\n    if (node.op === 3) {\n      return 'CURRENT_TIMESTAMP';\n    }\n    if (node.op === 10) {\n      return 'CURRENT_USER';\n    }\n    if (node.op === 12) {\n      return 'SESSION_USER';\n    }\n    throw new Error(`op=${node.op} SQLValueFunction not implemented`);\n  }\n\n  ['ColumnRef'](node, context) {\n    const KEYWORDS = [ 'old', 'new' ];\n    const fields = node.fields.map(field => {\n      if (field.String) {\n        const value = this.deparse(field);\n        if (context === 'trigger' && KEYWORDS.includes(value.toLowerCase())) {\n          return value.toUpperCase();\n        }\n        return this.quote(value);\n      }\n\n      return this.deparse(field);\n    });\n    return fields.join('.');\n  }\n\n  ['CommentStmt'](node) {\n    const output = [];\n\n    output.push('COMMENT');\n    output.push('ON');\n    output.push(objtypeName(node.objtype));\n\n    if (objtypeIs(node.objtype, 'OBJECT_CAST')) {\n      output.push('(');\n      output.push(this.deparse(node.object[0]));\n      output.push('AS');\n      output.push(this.deparse(node.object[1]));\n      output.push(')');\n    } else if (objtypeIs(node.objtype, 'OBJECT_DOMCONSTRAINT')) {\n      output.push(this.deparse(node.object[1]));\n      output.push('ON');\n      output.push('DOMAIN');\n      output.push(this.deparse(node.object[0]));\n    } else if (\n      objtypeIs(node.objtype, 'OBJECT_OPCLASS') ||\n      objtypeIs(node.objtype, 'OBJECT_OPFAMILY')\n    ) {\n      output.push(this.deparse(node.object[1]));\n      output.push('USING');\n      output.push(this.deparse(node.object[0]));\n    } else if (objtypeIs(node.objtype, 'OBJECT_OPERATOR')) {\n      output.push(this.deparse(node.object, 'noquotes'));\n    } else if (objtypeIs(node.objtype, 'OBJECT_POLICY')) {\n      output.push(this.deparse(node.object[1]));\n      output.push('ON');\n      output.push(this.deparse(node.object[0]));\n    } else if (objtypeIs(node.objtype, 'OBJECT_ROLE')) {\n      output.push(this.deparse(node.object));\n    } else if (objtypeIs(node.objtype, 'OBJECT_RULE')) {\n      output.push(this.deparse(node.object[1]));\n      output.push('ON');\n      output.push(this.deparse(node.object[0]));\n    } else if (objtypeIs(node.objtype, 'OBJECT_TABCONSTRAINT')) {\n      output.push(this.deparse(node.object[1]));\n      output.push('ON');\n      output.push(this.deparse(node.object[0]));\n    } else if (objtypeIs(node.objtype, 'OBJECT_TRANSFORM')) {\n      output.push('FOR');\n      output.push(this.deparse(node.object[0]));\n      output.push('LANGUAGE');\n      output.push(this.deparse(node.object[1]));\n    } else if (objtypeIs(node.objtype, 'OBJECT_TRIGGER')) {\n      output.push(this.deparse(node.object[1]));\n      output.push('ON');\n      output.push(this.deparse(node.object[0]));\n    } else {\n      if (objtypeIs(node.objtype, 'OBJECT_LARGEOBJECT')) {\n        output.push(dotty.get(node, 'object.Integer.ival'));\n      } else if (node.object instanceof Array) {\n        output.push(this.listQuotes(node.object, '.'));\n      } else {\n        output.push(this.deparse(node.object));\n      }\n\n      if (node.objargs) {\n        output.push('(');\n        output.push(this.list(node.objargs));\n        output.push(')');\n      }\n    }\n\n    output.push('IS');\n\n    if (node.comment) {\n      output.push(`E'${node.comment}'`);\n    } else {\n      output.push('NULL');\n    }\n\n    return output.join(' ');\n  }\n\n  ['CommonTableExpr'](node) {\n    const output = [];\n\n    output.push(node.ctename);\n\n    if (node.aliascolnames) {\n      output.push(\n        format('(%s)', this.quote(this.deparseNodes(node.aliascolnames)))\n      );\n    }\n\n    output.push(format('AS (%s)', this.deparse(node.ctequery)));\n\n    return output.join(' ');\n  }\n\n  ['DefElem'](node) {\n    if (node.defname === 'transaction_isolation') {\n      return format(\n        'ISOLATION LEVEL %s',\n        node.arg.A_Const.val.String.str.toUpperCase()\n      );\n    }\n\n    if (node.defname === 'transaction_read_only') {\n      return node.arg.A_Const.val.Integer.ival === 0\n        ? 'READ WRITE'\n        : 'READ ONLY';\n    }\n\n    if (node.defname === 'transaction_deferrable') {\n      return node.arg.A_Const.val.Integer.ival === 0\n        ? 'NOT DEFERRABLE'\n        : 'DEFERRABLE';\n    }\n\n    if (node.defname === 'set') {\n      return this.deparse(node.arg);\n    }\n\n    let name = node.defname;\n    if (node.defnamespace) {\n      name = `${node.defnamespace}.${node.defname}`;\n    }\n\n    if (node.arg) {\n      return `${name} = ${this.deparse(node.arg)}`;\n    }\n    return name;\n  }\n\n  ['DoStmt'](node) {\n    return `DO $$\\n  ${dotty\n      .get(node, 'args.0.DefElem.arg.String.str')\n      .trim()} $$`;\n  }\n\n  ['Float'](node) {\n    // wrap negative numbers in parens, SELECT (-2147483648)::int4 * (-1)::int4\n    if (node.str[0] === '-') {\n      return `(${node.str})`;\n    }\n\n    return node.str;\n  }\n\n  ['FuncCall'](node, context) {\n    const output = [];\n\n    let params = [];\n\n    if (node.args) {\n      params = node.args.map(item => {\n        return this.deparse(item);\n      });\n    }\n\n    // COUNT(*)\n    if (node.agg_star) {\n      params.push('*');\n    }\n\n    const name = this.list(node.funcname, '.');\n\n    const order = [];\n\n    const withinGroup = node.agg_within_group;\n\n    if (node.agg_order) {\n      order.push('ORDER BY');\n      order.push(this.list(node.agg_order, ', '));\n    }\n\n    const call = [];\n\n    call.push(name + '(');\n\n    if (node.agg_distinct) {\n      call.push('DISTINCT ');\n    }\n\n    // prepend variadic before the last parameter\n    // SELECT CONCAT('|', VARIADIC ARRAY['1','2','3'])\n    if (node.func_variadic) {\n      params[params.length - 1] = 'VARIADIC ' + params[params.length - 1];\n    }\n\n    call.push(params.join(', '));\n\n    if (order.length && !withinGroup) {\n      call.push(' ');\n      call.push(order.join(' '));\n    }\n\n    call.push(')');\n\n    output.push(compact(call).join(''));\n\n    if (order.length && withinGroup) {\n      output.push('WITHIN GROUP');\n      output.push(parens(order.join(' ')));\n    }\n\n    if (node.agg_filter != null) {\n      output.push(format('FILTER (WHERE %s)', this.deparse(node.agg_filter)));\n    }\n\n    if (node.over != null) {\n      output.push(format('OVER %s', this.deparse(node.over)));\n    }\n\n    return output.join(' ');\n  }\n\n  ['GroupingFunc'](node) {\n    return 'GROUPING(' + this.list(node.args) + ')';\n  }\n\n  ['GroupingSet'](node) {\n    switch (node.kind) {\n      case 0: // GROUPING_SET_EMPTY\n        return '()';\n\n      case 1: // GROUPING_SET_SIMPLE\n        return fail('GroupingSet', node);\n\n      case 2: // GROUPING_SET_ROLLUP\n        return 'ROLLUP (' + this.list(node.content) + ')';\n\n      case 3: // GROUPING_SET_CUBE\n        return 'CUBE (' + this.list(node.content) + ')';\n\n      case 4: // GROUPING_SET_SETS\n        return 'GROUPING SETS (' + this.list(node.content) + ')';\n\n      default:\n        return fail('GroupingSet', node);\n    }\n  }\n\n  ['IndexStmt'](node) {\n    const output = [];\n    output.push('CREATE');\n    if (node.unique) {\n      output.push('UNIQUE');\n    }\n    output.push('INDEX');\n    if (node.concurrent) {\n      output.push('CONCURRENTLY');\n    }\n\n    if (node.idxname) {\n      output.push(node.idxname);\n    }\n    output.push('ON');\n    output.push(this.deparse(node.relation));\n\n    if (node.indexParams) {\n      output.push('(');\n      output.push(this.list(node.indexParams));\n      output.push(')');\n    }\n\n    if (node.whereClause) {\n      output.push('WHERE');\n      output.push(this.deparse(node.whereClause));\n    }\n\n    return output.join(' ');\n  }\n\n  ['IndexElem'](node) {\n    if (node.name) {\n      return node.name;\n    }\n    if (node.expr) {\n      return this.deparse(node.expr);\n    }\n    return fail('IndexElem', node);\n  }\n\n  ['InsertStmt'](node) {\n    const output = [];\n\n    output.push('INSERT INTO');\n    output.push(this.deparse(node.relation));\n    output.push('(');\n    output.push(this.list(node.cols));\n    output.push(')');\n    output.push(this.deparse(node.selectStmt));\n\n    return output.join(' ');\n  }\n\n  ['Integer'](node, context) {\n    if (node.ival < 0 && context !== 'simple') {\n      return `(${node.ival})`;\n    }\n\n    return node.ival.toString();\n  }\n\n  ['IntoClause'](node) {\n    return this.deparse(node.rel);\n  }\n\n  ['JoinExpr'](node, context) {\n    const output = [];\n\n    output.push(this.deparse(node.larg));\n\n    if (node.isNatural) {\n      output.push('NATURAL');\n    }\n\n    let join = null;\n\n    switch (true) {\n      case node.jointype === 0 && node.quals != null:\n        join = 'INNER JOIN';\n        break;\n\n      case node.jointype === 0 &&\n        !node.isNatural &&\n        !(node.quals != null) &&\n        !(node.usingClause != null):\n        join = 'CROSS JOIN';\n        break;\n\n      case node.jointype === 0:\n        join = 'JOIN';\n        break;\n\n      case node.jointype === 1:\n        join = 'LEFT OUTER JOIN';\n        break;\n\n      case node.jointype === 2:\n        join = 'FULL OUTER JOIN';\n        break;\n\n      case node.jointype === 3:\n        join = 'RIGHT OUTER JOIN';\n        break;\n\n      default:\n        fail('JoinExpr', node);\n        break;\n    }\n\n    output.push(join);\n\n    if (node.rarg) {\n      // wrap nested join expressions in parens to make the following symmetric:\n      // select * from int8_tbl x cross join (int4_tbl x cross join lateral (select x.f1) ss)\n      if (node.rarg.JoinExpr != null && !(node.rarg.JoinExpr.alias != null)) {\n        output.push(`(${this.deparse(node.rarg)})`);\n      } else {\n        output.push(this.deparse(node.rarg));\n      }\n    }\n\n    if (node.quals) {\n      output.push(`ON ${this.deparse(node.quals)}`);\n    }\n\n    if (node.usingClause) {\n      const using = this.quote(this.deparseNodes(node.usingClause)).join(', ');\n\n      output.push(`USING (${using})`);\n    }\n\n    const wrapped =\n      node.rarg.JoinExpr != null || node.alias\n        ? '(' + output.join(' ') + ')'\n        : output.join(' ');\n\n    if (node.alias) {\n      return wrapped + ' ' + this.deparse(node.alias);\n    }\n\n    return wrapped;\n  }\n\n  ['LockingClause'](node) {\n    const strengths = [\n      'NONE', // LCS_NONE\n      'FOR KEY SHARE',\n      'FOR SHARE',\n      'FOR NO KEY UPDATE',\n      'FOR UPDATE'\n    ];\n\n    const output = [];\n\n    output.push(strengths[node.strength]);\n\n    if (node.lockedRels) {\n      output.push('OF');\n      output.push(this.list(node.lockedRels));\n    }\n\n    return output.join(' ');\n  }\n\n  ['MinMaxExpr'](node) {\n    const output = [];\n\n    if (node.op === 0) {\n      output.push('GREATEST');\n    } else {\n      output.push('LEAST');\n    }\n\n    output.push(parens(this.list(node.args)));\n\n    return output.join('');\n  }\n\n  ['NamedArgExpr'](node) {\n    const output = [];\n\n    output.push(node.name);\n    output.push(':=');\n    output.push(this.deparse(node.arg));\n\n    return output.join(' ');\n  }\n\n  ['Null'](node) {\n    return 'NULL';\n  }\n\n  ['NullTest'](node) {\n    const output = [ this.deparse(node.arg) ];\n\n    if (node.nulltesttype === 0) {\n      output.push('IS NULL');\n    } else if (node.nulltesttype === 1) {\n      output.push('IS NOT NULL');\n    }\n\n    return output.join(' ');\n  }\n\n  ['ParamRef'](node) {\n    if (node.number >= 0) {\n      return [ '$', node.number ].join('');\n    }\n    return '?';\n  }\n\n  ['RangeFunction'](node) {\n    const output = [];\n\n    if (node.lateral) {\n      output.push('LATERAL');\n    }\n\n    const funcs = [];\n\n    for (let i = 0; i < node.functions.length; i++) {\n      const funcCall = node.functions[i];\n      const call = [ this.deparse(funcCall[0]) ];\n\n      if (funcCall[1] && funcCall[1].length) {\n        call.push(format('AS (%s)', this.list(funcCall[1])));\n      }\n\n      funcs.push(call.join(' '));\n    }\n\n    const calls = funcs.join(', ');\n\n    if (node.is_rowsfrom) {\n      output.push(`ROWS FROM (${calls})`);\n    } else {\n      output.push(calls);\n    }\n\n    if (node.ordinality) {\n      output.push('WITH ORDINALITY');\n    }\n\n    if (node.alias) {\n      output.push(this.deparse(node.alias));\n    }\n\n    if (node.coldeflist) {\n      const defList = this.list(node.coldeflist);\n\n      if (!node.alias) {\n        output.push(` AS (${defList})`);\n      } else {\n        output.push(`(${defList})`);\n      }\n    }\n\n    return output.join(' ');\n  }\n\n  ['RangeSubselect'](node, context) {\n    let output = '';\n\n    if (node.lateral) {\n      output += 'LATERAL ';\n    }\n\n    output += parens(this.deparse(node.subquery));\n\n    if (node.alias) {\n      return output + ' ' + this.deparse(node.alias);\n    }\n\n    return output;\n  }\n\n  ['RangeTableSample'](node) {\n    const output = [];\n\n    output.push(this.deparse(node.relation));\n    output.push('TABLESAMPLE');\n    output.push(this.deparse(node.method[0]));\n\n    if (node.args) {\n      output.push(parens(this.list(node.args)));\n    }\n\n    if (node.repeatable) {\n      output.push('REPEATABLE(' + this.deparse(node.repeatable) + ')');\n    }\n\n    return output.join(' ');\n  }\n\n  ['RangeVar'](node, context) {\n    const output = [];\n\n    if (node.inhOpt === 0) {\n      output.push('ONLY');\n    }\n\n    if (node.relpersistence === 'u') {\n      output.push('UNLOGGED');\n    }\n\n    if (node.relpersistence === 't') {\n      output.push('TEMPORARY TABLE');\n    }\n\n    if (node.schemaname != null) {\n      output.push(`${this.quote(node.schemaname)}.${this.quote(node.relname)}`);\n    } else {\n      output.push(this.quote(node.relname));\n    }\n\n    if (node.alias) {\n      output.push(this.deparse(node.alias));\n    }\n\n    return output.join(' ');\n  }\n\n  ['ResTarget'](node, context) {\n    if (context === 'select') {\n      return compact([ this.deparse(node.val), this.quote(node.name) ]).join(\n        ' AS '\n      );\n    } else if (context === 'update') {\n      return compact([ node.name, this.deparse(node.val) ]).join(' = ');\n    } else if (!(node.val != null)) {\n      return this.quote(node.name);\n    }\n\n    return fail('ResTarget', node);\n  }\n\n  ['RowExpr'](node) {\n    if (node.row_format === 2) {\n      return parens(this.list(node.args));\n    }\n\n    return format('ROW(%s)', this.list(node.args));\n  }\n\n  ['SelectStmt'](node, context) {\n    const output = [];\n\n    if (node.withClause) {\n      output.push(this.deparse(node.withClause));\n    }\n\n    if (node.op === 0) {\n      // VALUES select's don't get SELECT\n      if (node.valuesLists == null) {\n        output.push('SELECT');\n      }\n    } else {\n      output.push(parens(this.deparse(node.larg)));\n\n      const sets = [ 'NONE', 'UNION', 'INTERSECT', 'EXCEPT' ];\n\n      output.push(sets[node.op]);\n\n      if (node.all) {\n        output.push('ALL');\n      }\n\n      output.push(parens(this.deparse(node.rarg)));\n    }\n\n    if (node.distinctClause) {\n      if (node.distinctClause[0] != null) {\n        output.push('DISTINCT ON');\n\n        const clause = node.distinctClause\n          .map(e => this.deparse(e, 'select'))\n          .join(',\\n');\n\n        output.push(`(${clause})`);\n      } else {\n        output.push('DISTINCT');\n      }\n    }\n\n    if (node.targetList) {\n      output.push(\n        indent(node.targetList.map(e => this.deparse(e, 'select')).join(',\\n'))\n      );\n    }\n\n    if (node.intoClause) {\n      output.push('INTO');\n      output.push(indent(this.deparse(node.intoClause)));\n    }\n\n    if (node.fromClause) {\n      output.push('FROM');\n      output.push(\n        indent(node.fromClause.map(e => this.deparse(e, 'from')).join(',\\n'))\n      );\n    }\n\n    if (node.whereClause) {\n      output.push('WHERE');\n      output.push(indent(this.deparse(node.whereClause)));\n    }\n\n    if (node.valuesLists) {\n      output.push('VALUES');\n\n      const lists = node.valuesLists.map(list => {\n        return `(${this.list(list)})`;\n      });\n\n      output.push(lists.join(', '));\n    }\n\n    if (node.groupClause) {\n      output.push('GROUP BY');\n      output.push(\n        indent(node.groupClause.map(e => this.deparse(e, 'group')).join(',\\n'))\n      );\n    }\n\n    if (node.havingClause) {\n      output.push('HAVING');\n      output.push(indent(this.deparse(node.havingClause)));\n    }\n\n    if (node.windowClause) {\n      output.push('WINDOW');\n\n      const windows = [];\n\n      for (let i = 0; i < node.windowClause.length; i++) {\n        const w = node.windowClause[i];\n        const window = [];\n\n        if (w.WindowDef.name) {\n          window.push(this.quote(w.WindowDef.name) + ' AS');\n        }\n\n        window.push(parens(this.deparse(w, 'window')));\n\n        windows.push(window.join(' '));\n      }\n\n      output.push(windows.join(', '));\n    }\n\n    if (node.sortClause) {\n      output.push('ORDER BY');\n      output.push(\n        indent(node.sortClause.map(e => this.deparse(e, 'sort')).join(',\\n'))\n      );\n    }\n\n    if (node.limitCount) {\n      output.push('LIMIT');\n      output.push(indent(this.deparse(node.limitCount)));\n    }\n\n    if (node.limitOffset) {\n      output.push('OFFSET');\n      output.push(indent(this.deparse(node.limitOffset)));\n    }\n\n    if (node.lockingClause) {\n      node.lockingClause.forEach(item => {\n        return output.push(this.deparse(item));\n      });\n    }\n\n    return output.join(' ');\n  }\n\n  ['AlterDefaultPrivilegesStmt'](node) {\n    const output = [];\n    output.push('ALTER DEFAULT PRIVILEGES');\n\n    const options = dotty.get(node, 'options');\n\n    if (options) {\n      const elem = node.options.find(el => el.hasOwnProperty('DefElem'));\n\n      if (elem.DefElem.defname === 'schemas') {\n        output.push('IN SCHEMA');\n        output.push(dotty.get(elem, 'DefElem.arg.0.String.str'));\n      }\n      if (elem.DefElem.defname === 'roles') {\n        output.push('FOR ROLE');\n        const roleSpec = dotty.get(elem, 'DefElem.arg.0');\n        output.push(this.deparse(roleSpec));\n      }\n      output.push('\\n');\n    }\n    output.push(this.deparse(node.action));\n\n    return output.join(' ');\n  }\n\n  ['AlterTableStmt'](node) {\n    const output = [];\n    output.push('ALTER');\n    if (node.relkind === 32) {\n      output.push('TABLE');\n    } else if (node.relkind === 42) {\n      output.push('VIEW');\n    } else if (node.relkind === 40) {\n      output.push('TYPE');\n    } else {\n      output.push('TABLE');\n    }\n    if (node.missing_ok) {\n      output.push('IF EXISTS');\n    }\n    output.push(this.deparse(node.relation));\n    output.push(this.list(node.cmds));\n\n    return output.join(' ');\n  }\n\n  ['AlterTableCmd'](node) {\n    const output = [];\n\n    if (node.subtype === 0) {\n      output.push('ADD COLUMN');\n      output.push(this.quote(node.name));\n      output.push(this.deparse(node.def));\n    }\n\n    if (node.subtype === 3) {\n      output.push('ALTER COLUMN');\n      output.push(this.quote(node.name));\n      if (node.def) {\n        output.push('SET DEFAULT');\n        output.push(this.deparse(node.def));\n      } else {\n        output.push('DROP DEFAULT');\n      }\n    }\n\n    if (node.subtype === 4) {\n      output.push('ALTER COLUMN');\n      output.push(this.quote(node.name));\n      output.push('DROP NOT NULL');\n    }\n\n    if (node.subtype === 5) {\n      output.push('ALTER COLUMN');\n      output.push(this.quote(node.name));\n      output.push('SET NOT NULL');\n    }\n\n    if (node.subtype === 6) {\n      output.push('ALTER');\n      output.push(this.quote(node.name));\n      output.push('SET STATISTICS');\n      output.push(dotty.get(node, 'def.Integer.ival'));\n    }\n\n    if (node.subtype === 7) {\n      output.push('ALTER COLUMN');\n      output.push(this.quote(node.name));\n      output.push('SET');\n      output.push('(');\n      output.push(this.list(node.def));\n      output.push(')');\n    }\n\n    if (node.subtype === 9) {\n      output.push('ALTER');\n      output.push(this.quote(node.name));\n      output.push('SET STORAGE');\n      if (node.def) {\n        output.push(this.deparse(node.def));\n      } else {\n        output.push('PLAIN');\n      }\n    }\n\n    if (node.subtype === 10) {\n      output.push('DROP');\n      if (node.missing_ok) {\n        output.push('IF EXISTS');\n      }\n      output.push(this.quote(node.name));\n    }\n\n    if (node.subtype === 14) {\n      // output.push('ADD CONSTRAINT');\n      output.push('ADD');\n      output.push(this.deparse(node.def));\n    }\n\n    if (node.subtype === 18) {\n      output.push('VALIDATE CONSTRAINT');\n      output.push(this.quote(node.name));\n    }\n\n    if (node.subtype === 22) {\n      output.push('DROP CONSTRAINT');\n      if (node.missing_ok) {\n        output.push('IF EXISTS');\n      }\n      output.push(this.quote(node.name));\n    }\n\n    if (node.subtype === 25) {\n      output.push('ALTER COLUMN');\n      output.push(this.quote(node.name));\n      output.push('TYPE');\n      output.push(this.deparse(node.def));\n    }\n\n    if (node.subtype === 28) {\n      output.push('CLUSTER ON');\n      output.push(this.quote(node.name));\n    }\n\n    if (node.subtype === 29) {\n      output.push('SET WITHOUT CLUSTER');\n    }\n\n    if (node.subtype === 32) {\n      output.push('SET WITH OIDS');\n    }\n\n    if (node.subtype === 34) {\n      output.push('SET WITHOUT OIDS');\n    }\n\n    if (node.subtype === 36) {\n      output.push('SET');\n      output.push('(');\n      output.push(this.list(node.def));\n      output.push(')');\n    }\n\n    if (node.subtype === 37) {\n      output.push('RESET');\n      output.push('(');\n      output.push(this.list(node.def));\n      output.push(')');\n    }\n\n    if (node.subtype === 51) {\n      output.push('INHERIT');\n      output.push(this.deparse(node.def));\n    }\n\n    if (node.subtype === 52) {\n      output.push('NO INHERIT');\n      output.push(this.deparse(node.def));\n    }\n\n    if (node.subtype === 56) {\n      output.push('ENABLE ROW LEVEL SECURITY');\n    }\n    if (node.subtype === 57) {\n      output.push('DISABLE ROW LEVEL SECURITY');\n    }\n    if (node.subtype === 58) {\n      output.push('FORCE ROW SECURITY');\n    }\n    if (node.subtype === 59) {\n      output.push('NO FORCE ROW SECURITY');\n    }\n\n    return output.join(' ');\n  }\n\n  ['CreateEnumStmt'](node) {\n    const output = [];\n    output.push('CREATE TYPE');\n    output.push(this.list(node.typeName, '.'));\n    output.push('AS ENUM');\n    output.push('(\\n');\n    const vals = node.vals.map(val => {\n      return { String: { str: `'${val.String.str}'` } };\n    });\n    output.push(this.list(vals, ',\\n', '\\t'));\n    output.push('\\n)');\n    return output.join(' ');\n  }\n\n  ['CreateExtensionStmt'](node) {\n    const output = [];\n    output.push('CREATE EXTENSION');\n    if (node.if_not_exists) {\n      output.push('IF NOT EXISTS');\n    }\n    output.push(this.quote(node.extname));\n    if (node.options) {\n      node.options.forEach(opt => {\n        if (\n          opt.DefElem.defname === 'cascade' &&\n          opt.DefElem.arg.Integer.ival === 1\n        ) {\n          output.push('CASCADE');\n        }\n      });\n    }\n    return output.join(' ');\n  }\n\n  ['DropStmt'](node) {\n    const output = [];\n    output.push('DROP');\n    output.push(objtypeName(node.removeType));\n    if (node.missing_ok) {\n      output.push('IF EXISTS');\n    }\n    output.push(this.listQuotes(node.objects));\n    if (node.behavior) {\n      output.push('CASCADE');\n    }\n    return output.join(' ');\n  }\n\n  ['CreatePolicyStmt'](node) {\n    const output = [];\n    output.push('CREATE POLICY');\n\n    output.push(this.quote(node.policy_name));\n    if (node.table) {\n      output.push('ON');\n      output.push(this.deparse(node.table));\n    }\n    if (node.cmd_name) {\n      output.push('FOR');\n      output.push(node.cmd_name.toUpperCase());\n    }\n    output.push('TO');\n    output.push(this.list(node.roles));\n\n    if (node.with_check) {\n      output.push('WITH CHECK');\n      output.push('(');\n      output.push(this.deparse(node.with_check));\n      output.push(')');\n    } else {\n      output.push('USING');\n      output.push('(');\n      output.push(this.deparse(node.qual));\n      output.push(')');\n    }\n\n    return output.join(' ');\n  }\n\n  ['ViewStmt'](node) {\n    const output = [];\n    output.push('CREATE VIEW');\n    output.push(this.deparse(node.view));\n    output.push('AS');\n    output.push(this.deparse(node.query));\n    return output.join(' ');\n  }\n\n  ['CreateTableAsStmt'](node) {\n    const output = [];\n    output.push('CREATE MATERIALIZED VIEW');\n    output.push(this.deparse(node.into));\n    output.push('AS');\n    output.push(this.deparse(node.query));\n    return output.join(' ');\n  }\n\n  ['CreateTrigStmt'](node) {\n    const output = [];\n\n    output.push('CREATE');\n    if (node.isconstraint) {\n      output.push('CONSTRAINT');\n    }\n    output.push('TRIGGER');\n    output.push(this.quote(node.trigname));\n    output.push('\\n');\n\n    // int16 timing;  BEFORE, AFTER, or INSTEAD\n\n    if (node.timing === 64) {\n      output.push('INSTEAD OF');\n    } else if (node.timing === 2) {\n      output.push('BEFORE');\n    } else {\n      output.push('AFTER');\n    }\n\n    // int16 events;  \"OR\" of INSERT/UPDATE/DELETE/TRUNCATE\n\n    //  4 = 0b000100 (insert)\n    //  8 = 0b001000 (delete)\n    // 16 = 0b010000 (update)\n    // 32 = 0b100000 (TRUNCATE)\n\n    const TRIGGER_EVENTS = {\n      INSERT: 4,\n      DELETE: 8,\n      UPDATE: 16,\n      TRUNCATE: 32\n    };\n\n    const events = [];\n    if ((TRIGGER_EVENTS.INSERT & node.events) === TRIGGER_EVENTS.INSERT) {\n      events.push('INSERT');\n    }\n    if ((TRIGGER_EVENTS.UPDATE & node.events) === TRIGGER_EVENTS.UPDATE) {\n      events.push('UPDATE');\n    }\n    if ((TRIGGER_EVENTS.DELETE & node.events) === TRIGGER_EVENTS.DELETE) {\n      events.push('DELETE');\n    }\n    if ((TRIGGER_EVENTS.TRUNCATE & node.events) === TRIGGER_EVENTS.TRUNCATE) {\n      events.push('TRUNCATE');\n    }\n\n    // events\n    output.push(events.join(' OR '));\n\n    // columns\n    if (node.columns) {\n      output.push('OF');\n      output.push(this.list(node.columns));\n    }\n\n    // ON\n    output.push('ON');\n    output.push(this.deparse(node.relation));\n    output.push('\\n');\n\n    if (node.transitionRels) {\n      output.push('REFERENCING');\n      node.transitionRels.forEach(({ TriggerTransition }) => {\n        if (\n          TriggerTransition.isNew === true &&\n          TriggerTransition.isTable === true\n        ) {\n          output.push(`NEW TABLE AS ${TriggerTransition.name}`);\n        } else if (\n          TriggerTransition.isNew !== true &&\n          TriggerTransition.isTable === true\n        ) {\n          output.push(`OLD TABLE AS ${TriggerTransition.name}`);\n        }\n      });\n    }\n\n    // opts\n    if (node.deferrable || node.initdeferred) {\n      if (node.deferrable) {\n        output.push('DEFERRABLE');\n      }\n      if (node.deferrable) {\n        output.push('INITIALLY DEFERRED');\n      }\n      output.push('\\n');\n    }\n\n    if (node.row) {\n      output.push('FOR EACH ROW\\n');\n    } else {\n      output.push('FOR EACH STATEMENT\\n');\n    }\n\n    if (node.whenClause) {\n      output.push('WHEN');\n      output.push('(');\n      output.push(this.deparse(node.whenClause, 'trigger'));\n      output.push(')');\n      output.push('\\n');\n    }\n\n    output.push('EXECUTE PROCEDURE');\n    output.push(\n      this.listQuotes(node.funcname)\n        .split(',')\n        .join('.')\n    );\n    output.push('(');\n    let args = [];\n    if (node.args) {\n      args = node.args;\n    }\n    // seems that it's only parsing strings?\n    args = args\n      .map(arg => {\n        if (dotty.exists(arg, 'String.str')) {\n          return `'${dotty.get(arg, 'String.str')}'`;\n        }\n        return this.deparse(arg);\n      })\n      .filter(a => a);\n    output.push(args.join(','));\n    output.push(')');\n\n    return output.join(' ');\n  }\n\n  ['CreateDomainStmt'](node) {\n    const output = [];\n    output.push('CREATE DOMAIN');\n    output.push(this.list(node.domainname, '.'));\n    output.push('AS');\n    output.push(this.deparse(node.typeName));\n    if (node.constraints) {\n      output.push(this.list(node.constraints));\n    }\n    return output.join(' ');\n  }\n\n  ['CreateStmt'](node) {\n    const output = [];\n    const relpersistence = dotty.get(node, 'relation.RangeVar.relpersistence');\n    if (relpersistence === 't') {\n      output.push('CREATE');\n    } else {\n      output.push('CREATE TABLE');\n    }\n\n    output.push(this.deparse(node.relation));\n    output.push('(\\n');\n    output.push(this.list(node.tableElts, ',\\n', '\\t'));\n    output.push('\\n)');\n\n    if (relpersistence === 'p' && node.hasOwnProperty('inhRelations')) {\n      output.push('INHERITS');\n      output.push('(');\n      output.push(this.list(node.inhRelations));\n      output.push(')');\n    }\n\n    if (node.options) {\n      node.options.forEach(opt => {\n        if (dotty.get(opt, 'DefElem.defname') === 'oids') {\n          if (Number(dotty.get(opt, 'DefElem.arg.Integer.ival')) === 1) {\n            output.push('WITH OIDS');\n          } else {\n            output.push('WITHOUT OIDS');\n          }\n        }\n      });\n    }\n    return output.join(' ');\n  }\n\n  ['ConstraintStmt'](node) {\n    const output = [];\n    const constraint = getConstraintFromConstrType(node.contype);\n    if (node.conname) {\n      output.push('CONSTRAINT');\n      output.push(node.conname);\n      if (!node.pktable) {\n        output.push(constraint);\n      }\n    } else {\n      output.push(constraint);\n    }\n    return output.join(' ');\n  }\n\n  ['ReferenceConstraint'](node) {\n    const output = [];\n    if (node.pk_attrs && node.fk_attrs) {\n      if (node.conname) {\n        output.push('CONSTRAINT');\n        output.push(node.conname);\n      }\n      output.push('FOREIGN KEY');\n      output.push('(');\n      output.push(this.listQuotes(node.fk_attrs));\n      output.push(')');\n      output.push('REFERENCES');\n      output.push(this.deparse(node.pktable));\n      output.push('(');\n      output.push(this.listQuotes(node.pk_attrs));\n      output.push(')');\n    } else if (node.pk_attrs) {\n      output.push(this.ConstraintStmt(node));\n      output.push(this.deparse(node.pktable));\n      output.push('(');\n      output.push(this.listQuotes(node.pk_attrs));\n      output.push(')');\n    } else if (node.fk_attrs) {\n      if (node.conname) {\n        output.push('CONSTRAINT');\n        output.push(node.conname);\n      }\n      output.push('FOREIGN KEY');\n      output.push('(');\n      output.push(this.listQuotes(node.fk_attrs));\n      output.push(')');\n      output.push('REFERENCES');\n      output.push(this.deparse(node.pktable));\n    } else {\n      output.push(this.ConstraintStmt(node));\n      output.push(this.deparse(node.pktable));\n    }\n    return output.join(' ');\n  }\n\n  ['ExclusionConstraint'](node) {\n    const output = [];\n    function getExclusionGroup(nde) {\n      const out = [];\n      const a = nde.exclusions.map(excl => {\n        if (excl[0].IndexElem.name) {\n          return excl[0].IndexElem.name;\n        }\n        return excl[0].IndexElem.expr\n          ? this.deparse(excl[0].IndexElem.expr)\n          : null;\n      });\n\n      const b = nde.exclusions.map(excl => this.deparse(excl[1][0]));\n\n      for (let i = 0; i < a.length; i++) {\n        out.push(`${a[i]} WITH ${b[i]}`);\n        if (i !== a.length - 1) {\n          out.push(',');\n        }\n      }\n\n      return out.join(' ');\n    }\n\n    if (node.exclusions && node.access_method) {\n      output.push('USING');\n      output.push(node.access_method);\n      output.push('(');\n      output.push(getExclusionGroup.call(this, node));\n      output.push(')');\n    }\n\n    return output.join(' ');\n  }\n\n  ['Constraint'](node) {\n    const output = [];\n\n    if (node.contype === CONSTRAINT_TYPES.CONSTR_FOREIGN) {\n      output.push(this.ReferenceConstraint(node));\n    } else {\n      output.push(this.ConstraintStmt(node));\n    }\n\n    if (node.keys) {\n      output.push('(');\n      output.push(this.listQuotes(node.keys));\n      output.push(')');\n    }\n\n    if (node.raw_expr) {\n      output.push('(');\n      output.push(this.deparse(node.raw_expr));\n      output.push(')');\n    }\n\n    if (node.fk_del_action) {\n      switch (node.fk_del_action) {\n        case 'r':\n          output.push('ON DELETE RESTRICT');\n          break;\n        case 'c':\n          output.push('ON DELETE CASCADE');\n          break;\n        default:\n      }\n    }\n\n    if (node.fk_upd_action) {\n      switch (node.fk_upd_action) {\n        case 'r':\n          output.push('ON UPDATE RESTRICT');\n          break;\n        case 'c':\n          output.push('ON UPDATE CASCADE');\n          break;\n        default:\n      }\n    }\n\n    if (node.fk_matchtype === 'f') {\n      output.push('MATCH FULL');\n    }\n\n    if (node.is_no_inherit === true) {\n      output.push('NO INHERIT');\n    }\n\n    if (node.skip_validation === true) {\n      output.push('NOT VALID');\n    }\n\n    if (node.contype === CONSTRAINT_TYPES.CONSTR_EXCLUSION) {\n      output.push(this.ExclusionConstraint(node));\n    }\n\n    if (node.deferrable) {\n      output.push('deferrable');\n    }\n\n    return output.join(' ');\n  }\n\n  ['AccessPriv'](node) {\n    const output = [];\n    if (node.priv_name) {\n      output.push(node.priv_name.toUpperCase());\n    } else {\n      output.push('ALL');\n    }\n    if (node.cols) {\n      output.push('(');\n      output.push(this.list(node.cols));\n      output.push(')');\n    }\n    return output.join(' ');\n  }\n\n  ['VariableSetStmt'](node) {\n    switch (node.kind) {\n      case VARIABLESET_TYPES.VAR_SET_VALUE:\n        return format(\n          'SET %s%s = %s',\n          node.is_local ? 'LOCAL ' : '',\n          node.name,\n          this.deparseNodes(node.args, 'simple').join(', ')\n        );\n      case VARIABLESET_TYPES.VAR_SET_DEFAULT:\n        return format('SET %s TO DEFAULT', node.name);\n      case VARIABLESET_TYPES.VAR_SET_CURRENT:\n        return format('SET %s FROM CURRENT', node.name);\n      case VARIABLESET_TYPES.VAR_SET_MULTI: {\n        const name = {\n          TRANSACTION: 'TRANSACTION',\n          'SESSION CHARACTERISTICS': 'SESSION CHARACTERISTICS AS TRANSACTION'\n        }[node.name];\n\n        return format(\n          'SET %s %s',\n          name,\n          this.deparseNodes(node.args, 'simple').join(', ')\n        );\n      }\n      case VARIABLESET_TYPES.VAR_RESET:\n        return format('RESET %s', node.name);\n      case VARIABLESET_TYPES.VAR_RESET_ALL:\n        return 'RESET ALL';\n      default:\n        return fail('VariableSetKind', node);\n    }\n  }\n\n  ['VariableShowStmt'](node) {\n    return format('SHOW %s', node.name);\n  }\n\n  ['FuncWithArgs'](node) {\n    const output = [];\n    output.push(this.deparse(node.funcname[0]));\n    output.push('(');\n    output.push(this.list(node.funcargs));\n    output.push(')');\n    return output.join(' ');\n  }\n\n  ['FunctionParameter'](node) {\n    const output = [];\n\n    if (node.mode === 118) {\n      output.push('VARIADIC');\n    }\n\n    if (node.mode === 111) {\n      output.push('OUT');\n    }\n\n    if (node.mode === 98) {\n      output.push('INOUT');\n    }\n\n    output.push(node.name);\n    output.push(this.deparse(node.argType));\n\n    if (node.defexpr) {\n      output.push('DEFAULT');\n      output.push(this.deparse(node.defexpr));\n    }\n\n    return output.join(' ');\n  }\n\n  ['CreateFunctionStmt'](node) {\n    const output = [];\n\n    output.push('CREATE');\n    if (node.replace) {\n      output.push('OR REPLACE');\n    }\n    output.push('FUNCTION');\n\n    output.push(node.funcname.map(name => this.deparse(name)).join('.'));\n    output.push('(');\n    let parameters = [];\n    if (node.parameters) {\n      parameters = [ ...node.parameters ];\n    }\n    const parametersList = parameters.filter(\n      ({ FunctionParameter }) =>\n        FunctionParameter.mode === 118 ||\n        FunctionParameter.mode === 111 ||\n        FunctionParameter.mode === 98 ||\n        FunctionParameter.mode === 105\n    );\n    output.push(this.list(parametersList));\n    output.push(')');\n\n    const returns = parameters.filter(\n      ({ FunctionParameter }) => FunctionParameter.mode === 116\n    );\n\n    // const outs = parameters.filter(\n    //   ({ FunctionParameter }) => FunctionParameter.mode === 111\n    // );\n\n    // var setof = node.parameters.filter(\n    //   ({ FunctionParameter }) => FunctionParameter.mode === 109\n    // );\n\n    if (returns.length > 0) {\n      output.push('RETURNS');\n      output.push('TABLE');\n      output.push('(');\n      output.push(this.list(returns));\n      output.push(')');\n    } else if (node.returnType) {\n      output.push('RETURNS');\n      output.push(this.deparse(node.returnType));\n    }\n\n    node.options.forEach((option, i) => {\n      if (option && option.DefElem) {\n        let value = '';\n        switch (option.DefElem.defname) {\n          case 'as':\n            value = this.deparse(option.DefElem.arg[0]);\n            output.push(`AS $EOFCODE$${value}$EOFCODE$`);\n            break;\n\n          case 'language':\n            value = this.deparse(option.DefElem.arg);\n            output.push('LANGUAGE');\n            output.push(value);\n            break;\n\n          case 'security':\n            output.push('SECURITY');\n            value = Number(option.DefElem.arg.Integer.ival);\n            if (value > 0) {\n              output.push('DEFINER');\n            } else {\n              output.push('INVOKER');\n            }\n            break;\n\n          case 'leakproof':\n            value = Number(option.DefElem.arg.Integer.ival);\n            if (value > 0) {\n              output.push('LEAKPROOF');\n            }\n            break;\n\n          case 'window':\n            value = Number(option.DefElem.arg.Integer.ival);\n            if (value > 0) {\n              output.push('WINDOW');\n            }\n            break;\n\n          case 'strict':\n            value = Number(option.DefElem.arg.Integer.ival);\n            if (value > 0) {\n              output.push('STRICT');\n            } else {\n              output.push('CALLED ON NULL INPUT');\n            }\n            break;\n\n          case 'set':\n            if (\n              dotty.get(option, 'DefElem.arg.VariableSetStmt.kind') === 2 &&\n              dotty.get(option, 'DefElem.arg.VariableSetStmt.name') ===\n                'search_path'\n            ) {\n              output.push('SET search_path FROM CURRENT');\n            } else {\n              output.push(this.deparse(option));\n            }\n            break;\n\n          case 'volatility':\n            value = this.deparse(option.DefElem.arg);\n            output.push(value.toUpperCase());\n            break;\n\n          default:\n        }\n      }\n    });\n    return output.join(' ');\n  }\n  ['CreateSchemaStmt'](node) {\n    const output = [];\n\n    output.push('CREATE');\n    if (node.replace) {\n      output.push('OR REPLACE');\n    }\n\n    output.push('SCHEMA');\n\n    if (node.if_not_exists) {\n      output.push('IF NOT EXISTS');\n    }\n\n    output.push(node.schemaname);\n    return output.join(' ');\n  }\n\n  ['RoleSpec'](node) {\n    switch (node.roletype) {\n      case ROLESPEC_TYPES.ROLESPEC_CSTRING:\n        return this.quote(node.rolename);\n      case ROLESPEC_TYPES.ROLESPEC_CURRENT_USER:\n        return 'CURRENT_USER';\n      case ROLESPEC_TYPES.ROLESPEC_SESSION_USER:\n        return 'SESSION_USER';\n      case ROLESPEC_TYPES.ROLESPEC_PUBLIC:\n        return 'PUBLIC';\n      default:\n        return fail('RoleSpec', node);\n    }\n  }\n\n  ['GrantStmt'](node) {\n    const output = [];\n\n    const getTypeFromNode = nodeObj => {\n      switch (nodeObj.objtype) {\n        case GRANTOBJECT_TYPES.ACL_OBJECT_RELATION:\n          if (nodeObj.targtype === GRANTTARGET_TYPES.ACL_TARGET_ALL_IN_SCHEMA) {\n            return 'ALL TABLES IN SCHEMA';\n          }\n          if (nodeObj.targtype === GRANTTARGET_TYPES.ACL_TARGET_DEFAULTS) {\n            return 'TABLES';\n          }\n          // todo could be view\n          return 'TABLE';\n        case GRANTOBJECT_TYPES.ACL_OBJECT_SEQUENCE:\n          return 'SEQUENCE';\n        case GRANTOBJECT_TYPES.ACL_OBJECT_DATABASE:\n          return 'DATABASE';\n        case GRANTOBJECT_TYPES.ACL_OBJECT_DOMAIN:\n          return 'DOMAIN';\n        case GRANTOBJECT_TYPES.ACL_OBJECT_FDW:\n          return 'FOREIGN DATA WRAPPER';\n        case GRANTOBJECT_TYPES.ACL_OBJECT_FOREIGN_SERVER:\n          return 'FOREIGN SERVER';\n        case GRANTOBJECT_TYPES.ACL_OBJECT_FUNCTION:\n          if (nodeObj.targtype === GRANTTARGET_TYPES.ACL_TARGET_ALL_IN_SCHEMA) {\n            return 'ALL FUNCTIONS IN SCHEMA';\n          }\n          if (nodeObj.targtype === GRANTTARGET_TYPES.ACL_TARGET_DEFAULTS) {\n            return 'FUNCTIONS';\n          }\n          return 'FUNCTION';\n        case GRANTOBJECT_TYPES.ACL_OBJECT_LANGUAGE:\n          return 'LANGUAGE';\n        case GRANTOBJECT_TYPES.ACL_OBJECT_LARGEOBJECT:\n          return 'LARGE OBJECT';\n        case GRANTOBJECT_TYPES.ACL_OBJECT_NAMESPACE:\n          return 'SCHEMA';\n        case GRANTOBJECT_TYPES.ACL_OBJECT_TABLESPACE:\n          return 'TABLESPACE';\n        case GRANTOBJECT_TYPES.ACL_OBJECT_TYPE:\n          return 'TYPE';\n        default:\n      }\n      return fail('GrantStmt', node);\n    };\n\n    if (node.objtype !== GRANTOBJECT_TYPES.ACL_OBJECT_COLUMN) {\n      if (!node.is_grant) {\n        output.push('REVOKE');\n        if (node.grant_option) {\n          output.push('GRANT OPTION');\n          output.push('FOR');\n        }\n        if (node.privileges) {\n          output.push(this.list(node.privileges));\n        } else {\n          output.push('ALL');\n        }\n        output.push('ON');\n        output.push(getTypeFromNode(node));\n        output.push(this.list(node.objects));\n        output.push('FROM');\n        output.push(this.list(node.grantees));\n      } else {\n        output.push('GRANT');\n        if (node.privileges) {\n          output.push(this.list(node.privileges));\n        } else {\n          output.push('ALL');\n        }\n        output.push('ON');\n        output.push(getTypeFromNode(node));\n        output.push(this.list(node.objects));\n        output.push('TO');\n        output.push(this.list(node.grantees));\n        if (node.grant_option) {\n          output.push('WITH GRANT OPTION');\n        }\n      }\n      if (Number(node.behavior) === 1) {\n        output.push('CASCADE');\n      }\n    }\n\n    return output.join(' ');\n  }\n\n  ['GrantRoleStmt'](node) {\n    const output = [];\n\n    if (!node.is_grant) {\n      output.push('REVOKE');\n      output.push(this.list(node.granted_roles));\n      output.push('FROM');\n      output.push(this.list(node.grantee_roles));\n    } else {\n      output.push('GRANT');\n      output.push(this.list(node.granted_roles));\n      output.push('TO');\n      output.push(this.list(node.grantee_roles));\n    }\n    if (node.admin_opt) {\n      output.push('WITH ADMIN OPTION');\n    }\n\n    return output.join(' ');\n  }\n\n  ['CreateRoleStmt'](node) {\n    const output = [];\n\n    const roleOption = (nodeObj, i, val1, val2) => {\n      const val = Number(\n        dotty.get(nodeObj, `options.${i}.DefElem.arg.Integer.ival`)\n      );\n      if (val > 0) {\n        output.push(val1);\n      } else {\n        output.push(val2);\n      }\n    };\n\n    output.push('CREATE');\n    switch (node.stmt_type) {\n      case ROLESTMT_TYPES.ROLESTMT_USER:\n        output.push('USER');\n        break;\n      case ROLESTMT_TYPES.ROLESTMT_GROUP:\n        output.push('GROUP');\n        break;\n      default:\n        output.push('ROLE');\n    }\n\n    output.push(`\"${node.role}\"`);\n\n    if (node.options) {\n      const opts = dotty.search(node, 'options.*.DefElem.defname');\n\n      if (opts.length === 1 && opts[0] === 'addroleto') {\n        // only one case\n      } else {\n        output.push('WITH');\n      }\n\n      opts.forEach((option, i) => {\n        let value = '';\n        switch (option) {\n          case 'canlogin':\n            roleOption(node, i, 'LOGIN', 'NOLOGIN');\n            break;\n          case 'addroleto':\n            output.push('IN ROLE');\n            output.push(\n              dotty\n                .search(node, `options.${i}.DefElem.arg.*.RoleSpec.rolename`)\n                .join(',')\n            );\n            break;\n          case 'password':\n            output.push('PASSWORD');\n            value = dotty.get(\n              node,\n              `options.${i}.DefElem.arg.A_Const.val.String.str`\n            );\n            output.push(`'${value}'`);\n            break;\n          case 'adminmembers':\n            output.push('ADMIN');\n            output.push(this.list(node.options[i].DefElem.arg));\n            break;\n          case 'rolemembers':\n            output.push('USER');\n            output.push(this.list(node.options[i].DefElem.arg));\n            break;\n          case 'createdb':\n            roleOption(node, i, 'CREATEDB', 'NOCREATEDB');\n            break;\n          case 'isreplication':\n            roleOption(node, i, 'REPLICATION', 'NOREPLICATION');\n            break;\n          case 'bypassrls':\n            roleOption(node, i, 'BYPASSRLS', 'NOBYPASSRLS');\n            break;\n          case 'inherit':\n            roleOption(node, i, 'INHERIT', 'NOINHERIT');\n            break;\n          case 'superuser':\n            roleOption(node, i, 'SUPERUSER', 'NOSUPERUSER');\n            break;\n          case 'createrole':\n            roleOption(node, i, 'CREATEROLE', 'NOCREATEROLE');\n            break;\n          case 'validUntil':\n            output.push('VALID UNTIL');\n            value = dotty.get(node, `options.${i}.DefElem.arg.String.str`);\n            output.push(`'${value}'`);\n            break;\n          default:\n        }\n      });\n    }\n    return output.join(' ');\n  }\n\n  ['TransactionStmt'](node) {\n    const output = [];\n\n    const begin = nodeOpts => {\n      const opts = dotty.search(nodeOpts, 'options.*.DefElem.defname');\n      if (opts.includes('transaction_read_only')) {\n        const index = opts.indexOf('transaction_read_only');\n        const obj = nodeOpts.options[index];\n        let set = false;\n        const flag = Number(this.deparse(dotty.get(obj, 'DefElem.arg')));\n        if (flag > 0) {\n          set = true;\n        }\n        if (set) {\n          return 'BEGIN TRANSACTION READ ONLY';\n        }\n        return 'BEGIN TRANSACTION READ WRITE';\n      }\n      if (opts.includes('transaction_isolation')) {\n        const index = opts.indexOf('transaction_isolation');\n        const obj = nodeOpts.options[index];\n        const lopts = this.deparse(dotty.get(obj, 'DefElem.arg')).replace(\n          /['\"]+/g,\n          ''\n        );\n        return `BEGIN TRANSACTION ISOLATION LEVEL ${lopts.toUpperCase()}`;\n      }\n      return 'BEGIN';\n    };\n\n    const start = nodeOpts => {\n      const opts = dotty.search(nodeOpts, 'options.*.DefElem.defname');\n      if (opts.includes('transaction_read_only')) {\n        const index = opts.indexOf('transaction_read_only');\n        const obj = nodeOpts.options[index];\n        let set = false;\n        const flag = Number(this.deparse(dotty.get(obj, 'DefElem.arg')));\n        if (flag > 0) {\n          set = true;\n        }\n        if (set) {\n          return 'START TRANSACTION READ ONLY';\n        }\n        return 'START TRANSACTION READ WRITE';\n      }\n\n      return 'START TRANSACTION';\n    };\n\n    switch (node.kind) {\n      case TRANSACTIONSTMT_TYPES.TRANS_STMT_BEGIN:\n        return begin(node);\n      case TRANSACTIONSTMT_TYPES.TRANS_STMT_START:\n        return start(node);\n      case TRANSACTIONSTMT_TYPES.TRANS_STMT_COMMIT:\n        return 'COMMIT';\n      case TRANSACTIONSTMT_TYPES.TRANS_STMT_ROLLBACK:\n        return 'ROLLBACK';\n      case TRANSACTIONSTMT_TYPES.TRANS_STMT_SAVEPOINT:\n        output.push('SAVEPOINT');\n        output.push(this.deparse(node.options[0].DefElem.arg));\n        break;\n      case TRANSACTIONSTMT_TYPES.TRANS_STMT_RELEASE:\n        output.push('RELEASE SAVEPOINT');\n        output.push(this.deparse(node.options[0].DefElem.arg));\n        break;\n      case TRANSACTIONSTMT_TYPES.TRANS_STMT_ROLLBACK_TO:\n        output.push('ROLLBACK TO');\n        output.push(this.deparse(node.options[0].DefElem.arg));\n        break;\n      case TRANSACTIONSTMT_TYPES.TRANS_STMT_PREPARE:\n        output.push('PREPARE TRANSACTION');\n        output.push(`'${node.gid}'`);\n        break;\n      case TRANSACTIONSTMT_TYPES.TRANS_STMT_COMMIT_PREPARED:\n        output.push('COMMIT PREPARED');\n        output.push(`'${node.gid}'`);\n        break;\n      case TRANSACTIONSTMT_TYPES.TRANS_STMT_ROLLBACK_PREPARED:\n        output.push('ROLLBACK PREPARED');\n        output.push(`'${node.gid}'`);\n        break;\n      default:\n    }\n    return output.join(' ');\n  }\n\n  ['SortBy'](node) {\n    const output = [];\n\n    output.push(this.deparse(node.node));\n\n    switch (node.sortby_dir) {\n      case SORTBYDIR_TYPES.SORTBY_ASC:\n        output.push('ASC');\n        break;\n      case SORTBYDIR_TYPES.SORTBY_DESC:\n        output.push('DESC');\n        break;\n      case SORTBYDIR_TYPES.SORTBY_USING:\n        output.push(`USING ${this.deparseNodes(node.useOp)}`);\n        break;\n      case SORTBYDIR_TYPES.SORTBY_DEFAULT:\n        break;\n      default:\n        return fail('SortBy', node);\n    }\n\n    if (node.sortby_nulls === SORTBYNULLS_TYPES.SORTBY_NULLS_FIRST) {\n      output.push('NULLS FIRST');\n    }\n\n    if (node.sortby_nulls === SORTBYNULLS_TYPES.SORTBY_NULLS_LAST) {\n      output.push('NULLS LAST');\n    }\n\n    return output.join(' ');\n  }\n\n  ['ObjectWithArgs'](node, context) {\n    const output = [];\n\n    if (context === 'noquotes') {\n      output.push(this.list(node.objname));\n    } else {\n      output.push(this.listQuotes(node.objname, '.'));\n    }\n    if (node.objargs && node.objargs.length) {\n      output.push('(');\n      output.push(\n        node.objargs\n          .map(arg => {\n            if (arg === null) {\n              return 'NONE';\n            }\n            return this.deparse(arg);\n          })\n          .join(',')\n      );\n      output.push(')');\n    }\n\n    return output.join(' ');\n  }\n\n  ['String'](node) {\n    return node.str;\n  }\n\n  ['SubLink'](node) {\n    switch (true) {\n      case node.subLinkType === 0:\n        return format('EXISTS (%s)', this.deparse(node.subselect));\n      case node.subLinkType === 1:\n        return format(\n          '%s %s ALL (%s)',\n          this.deparse(node.testexpr),\n          this.deparse(node.operName[0]),\n          this.deparse(node.subselect)\n        );\n      case node.subLinkType === 2 && !(node.operName != null):\n        return format(\n          '%s IN (%s)',\n          this.deparse(node.testexpr),\n          this.deparse(node.subselect)\n        );\n      case node.subLinkType === 2:\n        return format(\n          '%s %s ANY (%s)',\n          this.deparse(node.testexpr),\n          this.deparse(node.operName[0]),\n          this.deparse(node.subselect)\n        );\n      case node.subLinkType === 3:\n        return format(\n          '%s %s (%s)',\n          this.deparse(node.testexpr),\n          this.deparse(node.operName[0]),\n          this.deparse(node.subselect)\n        );\n      case node.subLinkType === 4:\n        return format('(%s)', this.deparse(node.subselect));\n      case node.subLinkType === 5:\n        // TODO(zhm) what is this?\n        return fail('SubLink', node);\n      // MULTIEXPR_SUBLINK\n      // format('(%s)', @deparse(node.subselect))\n      case node.subLinkType === 6:\n        return format('ARRAY (%s)', this.deparse(node.subselect));\n      default:\n        return fail('SubLink', node);\n    }\n  }\n\n  ['TypeCast'](node) {\n    const type = this.deparse(node.typeName);\n    if (\n      type === 'boolean' &&\n      dotty.exists(node, 'arg.A_Const.val.String.str')\n    ) {\n      const value = dotty.get(node, 'arg.A_Const.val.String.str');\n      if (value === 'f') {\n        return '(FALSE)';\n      }\n      if (value === 't') {\n        return '(TRUE)';\n      }\n    }\n    return this.deparse(node.arg) + '::' + this.deparse(node.typeName);\n  }\n\n  ['TypeName'](node) {\n    if (_.last(node.names).String.str === 'interval') {\n      return this.deparseInterval(node);\n    }\n\n    const output = [];\n\n    if (node.setof) {\n      output.push('SETOF');\n    }\n\n    let args = null;\n\n    if (node.typmods != null) {\n      args = node.typmods.map(item => {\n        return this.deparse(item);\n      });\n    }\n\n    const type = [];\n\n    type.push(this.type(node.names, args && args.join(', ')));\n\n    if (node.arrayBounds != null) {\n      type.push('[]');\n    }\n\n    output.push(type.join(''));\n\n    return output.join(' ');\n  }\n\n  ['CaseWhen'](node) {\n    const output = [ 'WHEN' ];\n\n    output.push(this.deparse(node.expr));\n    output.push('THEN');\n    output.push(this.deparse(node.result));\n\n    return output.join(' ');\n  }\n\n  ['WindowDef'](node, context) {\n    const output = [];\n\n    if (context !== 'window') {\n      if (node.name) {\n        output.push(node.name);\n      }\n    }\n\n    const empty =\n      !(node.partitionClause != null) && !(node.orderClause != null);\n\n    const frameOptions = this.deparseFrameOptions(\n      node.frameOptions,\n      node.refname,\n      node.startOffset,\n      node.endOffset\n    );\n\n    if (\n      empty &&\n      context !== 'window' &&\n      !(node.name != null) &&\n      frameOptions.length === 0\n    ) {\n      return '()';\n    }\n\n    const windowParts = [];\n\n    let useParens = false;\n\n    if (node.partitionClause) {\n      const partition = [ 'PARTITION BY' ];\n\n      const clause = node.partitionClause.map(item => this.deparse(item));\n\n      partition.push(clause.join(', '));\n\n      windowParts.push(partition.join(' '));\n      useParens = true;\n    }\n\n    if (node.orderClause) {\n      windowParts.push('ORDER BY');\n\n      const orders = node.orderClause.map(item => {\n        return this.deparse(item);\n      });\n\n      windowParts.push(orders.join(', '));\n\n      useParens = true;\n    }\n\n    if (frameOptions.length) {\n      useParens = true;\n      windowParts.push(frameOptions);\n    }\n\n    if (useParens && context !== 'window') {\n      return output.join(' ') + ' (' + windowParts.join(' ') + ')';\n    }\n\n    return output.join(' ') + windowParts.join(' ');\n  }\n\n  ['WithClause'](node) {\n    const output = [ 'WITH' ];\n\n    if (node.recursive) {\n      output.push('RECURSIVE');\n    }\n\n    output.push(this.list(node.ctes));\n\n    return output.join(' ');\n  }\n\n  deparseFrameOptions(options, refName, startOffset, endOffset) {\n    const FRAMEOPTION_NONDEFAULT = 0x00001; // any specified?\n    const FRAMEOPTION_RANGE = 0x00002; // RANGE behavior\n    const FRAMEOPTION_ROWS = 0x00004; // ROWS behavior\n    const FRAMEOPTION_BETWEEN = 0x00008; // BETWEEN given?\n    const FRAMEOPTION_START_UNBOUNDED_PRECEDING = 0x00010; // start is U. P.\n    const FRAMEOPTION_END_UNBOUNDED_PRECEDING = 0x00020; // (disallowed)\n    const FRAMEOPTION_START_UNBOUNDED_FOLLOWING = 0x00040; // (disallowed)\n    const FRAMEOPTION_END_UNBOUNDED_FOLLOWING = 0x00080; // end is U. F.\n    const FRAMEOPTION_START_CURRENT_ROW = 0x00100; // start is C. R.\n    const FRAMEOPTION_END_CURRENT_ROW = 0x00200; // end is C. R.\n    const FRAMEOPTION_START_VALUE_PRECEDING = 0x00400; // start is V. P.\n    const FRAMEOPTION_END_VALUE_PRECEDING = 0x00800; // end is V. P.\n    const FRAMEOPTION_START_VALUE_FOLLOWING = 0x01000; // start is V. F.\n    const FRAMEOPTION_END_VALUE_FOLLOWING = 0x02000; // end is V. F.\n\n    if (!(options & FRAMEOPTION_NONDEFAULT)) {\n      return '';\n    }\n\n    const output = [];\n\n    if (refName != null) {\n      output.push(refName);\n    }\n\n    if (options & FRAMEOPTION_RANGE) {\n      output.push('RANGE');\n    }\n\n    if (options & FRAMEOPTION_ROWS) {\n      output.push('ROWS');\n    }\n\n    const between = options & FRAMEOPTION_BETWEEN;\n\n    if (between) {\n      output.push('BETWEEN');\n    }\n\n    if (options & FRAMEOPTION_START_UNBOUNDED_PRECEDING) {\n      output.push('UNBOUNDED PRECEDING');\n    }\n\n    if (options & FRAMEOPTION_START_UNBOUNDED_FOLLOWING) {\n      output.push('UNBOUNDED FOLLOWING');\n    }\n\n    if (options & FRAMEOPTION_START_CURRENT_ROW) {\n      output.push('CURRENT ROW');\n    }\n\n    if (options & FRAMEOPTION_START_VALUE_PRECEDING) {\n      output.push(this.deparse(startOffset) + ' PRECEDING');\n    }\n\n    if (options & FRAMEOPTION_START_VALUE_FOLLOWING) {\n      output.push(this.deparse(startOffset) + ' FOLLOWING');\n    }\n\n    if (between) {\n      output.push('AND');\n\n      if (options & FRAMEOPTION_END_UNBOUNDED_PRECEDING) {\n        output.push('UNBOUNDED PRECEDING');\n      }\n\n      if (options & FRAMEOPTION_END_UNBOUNDED_FOLLOWING) {\n        output.push('UNBOUNDED FOLLOWING');\n      }\n\n      if (options & FRAMEOPTION_END_CURRENT_ROW) {\n        output.push('CURRENT ROW');\n      }\n\n      if (options & FRAMEOPTION_END_VALUE_PRECEDING) {\n        output.push(this.deparse(endOffset) + ' PRECEDING');\n      }\n\n      if (options & FRAMEOPTION_END_VALUE_FOLLOWING) {\n        output.push(this.deparse(endOffset) + ' FOLLOWING');\n      }\n    }\n\n    return output.join(' ');\n  }\n\n  deparseInterval(node) {\n    const type = [ 'interval' ];\n\n    if (node.arrayBounds != null) {\n      type.push('[]');\n    }\n\n    if (node.typmods) {\n      const typmods = node.typmods.map(item => this.deparse(item));\n\n      let intervals = this.interval(typmods[0]);\n\n      // SELECT interval(0) '1 day 01:23:45.6789'\n      if (\n        node.typmods[0] &&\n        node.typmods[0].A_Const &&\n        node.typmods[0].A_Const.val.Integer.ival === 32767 &&\n        node.typmods[1] &&\n        node.typmods[1].A_Const != null\n      ) {\n        intervals = [ `(${node.typmods[1].A_Const.val.Integer.ival})` ];\n      } else {\n        intervals = intervals.map(part => {\n          if (part === 'second' && typmods.length === 2) {\n            return 'second(' + _.last(typmods) + ')';\n          }\n\n          return part;\n        });\n      }\n\n      type.push(intervals.join(' to '));\n    }\n\n    return type.join(' ');\n  }\n\n  interval(mask) {\n    // ported from https://github.com/lfittl/pg_query/blob/master/lib/pg_query/deparse/interval.rb\n    if (this.MASKS == null) {\n      this.MASKS = {\n        0: 'RESERV',\n        1: 'MONTH',\n        2: 'YEAR',\n        3: 'DAY',\n        4: 'JULIAN',\n        5: 'TZ',\n        6: 'DTZ',\n        7: 'DYNTZ',\n        8: 'IGNORE_DTF',\n        9: 'AMPM',\n        10: 'HOUR',\n        11: 'MINUTE',\n        12: 'SECOND',\n        13: 'MILLISECOND',\n        14: 'MICROSECOND',\n        15: 'DOY',\n        16: 'DOW',\n        17: 'UNITS',\n        18: 'ADBC',\n        19: 'AGO',\n        20: 'ABS_BEFORE',\n        21: 'ABS_AFTER',\n        22: 'ISODATE',\n        23: 'ISOTIME',\n        24: 'WEEK',\n        25: 'DECADE',\n        26: 'CENTURY',\n        27: 'MILLENNIUM',\n        28: 'DTZMOD'\n      };\n    }\n\n    if (this.BITS == null) {\n      this.BITS = _.invert(this.MASKS);\n    }\n\n    if (this.INTERVALS == null) {\n      this.INTERVALS = {};\n      this.INTERVALS[1 << this.BITS.YEAR] = [ 'year' ];\n      this.INTERVALS[1 << this.BITS.MONTH] = [ 'month' ];\n      this.INTERVALS[1 << this.BITS.DAY] = [ 'day' ];\n      this.INTERVALS[1 << this.BITS.HOUR] = [ 'hour' ];\n      this.INTERVALS[1 << this.BITS.MINUTE] = [ 'minute' ];\n      this.INTERVALS[1 << this.BITS.SECOND] = [ 'second' ];\n      this.INTERVALS[(1 << this.BITS.YEAR) | (1 << this.BITS.MONTH)] = [\n        'year',\n        'month'\n      ];\n      this.INTERVALS[(1 << this.BITS.DAY) | (1 << this.BITS.HOUR)] = [\n        'day',\n        'hour'\n      ];\n      this.INTERVALS[\n        (1 << this.BITS.DAY) | (1 << this.BITS.HOUR) | (1 << this.BITS.MINUTE)\n      ] = [ 'day', 'minute' ];\n      this.INTERVALS[\n        (1 << this.BITS.DAY) |\n          (1 << this.BITS.HOUR) |\n          (1 << this.BITS.MINUTE) |\n          (1 << this.BITS.SECOND)\n      ] = [ 'day', 'second' ];\n      this.INTERVALS[(1 << this.BITS.HOUR) | (1 << this.BITS.MINUTE)] = [\n        'hour',\n        'minute'\n      ];\n      this.INTERVALS[\n        (1 << this.BITS.HOUR) |\n          (1 << this.BITS.MINUTE) |\n          (1 << this.BITS.SECOND)\n      ] = [ 'hour', 'second' ];\n      this.INTERVALS[(1 << this.BITS.MINUTE) | (1 << this.BITS.SECOND)] = [\n        'minute',\n        'second'\n      ];\n\n      // utils/timestamp.h\n      // #define INTERVAL_FULL_RANGE (0x7FFF)\n      this.INTERVALS[(this.INTERVAL_FULL_RANGE = '32767')] = [];\n    }\n\n    return this.INTERVALS[mask.toString()];\n  }\n}\n"]}
{"version":3,"sources":["../src/types.js"],"names":["LIBPG_ENUMS","require","VARIABLE_TYPES","VariableSetKind","values","reduce","m","v","i","name","TYPES","ObjectType","TYPE_NAMES","OBJECT_ACCESS_METHOD","OBJECT_AGGREGATE","OBJECT_CAST","OBJECT_COLUMN","OBJECT_COLLATION","OBJECT_CONVERSION","OBJECT_DATABASE","OBJECT_DOMAIN","OBJECT_DOMCONSTRAINT","OBJECT_EXTENSION","OBJECT_FDW","OBJECT_FOREIGN_SERVER","OBJECT_FOREIGN_TABLE","OBJECT_FUNCTION","OBJECT_INDEX","OBJECT_LANGUAGE","OBJECT_LARGEOBJECT","OBJECT_MATVIEW","OBJECT_OPCLASS","OBJECT_OPERATOR","OBJECT_OPFAMILY","OBJECT_POLICY","OBJECT_ROLE","OBJECT_RULE","OBJECT_SCHEMA","OBJECT_SEQUENCE","OBJECT_STATISTIC_EXT","OBJECT_TABCONSTRAINT","OBJECT_TABLE","OBJECT_TABLESPACE","OBJECT_TRANSFORM","OBJECT_TRIGGER","OBJECT_TSCONFIGURATION","OBJECT_TSDICTIONARY","OBJECT_TSPARSER","OBJECT_TSTEMPLATE","OBJECT_TYPE","OBJECT_VIEW","_TYPE_VALUES","Object","_TYPE_KEYS","keys","objtypeIs","objtype","objtypeName","arg","indexOf"],"mappings":";;;;;AAAA,MAAMA,cAAcC,QAAQ,eAAR,CAApB;;AAEA;AACA;AACA;AACA;AACA;;AAEO,MAAMC,0CAAiBF,YAAY,kBAAZ,EAC3BG,eAD2B,CACXC,MADW,CACJC,MADI,CACG,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAa;AAC1C,MAAIA,MAAM,CAAV,EAAa;AACX,WAAOF,CAAP;AACD,GAHyC,CAGxC;AACFA,IAAEC,EAAEE,IAAJ,IAAYD,IAAI,CAAhB;AACA,SAAOF,CAAP;AACD,CAP2B,EAOzB,EAPyB,CAAvB;;AASA,MAAMI,wBAAQV,YAAY,kBAAZ,EAClBW,UADkB,CACPP,MADO,CACAC,MADA,CACO,CAACC,CAAD,EAAIC,CAAJ,EAAOC,CAAP,KAAa;AACrC,MAAIA,MAAM,CAAV,EAAa;AACX,WAAOF,CAAP;AACD,GAHoC,CAGnC;AACFA,IAAEC,EAAEE,IAAJ,IAAYD,IAAI,CAAhB;AACA,SAAOF,CAAP;AACD,CAPkB,EAOhB,EAPgB,CAAd;;AASA,MAAMM,kCAAa;AACxBC,wBAAsB,eADE;AAExBC,oBAAkB,WAFM;AAGxBC,eAAa,MAHW;AAIxBC,iBAAe,QAJS;AAKxBC,oBAAkB,WALM;AAMxBC,qBAAmB,YANK;AAOxBC,mBAAiB,UAPO;AAQxBC,iBAAe,QARS;AASxBC,wBAAsB,YATE;AAUxBC,oBAAkB,WAVM;AAWxBC,cAAY,sBAXY;AAYxBC,yBAAuB,QAZC;AAaxBC,wBAAsB,eAbE;AAcxBC,mBAAiB,UAdO;AAexBC,gBAAc,OAfU;AAgBxBC,mBAAiB,UAhBO;AAiBxBC,sBAAoB,cAjBI;AAkBxBC,kBAAgB,mBAlBQ;AAmBxBC,kBAAgB,gBAnBQ;AAoBxBC,mBAAiB,UApBO;AAqBxBC,mBAAiB,iBArBO;AAsBxBC,iBAAe,QAtBS;AAuBxBC,eAAa,MAvBW;AAwBxBC,eAAa,MAxBW;AAyBxBC,iBAAe,QAzBS;AA0BxBC,mBAAiB,UA1BO;AA2BxBC,wBAAsB,YA3BE;AA4BxBC,wBAAsB,YA5BE;AA6BxBC,gBAAc,OA7BU;AA8BxBC,qBAAmB,YA9BK;AA+BxBC,oBAAkB,WA/BM;AAgCxBC,kBAAgB,SAhCQ;AAiCxBC,0BAAwB,2BAjCA;AAkCxBC,uBAAqB,wBAlCG;AAmCxBC,mBAAiB,oBAnCO;AAoCxBC,qBAAmB,sBApCK;AAqCxBC,eAAa,MArCW;AAsCxBC,eAAa;AAtCW,CAAnB;;AAyCP,MAAMC,eAAeC,OAAOhD,MAAP,CAAcM,KAAd,CAArB;AACA,MAAM2C,aAAaD,OAAOE,IAAP,CAAY5C,KAAZ,CAAnB;;AAEO,MAAM6C,gCAAY,CAACC,OAAD,EAAU/C,IAAV,KACvBC,MAAMD,IAAN,MAAgB+C,OADX;;AAGA,MAAMC,oCAAeC,GAAD,IAAS;AAClC,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3B,WAAQ9C,WAAW8C,GAAX,CAAR;AACD;AACD,SAAO9C,WAAWyC,WAAWF,aAAaQ,OAAb,CAAqBD,GAArB,CAAX,CAAX,CAAP;AACD,CALM","file":"types.js","sourcesContent":["const LIBPG_ENUMS = require('./libpg_enums');\n\n// nodes/parsenodes\n// ObjectType\n//\n// nodes/parsenodes\n// VariableSetKind\n\nexport const VARIABLE_TYPES = LIBPG_ENUMS['nodes/parsenodes']\n  .VariableSetKind.values.reduce((m, v, i) => {\n    if (i === 0) {\n      return m;\n    } // skip first noop\n    m[v.name] = i - 1;\n    return m;\n  }, {});\n\nexport const TYPES = LIBPG_ENUMS['nodes/parsenodes']\n  .ObjectType.values.reduce((m, v, i) => {\n    if (i === 0) {\n      return m;\n    } // skip first noop\n    m[v.name] = i - 1;\n    return m;\n  }, {});\n\nexport const TYPE_NAMES = {\n  OBJECT_ACCESS_METHOD: 'ACCESS METHOD',\n  OBJECT_AGGREGATE: 'AGGREGATE',\n  OBJECT_CAST: 'CAST',\n  OBJECT_COLUMN: 'COLUMN',\n  OBJECT_COLLATION: 'COLLATION',\n  OBJECT_CONVERSION: 'CONVERSION',\n  OBJECT_DATABASE: 'DATABASE',\n  OBJECT_DOMAIN: 'DOMAIN',\n  OBJECT_DOMCONSTRAINT: 'CONSTRAINT',\n  OBJECT_EXTENSION: 'EXTENSION',\n  OBJECT_FDW: 'FOREIGN DATA WRAPPER',\n  OBJECT_FOREIGN_SERVER: 'SERVER',\n  OBJECT_FOREIGN_TABLE: 'FOREIGN TABLE',\n  OBJECT_FUNCTION: 'FUNCTION',\n  OBJECT_INDEX: 'INDEX',\n  OBJECT_LANGUAGE: 'LANGUAGE',\n  OBJECT_LARGEOBJECT: 'LARGE OBJECT',\n  OBJECT_MATVIEW: 'MATERIALIZED VIEW',\n  OBJECT_OPCLASS: 'OPERATOR CLASS',\n  OBJECT_OPERATOR: 'OPERATOR',\n  OBJECT_OPFAMILY: 'OPERATOR FAMILY',\n  OBJECT_POLICY: 'POLICY',\n  OBJECT_ROLE: 'ROLE',\n  OBJECT_RULE: 'RULE',\n  OBJECT_SCHEMA: 'SCHEMA',\n  OBJECT_SEQUENCE: 'SEQUENCE',\n  OBJECT_STATISTIC_EXT: 'STATISTICS',\n  OBJECT_TABCONSTRAINT: 'CONSTRAINT',\n  OBJECT_TABLE: 'TABLE',\n  OBJECT_TABLESPACE: 'TABLESPACE',\n  OBJECT_TRANSFORM: 'TRANSFORM',\n  OBJECT_TRIGGER: 'TRIGGER',\n  OBJECT_TSCONFIGURATION: 'TEXT SEARCH CONFIGURATION',\n  OBJECT_TSDICTIONARY: 'TEXT SEARCH DICTIONARY',\n  OBJECT_TSPARSER: 'TEXT SEARCH PARSER',\n  OBJECT_TSTEMPLATE: 'TEXT SEARCH TEMPLATE',\n  OBJECT_TYPE: 'TYPE',\n  OBJECT_VIEW: 'VIEW'\n};\n\nconst _TYPE_VALUES = Object.values(TYPES);\nconst _TYPE_KEYS = Object.keys(TYPES);\n\nexport const objtypeIs = (objtype, name) =>\n  TYPES[name] === objtype;\n\nexport const objtypeName = (arg) => {\n  if (typeof arg === 'string') {\n    return (TYPE_NAMES[arg]);\n  }\n  return TYPE_NAMES[_TYPE_KEYS[_TYPE_VALUES.indexOf(arg)]];\n};\n"]}
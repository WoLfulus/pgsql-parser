{"version":3,"sources":["../src/libpg_enums.js"],"names":["module","exports"],"mappings":"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","file":"libpg_enums.js","sourcesContent":["module.exports = {\n  'nodes/parsenodes': {\n    'OverridingKind': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'OVERRIDING_NOT_SET',\n          'comment': null\n        },\n        {\n          'name': 'OVERRIDING_USER_VALUE',\n          'comment': null\n        },\n        {\n          'name': 'OVERRIDING_SYSTEM_VALUE',\n          'comment': null\n        }\n      ],\n      'comment': '/*-------------------------------------------------------------------------\\n *\\n * parsenodes.h\\n *\\t  definitions for parse tree nodes\\n *\\n * Many of the node types used in parsetrees include a \"location\" field.\\n * This is a byte (not character) offset in the original source text, to be\\n * used for positioning an error cursor when there is an error related to\\n * the node.  Access to the original source text is needed to make use of\\n * the location.  At the topmost (statement) level, we also provide a\\n * statement length, likewise measured in bytes, for convenience in\\n * identifying statement boundaries in multi-statement source strings.\\n *\\n *\\n * Portions Copyright (c) 1996-2017, PostgreSQL Global Development Group\\n * Portions Copyright (c) 1994, Regents of the University of California\\n *\\n * src/include/nodes/parsenodes.h\\n *\\n *-------------------------------------------------------------------------\\n */\\n'\n    },\n    'QuerySource': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'QSRC_ORIGINAL',\n          'comment': '/* original parsetree (explicit query) */'\n        },\n        {\n          'name': 'QSRC_PARSER',\n          'comment': '/* added by parse analysis (now unused) */'\n        },\n        {\n          'name': 'QSRC_INSTEAD_RULE',\n          'comment': '/* added by unconditional INSTEAD rule */'\n        },\n        {\n          'name': 'QSRC_QUAL_INSTEAD_RULE',\n          'comment': '/* added by conditional INSTEAD rule */'\n        },\n        {\n          'name': 'QSRC_NON_INSTEAD_RULE',\n          'comment': '/* added by non-INSTEAD rule */'\n        }\n      ],\n      'comment': '/* Possible sources of a Query */\\n'\n    },\n    'SortByDir': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'SORTBY_DEFAULT',\n          'comment': null\n        },\n        {\n          'name': 'SORTBY_ASC',\n          'comment': null\n        },\n        {\n          'name': 'SORTBY_DESC',\n          'comment': null\n        },\n        {\n          'name': 'SORTBY_USING',\n          'comment': '/* not allowed in CREATE INDEX ... */'\n        }\n      ],\n      'comment': '/* Sort ordering options for ORDER BY and CREATE INDEX */\\n'\n    },\n    'SortByNulls': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'SORTBY_NULLS_DEFAULT',\n          'comment': null\n        },\n        {\n          'name': 'SORTBY_NULLS_FIRST',\n          'comment': null\n        },\n        {\n          'name': 'SORTBY_NULLS_LAST',\n          'comment': null\n        }\n      ],\n      'comment': null\n    },\n    'A_Expr_Kind': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'AEXPR_OP',\n          'comment': '/* normal operator */'\n        },\n        {\n          'name': 'AEXPR_OP_ANY',\n          'comment': '/* scalar op ANY (array) */'\n        },\n        {\n          'name': 'AEXPR_OP_ALL',\n          'comment': '/* scalar op ALL (array) */'\n        },\n        {\n          'name': 'AEXPR_DISTINCT',\n          'comment': '/* IS DISTINCT FROM - name must be \"=\" */'\n        },\n        {\n          'name': 'AEXPR_NOT_DISTINCT',\n          'comment': '/* IS NOT DISTINCT FROM - name must be \"=\" */'\n        },\n        {\n          'name': 'AEXPR_NULLIF',\n          'comment': '/* NULLIF - name must be \"=\" */'\n        },\n        {\n          'name': 'AEXPR_OF',\n          'comment': '/* IS [NOT] OF - name must be \"=\" or \"<>\" */'\n        },\n        {\n          'name': 'AEXPR_IN',\n          'comment': '/* [NOT] IN - name must be \"=\" or \"<>\" */'\n        },\n        {\n          'name': 'AEXPR_LIKE',\n          'comment': '/* [NOT] LIKE - name must be \"~~\" or \"!~~\" */'\n        },\n        {\n          'name': 'AEXPR_ILIKE',\n          'comment': '/* [NOT] ILIKE - name must be \"~~*\" or \"!~~*\" */'\n        },\n        {\n          'name': 'AEXPR_SIMILAR',\n          'comment': '/* [NOT] SIMILAR - name must be \"~\" or \"!~\" */'\n        },\n        {\n          'name': 'AEXPR_BETWEEN',\n          'comment': '/* name must be \"BETWEEN\" */'\n        },\n        {\n          'name': 'AEXPR_NOT_BETWEEN',\n          'comment': '/* name must be \"NOT BETWEEN\" */'\n        },\n        {\n          'name': 'AEXPR_BETWEEN_SYM',\n          'comment': '/* name must be \"BETWEEN SYMMETRIC\" */'\n        },\n        {\n          'name': 'AEXPR_NOT_BETWEEN_SYM',\n          'comment': '/* name must be \"NOT BETWEEN SYMMETRIC\" */'\n        },\n        {\n          'name': 'AEXPR_PAREN',\n          'comment': '/* nameless dummy node for parentheses */'\n        }\n      ],\n      'comment': '/*\\n * A_Expr - infix, prefix, and postfix expressions\\n */\\n'\n    },\n    'RoleSpecType': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'ROLESPEC_CSTRING',\n          'comment': '/* role name is stored as a C string */'\n        },\n        {\n          'name': 'ROLESPEC_CURRENT_USER',\n          'comment': '/* role spec is CURRENT_USER */'\n        },\n        {\n          'name': 'ROLESPEC_SESSION_USER',\n          'comment': '/* role spec is SESSION_USER */'\n        },\n        {\n          'name': 'ROLESPEC_PUBLIC',\n          'comment': '/* role name is \"public\" */'\n        }\n      ],\n      'comment': '/*\\n * RoleSpec - a role name or one of a few special values.\\n */\\n'\n    },\n    'TableLikeOption': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'CREATE_TABLE_LIKE_DEFAULTS',\n          'comment': null\n        },\n        {\n          'name': 'CREATE_TABLE_LIKE_CONSTRAINTS',\n          'comment': null\n        },\n        {\n          'name': 'CREATE_TABLE_LIKE_IDENTITY',\n          'comment': null\n        },\n        {\n          'name': 'CREATE_TABLE_LIKE_INDEXES',\n          'comment': null\n        },\n        {\n          'name': 'CREATE_TABLE_LIKE_STORAGE',\n          'comment': null\n        },\n        {\n          'name': 'CREATE_TABLE_LIKE_COMMENTS',\n          'comment': null\n        },\n        {\n          'name': 'CREATE_TABLE_LIKE_ALL',\n          'comment': null\n        }\n      ],\n      'comment': null\n    },\n    'DefElemAction': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'DEFELEM_UNSPEC',\n          'comment': '/* no action given */'\n        },\n        {\n          'name': 'DEFELEM_SET',\n          'comment': null\n        },\n        {\n          'name': 'DEFELEM_ADD',\n          'comment': null\n        },\n        {\n          'name': 'DEFELEM_DROP',\n          'comment': null\n        }\n      ],\n      'comment': \"/*\\n * DefElem - a generic \\\"name = value\\\" option definition\\n *\\n * In some contexts the name can be qualified.  Also, certain SQL commands\\n * allow a SET/ADD/DROP action to be attached to option settings, so it's\\n * convenient to carry a field for that too.  (Note: currently, it is our\\n * practice that the grammar allows namespace and action only in statements\\n * where they are relevant; C code can just ignore those fields in other\\n * statements.)\\n */\\n\"\n    },\n    'PartitionRangeDatumKind': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'PARTITION_RANGE_DATUM_MINVALUE',\n          'comment': null\n        },\n        {\n          'name': 'PARTITION_RANGE_DATUM_VALUE',\n          'comment': null\n        },\n        {\n          'name': 'PARTITION_RANGE_DATUM_MAXVALUE',\n          'comment': null\n        }\n      ],\n      'comment': '/*\\n * PartitionRangeDatum - one of the values in a range partition bound\\n *\\n * This can be MINVALUE, MAXVALUE or a specific bounded value.\\n */\\n'\n    },\n    'RTEKind': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'RTE_RELATION',\n          'comment': '/* ordinary relation reference */'\n        },\n        {\n          'name': 'RTE_SUBQUERY',\n          'comment': '/* subquery in FROM */'\n        },\n        {\n          'name': 'RTE_JOIN',\n          'comment': '/* join */'\n        },\n        {\n          'name': 'RTE_FUNCTION',\n          'comment': '/* function in FROM */'\n        },\n        {\n          'name': 'RTE_TABLEFUNC',\n          'comment': '/* TableFunc(.., column list) */'\n        },\n        {\n          'name': 'RTE_VALUES',\n          'comment': '/* VALUES (<exprlist>), (<exprlist>), ... */'\n        },\n        {\n          'name': 'RTE_CTE',\n          'comment': '/* common table expr (WITH list element) */'\n        },\n        {\n          'name': 'RTE_NAMEDTUPLESTORE',\n          'comment': '/* tuplestore, e.g. for AFTER triggers */'\n        }\n      ],\n      'comment': \"/*--------------------\\n * RangeTblEntry -\\n *\\t  A range table is a List of RangeTblEntry nodes.\\n *\\n *\\t  A range table entry may represent a plain relation, a sub-select in\\n *\\t  FROM, or the result of a JOIN clause.  (Only explicit JOIN syntax\\n *\\t  produces an RTE, not the implicit join resulting from multiple FROM\\n *\\t  items.  This is because we only need the RTE to deal with SQL features\\n *\\t  like outer joins and join-output-column aliasing.)  Other special\\n *\\t  RTE types also exist, as indicated by RTEKind.\\n *\\n *\\t  Note that we consider RTE_RELATION to cover anything that has a pg_class\\n *\\t  entry.  relkind distinguishes the sub-cases.\\n *\\n *\\t  alias is an Alias node representing the AS alias-clause attached to the\\n *\\t  FROM expression, or NULL if no clause.\\n *\\n *\\t  eref is the table reference name and column reference names (either\\n *\\t  real or aliases).  Note that system columns (OID etc) are not included\\n *\\t  in the column list.\\n *\\t  eref->aliasname is required to be present, and should generally be used\\n *\\t  to identify the RTE for error messages etc.\\n *\\n *\\t  In RELATION RTEs, the colnames in both alias and eref are indexed by\\n *\\t  physical attribute number; this means there must be colname entries for\\n *\\t  dropped columns.  When building an RTE we insert empty strings (\\\"\\\") for\\n *\\t  dropped columns.  Note however that a stored rule may have nonempty\\n *\\t  colnames for columns dropped since the rule was created (and for that\\n *\\t  matter the colnames might be out of date due to column renamings).\\n *\\t  The same comments apply to FUNCTION RTEs when a function's return type\\n *\\t  is a named composite type.\\n *\\n *\\t  In JOIN RTEs, the colnames in both alias and eref are one-to-one with\\n *\\t  joinaliasvars entries.  A JOIN RTE will omit columns of its inputs when\\n *\\t  those columns are known to be dropped at parse time.  Again, however,\\n *\\t  a stored rule might contain entries for columns dropped since the rule\\n *\\t  was created.  (This is only possible for columns not actually referenced\\n *\\t  in the rule.)  When loading a stored rule, we replace the joinaliasvars\\n *\\t  items for any such columns with null pointers.  (We can't simply delete\\n *\\t  them from the joinaliasvars list, because that would affect the attnums\\n *\\t  of Vars referencing the rest of the list.)\\n *\\n *\\t  inh is TRUE for relation references that should be expanded to include\\n *\\t  inheritance children, if the rel has any.  This *must* be FALSE for\\n *\\t  RTEs other than RTE_RELATION entries.\\n *\\n *\\t  inFromCl marks those range variables that are listed in the FROM clause.\\n *\\t  It's false for RTEs that are added to a query behind the scenes, such\\n *\\t  as the NEW and OLD variables for a rule, or the subqueries of a UNION.\\n *\\t  This flag is not used anymore during parsing, since the parser now uses\\n *\\t  a separate \\\"namespace\\\" data structure to control visibility, but it is\\n *\\t  needed by ruleutils.c to determine whether RTEs should be shown in\\n *\\t  decompiled queries.\\n *\\n *\\t  requiredPerms and checkAsUser specify run-time access permissions\\n *\\t  checks to be performed at query startup.  The user must have *all*\\n *\\t  of the permissions that are OR'd together in requiredPerms (zero\\n *\\t  indicates no permissions checking).  If checkAsUser is not zero,\\n *\\t  then do the permissions checks using the access rights of that user,\\n *\\t  not the current effective user ID.  (This allows rules to act as\\n *\\t  setuid gateways.)  Permissions checks only apply to RELATION RTEs.\\n *\\n *\\t  For SELECT/INSERT/UPDATE permissions, if the user doesn't have\\n *\\t  table-wide permissions then it is sufficient to have the permissions\\n *\\t  on all columns identified in selectedCols (for SELECT) and/or\\n *\\t  insertedCols and/or updatedCols (INSERT with ON CONFLICT DO UPDATE may\\n *\\t  have all 3).  selectedCols, insertedCols and updatedCols are bitmapsets,\\n *\\t  which cannot have negative integer members, so we subtract\\n *\\t  FirstLowInvalidHeapAttributeNumber from column numbers before storing\\n *\\t  them in these fields.  A whole-row Var reference is represented by\\n *\\t  setting the bit for InvalidAttrNumber.\\n *\\n *\\t  securityQuals is a list of security barrier quals (boolean expressions),\\n *\\t  to be tested in the listed order before returning a row from the\\n *\\t  relation.  It is always NIL in parser output.  Entries are added by the\\n *\\t  rewriter to implement security-barrier views and/or row-level security.\\n *\\t  Note that the planner turns each boolean expression into an implicitly\\n *\\t  AND'ed sublist, as is its usual habit with qualification expressions.\\n *--------------------\\n */\\n\"\n    },\n    'WCOKind': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'WCO_VIEW_CHECK',\n          'comment': '/* WCO on an auto-updatable view */'\n        },\n        {\n          'name': 'WCO_RLS_INSERT_CHECK',\n          'comment': '/* RLS INSERT WITH CHECK policy */'\n        },\n        {\n          'name': 'WCO_RLS_UPDATE_CHECK',\n          'comment': '/* RLS UPDATE WITH CHECK policy */'\n        },\n        {\n          'name': 'WCO_RLS_CONFLICT_CHECK',\n          'comment': '/* RLS ON CONFLICT DO UPDATE USING policy */'\n        }\n      ],\n      'comment': '/*\\n * WithCheckOption -\\n *\\t\\trepresentation of WITH CHECK OPTION checks to be applied to new tuples\\n *\\t\\twhen inserting/updating an auto-updatable view, or RLS WITH CHECK\\n *\\t\\tpolicies to be applied when inserting/updating a relation with RLS.\\n */\\n'\n    },\n    'GroupingSetKind': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'GROUPING_SET_EMPTY',\n          'comment': null\n        },\n        {\n          'name': 'GROUPING_SET_SIMPLE',\n          'comment': null\n        },\n        {\n          'name': 'GROUPING_SET_ROLLUP',\n          'comment': null\n        },\n        {\n          'name': 'GROUPING_SET_CUBE',\n          'comment': null\n        },\n        {\n          'name': 'GROUPING_SET_SETS',\n          'comment': null\n        }\n      ],\n      'comment': \"/*\\n * GroupingSet -\\n *\\t\\trepresentation of CUBE, ROLLUP and GROUPING SETS clauses\\n *\\n * In a Query with grouping sets, the groupClause contains a flat list of\\n * SortGroupClause nodes for each distinct expression used.  The actual\\n * structure of the GROUP BY clause is given by the groupingSets tree.\\n *\\n * In the raw parser output, GroupingSet nodes (of all types except SIMPLE\\n * which is not used) are potentially mixed in with the expressions in the\\n * groupClause of the SelectStmt.  (An expression can't contain a GroupingSet,\\n * but a list may mix GroupingSet and expression nodes.)  At this stage, the\\n * content of each node is a list of expressions, some of which may be RowExprs\\n * which represent sublists rather than actual row constructors, and nested\\n * GroupingSet nodes where legal in the grammar.  The structure directly\\n * reflects the query syntax.\\n *\\n * In parse analysis, the transformed expressions are used to build the tlist\\n * and groupClause list (of SortGroupClause nodes), and the groupingSets tree\\n * is eventually reduced to a fixed format:\\n *\\n * EMPTY nodes represent (), and obviously have no content\\n *\\n * SIMPLE nodes represent a list of one or more expressions to be treated as an\\n * atom by the enclosing structure; the content is an integer list of\\n * ressortgroupref values (see SortGroupClause)\\n *\\n * CUBE and ROLLUP nodes contain a list of one or more SIMPLE nodes.\\n *\\n * SETS nodes contain a list of EMPTY, SIMPLE, CUBE or ROLLUP nodes, but after\\n * parse analysis they cannot contain more SETS nodes; enough of the syntactic\\n * transforms of the spec have been applied that we no longer have arbitrarily\\n * deep nesting (though we still preserve the use of cube/rollup).\\n *\\n * Note that if the groupingSets tree contains no SIMPLE nodes (only EMPTY\\n * nodes at the leaves), then the groupClause will be empty, but this is still\\n * an aggregation query (similar to using aggs or HAVING without GROUP BY).\\n *\\n * As an example, the following clause:\\n *\\n * GROUP BY GROUPING SETS ((a,b), CUBE(c,(d,e)))\\n *\\n * looks like this after raw parsing:\\n *\\n * SETS( RowExpr(a,b) , CUBE( c, RowExpr(d,e) ) )\\n *\\n * and parse analysis converts it to:\\n *\\n * SETS( SIMPLE(1,2), CUBE( SIMPLE(3), SIMPLE(4,5) ) )\\n */\\n\"\n    },\n    'SetOperation': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'SETOP_NONE',\n          'comment': null\n        },\n        {\n          'name': 'SETOP_UNION',\n          'comment': null\n        },\n        {\n          'name': 'SETOP_INTERSECT',\n          'comment': null\n        },\n        {\n          'name': 'SETOP_EXCEPT',\n          'comment': null\n        }\n      ],\n      'comment': '/* ----------------------\\n *\\t\\tSelect Statement\\n *\\n * A \"simple\" SELECT is represented in the output of gram.y by a single\\n * SelectStmt node; so is a VALUES construct.  A query containing set\\n * operators (UNION, INTERSECT, EXCEPT) is represented by a tree of SelectStmt\\n * nodes, in which the leaf nodes are component SELECTs and the internal nodes\\n * represent UNION, INTERSECT, or EXCEPT operators.  Using the same node\\n * type for both leaf and internal nodes allows gram.y to stick ORDER BY,\\n * LIMIT, etc, clause values into a SELECT statement without worrying\\n * whether it is a simple or compound SELECT.\\n * ----------------------\\n */\\n'\n    },\n    'ObjectType': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'OBJECT_ACCESS_METHOD',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_AGGREGATE',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_AMOP',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_AMPROC',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_ATTRIBUTE',\n          'comment': \"/* type's attribute, when distinct from column */\"\n        },\n        {\n          'name': 'OBJECT_CAST',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_COLUMN',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_COLLATION',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_CONVERSION',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_DATABASE',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_DEFAULT',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_DEFACL',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_DOMAIN',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_DOMCONSTRAINT',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_EVENT_TRIGGER',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_EXTENSION',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_FDW',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_FOREIGN_SERVER',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_FOREIGN_TABLE',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_FUNCTION',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_INDEX',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_LANGUAGE',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_LARGEOBJECT',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_MATVIEW',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_OPCLASS',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_OPERATOR',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_OPFAMILY',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_POLICY',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_PUBLICATION',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_PUBLICATION_REL',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_ROLE',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_RULE',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_SCHEMA',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_SEQUENCE',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_SUBSCRIPTION',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_STATISTIC_EXT',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_TABCONSTRAINT',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_TABLE',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_TABLESPACE',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_TRANSFORM',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_TRIGGER',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_TSCONFIGURATION',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_TSDICTIONARY',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_TSPARSER',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_TSTEMPLATE',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_TYPE',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_USER_MAPPING',\n          'comment': null\n        },\n        {\n          'name': 'OBJECT_VIEW',\n          'comment': null\n        }\n      ],\n      'comment': \"/*\\n * When a command can act on several kinds of objects with only one\\n * parse structure required, use these constants to designate the\\n * object type.  Note that commands typically don't support all the types.\\n */\\n\"\n    },\n    'DropBehavior': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'DROP_RESTRICT',\n          'comment': '/* drop fails if any dependent objects */'\n        },\n        {\n          'name': 'DROP_CASCADE',\n          'comment': '/* remove dependent objects too */'\n        }\n      ],\n      'comment': null\n    },\n    'AlterTableType': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'AT_AddColumn',\n          'comment': '/* add column */'\n        },\n        {\n          'name': 'AT_AddColumnRecurse',\n          'comment': '/* internal to commands/tablecmds.c */'\n        },\n        {\n          'name': 'AT_AddColumnToView',\n          'comment': '/* implicitly via CREATE OR REPLACE VIEW */'\n        },\n        {\n          'name': 'AT_ColumnDefault',\n          'comment': '/* alter column default */'\n        },\n        {\n          'name': 'AT_DropNotNull',\n          'comment': '/* alter column drop not null */'\n        },\n        {\n          'name': 'AT_SetNotNull',\n          'comment': '/* alter column set not null */'\n        },\n        {\n          'name': 'AT_SetStatistics',\n          'comment': '/* alter column set statistics */'\n        },\n        {\n          'name': 'AT_SetOptions',\n          'comment': '/* alter column set ( options ) */'\n        },\n        {\n          'name': 'AT_ResetOptions',\n          'comment': '/* alter column reset ( options ) */'\n        },\n        {\n          'name': 'AT_SetStorage',\n          'comment': '/* alter column set storage */'\n        },\n        {\n          'name': 'AT_DropColumn',\n          'comment': '/* drop column */'\n        },\n        {\n          'name': 'AT_DropColumnRecurse',\n          'comment': '/* internal to commands/tablecmds.c */'\n        },\n        {\n          'name': 'AT_AddIndex',\n          'comment': '/* add index */'\n        },\n        {\n          'name': 'AT_ReAddIndex',\n          'comment': '/* internal to commands/tablecmds.c */'\n        },\n        {\n          'name': 'AT_AddConstraint',\n          'comment': '/* add constraint */'\n        },\n        {\n          'name': 'AT_AddConstraintRecurse',\n          'comment': '/* internal to commands/tablecmds.c */'\n        },\n        {\n          'name': 'AT_ReAddConstraint',\n          'comment': '/* internal to commands/tablecmds.c */'\n        },\n        {\n          'name': 'AT_AlterConstraint',\n          'comment': '/* alter constraint */'\n        },\n        {\n          'name': 'AT_ValidateConstraint',\n          'comment': '/* validate constraint */'\n        },\n        {\n          'name': 'AT_ValidateConstraintRecurse',\n          'comment': '/* internal to commands/tablecmds.c */'\n        },\n        {\n          'name': 'AT_ProcessedConstraint',\n          'comment': '/* pre-processed add constraint (local in\\n\\t\\t\\t\\t\\t\\t\\t\\t * parser/parse_utilcmd.c) */\\n'\n        },\n        {\n          'name': 'AT_AddIndexConstraint',\n          'comment': '/* add constraint using existing index */'\n        },\n        {\n          'name': 'AT_DropConstraint',\n          'comment': '/* drop constraint */'\n        },\n        {\n          'name': 'AT_DropConstraintRecurse',\n          'comment': '/* internal to commands/tablecmds.c */'\n        },\n        {\n          'name': 'AT_ReAddComment',\n          'comment': '/* internal to commands/tablecmds.c */'\n        },\n        {\n          'name': 'AT_AlterColumnType',\n          'comment': '/* alter column type */'\n        },\n        {\n          'name': 'AT_AlterColumnGenericOptions',\n          'comment': '/* alter column OPTIONS (...) */'\n        },\n        {\n          'name': 'AT_ChangeOwner',\n          'comment': '/* change owner */'\n        },\n        {\n          'name': 'AT_ClusterOn',\n          'comment': '/* CLUSTER ON */'\n        },\n        {\n          'name': 'AT_DropCluster',\n          'comment': '/* SET WITHOUT CLUSTER */'\n        },\n        {\n          'name': 'AT_SetLogged',\n          'comment': '/* SET LOGGED */'\n        },\n        {\n          'name': 'AT_SetUnLogged',\n          'comment': '/* SET UNLOGGED */'\n        },\n        {\n          'name': 'AT_AddOids',\n          'comment': '/* SET WITH OIDS */'\n        },\n        {\n          'name': 'AT_AddOidsRecurse',\n          'comment': '/* internal to commands/tablecmds.c */'\n        },\n        {\n          'name': 'AT_DropOids',\n          'comment': '/* SET WITHOUT OIDS */'\n        },\n        {\n          'name': 'AT_SetTableSpace',\n          'comment': '/* SET TABLESPACE */'\n        },\n        {\n          'name': 'AT_SetRelOptions',\n          'comment': '/* SET (...) -- AM specific parameters */'\n        },\n        {\n          'name': 'AT_ResetRelOptions',\n          'comment': '/* RESET (...) -- AM specific parameters */'\n        },\n        {\n          'name': 'AT_ReplaceRelOptions',\n          'comment': '/* replace reloption list in its entirety */'\n        },\n        {\n          'name': 'AT_EnableTrig',\n          'comment': '/* ENABLE TRIGGER name */'\n        },\n        {\n          'name': 'AT_EnableAlwaysTrig',\n          'comment': '/* ENABLE ALWAYS TRIGGER name */'\n        },\n        {\n          'name': 'AT_EnableReplicaTrig',\n          'comment': '/* ENABLE REPLICA TRIGGER name */'\n        },\n        {\n          'name': 'AT_DisableTrig',\n          'comment': '/* DISABLE TRIGGER name */'\n        },\n        {\n          'name': 'AT_EnableTrigAll',\n          'comment': '/* ENABLE TRIGGER ALL */'\n        },\n        {\n          'name': 'AT_DisableTrigAll',\n          'comment': '/* DISABLE TRIGGER ALL */'\n        },\n        {\n          'name': 'AT_EnableTrigUser',\n          'comment': '/* ENABLE TRIGGER USER */'\n        },\n        {\n          'name': 'AT_DisableTrigUser',\n          'comment': '/* DISABLE TRIGGER USER */'\n        },\n        {\n          'name': 'AT_EnableRule',\n          'comment': '/* ENABLE RULE name */'\n        },\n        {\n          'name': 'AT_EnableAlwaysRule',\n          'comment': '/* ENABLE ALWAYS RULE name */'\n        },\n        {\n          'name': 'AT_EnableReplicaRule',\n          'comment': '/* ENABLE REPLICA RULE name */'\n        },\n        {\n          'name': 'AT_DisableRule',\n          'comment': '/* DISABLE RULE name */'\n        },\n        {\n          'name': 'AT_AddInherit',\n          'comment': '/* INHERIT parent */'\n        },\n        {\n          'name': 'AT_DropInherit',\n          'comment': '/* NO INHERIT parent */'\n        },\n        {\n          'name': 'AT_AddOf',\n          'comment': '/* OF <type_name> */'\n        },\n        {\n          'name': 'AT_DropOf',\n          'comment': '/* NOT OF */'\n        },\n        {\n          'name': 'AT_ReplicaIdentity',\n          'comment': '/* REPLICA IDENTITY */'\n        },\n        {\n          'name': 'AT_EnableRowSecurity',\n          'comment': '/* ENABLE ROW SECURITY */'\n        },\n        {\n          'name': 'AT_DisableRowSecurity',\n          'comment': '/* DISABLE ROW SECURITY */'\n        },\n        {\n          'name': 'AT_ForceRowSecurity',\n          'comment': '/* FORCE ROW SECURITY */'\n        },\n        {\n          'name': 'AT_NoForceRowSecurity',\n          'comment': '/* NO FORCE ROW SECURITY */'\n        },\n        {\n          'name': 'AT_GenericOptions',\n          'comment': '/* OPTIONS (...) */'\n        },\n        {\n          'name': 'AT_AttachPartition',\n          'comment': '/* ATTACH PARTITION */'\n        },\n        {\n          'name': 'AT_DetachPartition',\n          'comment': '/* DETACH PARTITION */'\n        },\n        {\n          'name': 'AT_AddIdentity',\n          'comment': '/* ADD IDENTITY */'\n        },\n        {\n          'name': 'AT_SetIdentity',\n          'comment': '/* SET identity column options */'\n        },\n        {\n          'name': 'AT_DropIdentity',\n          'comment': '/* DROP IDENTITY */'\n        }\n      ],\n      'comment': null\n    },\n    'GrantTargetType': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'ACL_TARGET_OBJECT',\n          'comment': '/* grant on specific named object(s) */'\n        },\n        {\n          'name': 'ACL_TARGET_ALL_IN_SCHEMA',\n          'comment': '/* grant on all objects in given schema(s) */'\n        },\n        {\n          'name': 'ACL_TARGET_DEFAULTS',\n          'comment': '/* ALTER DEFAULT PRIVILEGES */'\n        }\n      ],\n      'comment': '/* ----------------------\\n *\\t\\tGrant|Revoke Statement\\n * ----------------------\\n */\\n'\n    },\n    'GrantObjectType': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'ACL_OBJECT_COLUMN',\n          'comment': '/* column */'\n        },\n        {\n          'name': 'ACL_OBJECT_RELATION',\n          'comment': '/* table, view */'\n        },\n        {\n          'name': 'ACL_OBJECT_SEQUENCE',\n          'comment': '/* sequence */'\n        },\n        {\n          'name': 'ACL_OBJECT_DATABASE',\n          'comment': '/* database */'\n        },\n        {\n          'name': 'ACL_OBJECT_DOMAIN',\n          'comment': '/* domain */'\n        },\n        {\n          'name': 'ACL_OBJECT_FDW',\n          'comment': '/* foreign-data wrapper */'\n        },\n        {\n          'name': 'ACL_OBJECT_FOREIGN_SERVER',\n          'comment': '/* foreign server */'\n        },\n        {\n          'name': 'ACL_OBJECT_FUNCTION',\n          'comment': '/* function */'\n        },\n        {\n          'name': 'ACL_OBJECT_LANGUAGE',\n          'comment': '/* procedural language */'\n        },\n        {\n          'name': 'ACL_OBJECT_LARGEOBJECT',\n          'comment': '/* largeobject */'\n        },\n        {\n          'name': 'ACL_OBJECT_NAMESPACE',\n          'comment': '/* namespace */'\n        },\n        {\n          'name': 'ACL_OBJECT_TABLESPACE',\n          'comment': '/* tablespace */'\n        },\n        {\n          'name': 'ACL_OBJECT_TYPE',\n          'comment': '/* type */'\n        }\n      ],\n      'comment': null\n    },\n    'VariableSetKind': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'VAR_SET_VALUE',\n          'comment': '/* SET var = value */'\n        },\n        {\n          'name': 'VAR_SET_DEFAULT',\n          'comment': '/* SET var TO DEFAULT */'\n        },\n        {\n          'name': 'VAR_SET_CURRENT',\n          'comment': '/* SET var FROM CURRENT */'\n        },\n        {\n          'name': 'VAR_SET_MULTI',\n          'comment': '/* special case for SET TRANSACTION ... */'\n        },\n        {\n          'name': 'VAR_RESET',\n          'comment': '/* RESET var */'\n        },\n        {\n          'name': 'VAR_RESET_ALL',\n          'comment': '/* RESET ALL */'\n        }\n      ],\n      'comment': '/* ----------------------\\n * SET Statement (includes RESET)\\n *\\n * \"SET var TO DEFAULT\" and \"RESET var\" are semantically equivalent, but we\\n * preserve the distinction in VariableSetKind for CreateCommandTag().\\n * ----------------------\\n */\\n'\n    },\n    'ConstrType': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'CONSTR_NULL',\n          'comment': '/* not standard SQL, but a lot of people\\n\\t\\t\\t\\t\\t\\t\\t\\t * expect it */\\n'\n        },\n        {\n          'name': 'CONSTR_NOTNULL',\n          'comment': null\n        },\n        {\n          'name': 'CONSTR_DEFAULT',\n          'comment': null\n        },\n        {\n          'name': 'CONSTR_IDENTITY',\n          'comment': null\n        },\n        {\n          'name': 'CONSTR_CHECK',\n          'comment': null\n        },\n        {\n          'name': 'CONSTR_PRIMARY',\n          'comment': null\n        },\n        {\n          'name': 'CONSTR_UNIQUE',\n          'comment': null\n        },\n        {\n          'name': 'CONSTR_EXCLUSION',\n          'comment': null\n        },\n        {\n          'name': 'CONSTR_FOREIGN',\n          'comment': null\n        },\n        {\n          'name': 'CONSTR_ATTR_DEFERRABLE',\n          'comment': '/* attributes for previous constraint node */'\n        },\n        {\n          'name': 'CONSTR_ATTR_NOT_DEFERRABLE',\n          'comment': null\n        },\n        {\n          'name': 'CONSTR_ATTR_DEFERRED',\n          'comment': null\n        },\n        {\n          'name': 'CONSTR_ATTR_IMMEDIATE',\n          'comment': null\n        }\n      ],\n      'comment': \"/* ----------\\n * Definitions for constraints in CreateStmt\\n *\\n * Note that column defaults are treated as a type of constraint,\\n * even though that's a bit odd semantically.\\n *\\n * For constraints that use expressions (CONSTR_CHECK, CONSTR_DEFAULT)\\n * we may have the expression in either \\\"raw\\\" form (an untransformed\\n * parse tree) or \\\"cooked\\\" form (the nodeToString representation of\\n * an executable expression tree), depending on how this Constraint\\n * node was created (by parsing, or by inheritance from an existing\\n * relation).  We should never have both in the same node!\\n *\\n * FKCONSTR_ACTION_xxx values are stored into pg_constraint.confupdtype\\n * and pg_constraint.confdeltype columns; FKCONSTR_MATCH_xxx values are\\n * stored into pg_constraint.confmatchtype.  Changing the code values may\\n * require an initdb!\\n *\\n * If skip_validation is true then we skip checking that the existing rows\\n * in the table satisfy the constraint, and just install the catalog entries\\n * for the constraint.  A new FK constraint is marked as valid iff\\n * initially_valid is true.  (Usually skip_validation and initially_valid\\n * are inverses, but we can set both true if the table is known empty.)\\n *\\n * Constraint attributes (DEFERRABLE etc) are initially represented as\\n * separate Constraint nodes for simplicity of parsing.  parse_utilcmd.c makes\\n * a pass through the constraints list to insert the info into the appropriate\\n * Constraint node.\\n * ----------\\n */\\n\"\n    },\n    'ImportForeignSchemaType': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'FDW_IMPORT_SCHEMA_ALL',\n          'comment': '/* all relations wanted */'\n        },\n        {\n          'name': 'FDW_IMPORT_SCHEMA_LIMIT_TO',\n          'comment': '/* include only listed tables in import */'\n        },\n        {\n          'name': 'FDW_IMPORT_SCHEMA_EXCEPT',\n          'comment': '/* exclude listed tables from import */'\n        }\n      ],\n      'comment': '/* ----------------------\\n *\\t\\tImport Foreign Schema Statement\\n * ----------------------\\n */\\n'\n    },\n    'RoleStmtType': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'ROLESTMT_ROLE',\n          'comment': null\n        },\n        {\n          'name': 'ROLESTMT_USER',\n          'comment': null\n        },\n        {\n          'name': 'ROLESTMT_GROUP',\n          'comment': null\n        }\n      ],\n      'comment': \"/* ----------------------\\n *\\tCreate/Alter/Drop Role Statements\\n *\\n * Note: these node types are also used for the backwards-compatible\\n * Create/Alter/Drop User/Group statements.  In the ALTER and DROP cases\\n * there's really no need to distinguish what the original spelling was,\\n * but for CREATE we mark the type because the defaults vary.\\n * ----------------------\\n */\\n\"\n    },\n    'FetchDirection': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'comment': '\\t/* for these, howMany is how many rows to fetch; FETCH_ALL means ALL */\\n'\n        },\n        {\n          'name': 'FETCH_FORWARD',\n          'comment': null\n        },\n        {\n          'name': 'FETCH_BACKWARD',\n          'comment': null\n        },\n        {\n          'comment': '\\t/* for these, howMany indicates a position; only one row is fetched */\\n'\n        },\n        {\n          'name': 'FETCH_ABSOLUTE',\n          'comment': null\n        },\n        {\n          'name': 'FETCH_RELATIVE',\n          'comment': null\n        }\n      ],\n      'comment': '/* ----------------------\\n *\\t\\tFetch Statement (also Move)\\n * ----------------------\\n */\\n'\n    },\n    'FunctionParameterMode': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'comment': \"\\t/* the assigned enum values appear in pg_proc, don't change 'em! */\\n\"\n        },\n        {\n          'name': 'FUNC_PARAM_IN',\n          'comment': null\n        },\n        {\n          'name': 'FUNC_PARAM_OUT',\n          'comment': null\n        },\n        {\n          'name': 'FUNC_PARAM_INOUT',\n          'comment': null\n        },\n        {\n          'name': 'FUNC_PARAM_VARIADIC',\n          'comment': null\n        },\n        {\n          'name': 'FUNC_PARAM_TABLE',\n          'comment': null\n        }\n      ],\n      'comment': null\n    },\n    'TransactionStmtKind': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'TRANS_STMT_BEGIN',\n          'comment': null\n        },\n        {\n          'name': 'TRANS_STMT_START',\n          'comment': '/* semantically identical to BEGIN */'\n        },\n        {\n          'name': 'TRANS_STMT_COMMIT',\n          'comment': null\n        },\n        {\n          'name': 'TRANS_STMT_ROLLBACK',\n          'comment': null\n        },\n        {\n          'name': 'TRANS_STMT_SAVEPOINT',\n          'comment': null\n        },\n        {\n          'name': 'TRANS_STMT_RELEASE',\n          'comment': null\n        },\n        {\n          'name': 'TRANS_STMT_ROLLBACK_TO',\n          'comment': null\n        },\n        {\n          'name': 'TRANS_STMT_PREPARE',\n          'comment': null\n        },\n        {\n          'name': 'TRANS_STMT_COMMIT_PREPARED',\n          'comment': null\n        },\n        {\n          'name': 'TRANS_STMT_ROLLBACK_PREPARED',\n          'comment': null\n        }\n      ],\n      'comment': '/* ----------------------\\n *\\t\\t{Begin|Commit|Rollback} Transaction Statement\\n * ----------------------\\n */\\n'\n    },\n    'ViewCheckOption': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'NO_CHECK_OPTION',\n          'comment': null\n        },\n        {\n          'name': 'LOCAL_CHECK_OPTION',\n          'comment': null\n        },\n        {\n          'name': 'CASCADED_CHECK_OPTION',\n          'comment': null\n        }\n      ],\n      'comment': '/* ----------------------\\n *\\t\\tCreate View Statement\\n * ----------------------\\n */\\n'\n    },\n    'VacuumOption': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'VACOPT_VACUUM',\n          'comment': null\n        },\n        {\n          'name': 'VACOPT_ANALYZE',\n          'comment': null\n        },\n        {\n          'name': 'VACOPT_VERBOSE',\n          'comment': null\n        },\n        {\n          'name': 'VACOPT_FREEZE',\n          'comment': null\n        },\n        {\n          'name': 'VACOPT_FULL',\n          'comment': null\n        },\n        {\n          'name': 'VACOPT_NOWAIT',\n          'comment': null\n        },\n        {\n          'name': 'VACOPT_SKIPTOAST',\n          'comment': null\n        },\n        {\n          'name': 'VACOPT_DISABLE_PAGE_SKIPPING',\n          'comment': null\n        }\n      ],\n      'comment': \"/* ----------------------\\n *\\t\\tVacuum and Analyze Statements\\n *\\n * Even though these are nominally two statements, it's convenient to use\\n * just one node type for both.  Note that at least one of VACOPT_VACUUM\\n * and VACOPT_ANALYZE must be set in options.\\n * ----------------------\\n */\\n\"\n    },\n    'DiscardMode': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'DISCARD_ALL',\n          'comment': null\n        },\n        {\n          'name': 'DISCARD_PLANS',\n          'comment': null\n        },\n        {\n          'name': 'DISCARD_SEQUENCES',\n          'comment': null\n        },\n        {\n          'name': 'DISCARD_TEMP',\n          'comment': null\n        }\n      ],\n      'comment': '/* ----------------------\\n * Discard Statement\\n * ----------------------\\n */\\n'\n    },\n    'ReindexObjectType': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'REINDEX_OBJECT_INDEX',\n          'comment': '/* index */'\n        },\n        {\n          'name': 'REINDEX_OBJECT_TABLE',\n          'comment': '/* table or materialized view */'\n        },\n        {\n          'name': 'REINDEX_OBJECT_SCHEMA',\n          'comment': '/* schema */'\n        },\n        {\n          'name': 'REINDEX_OBJECT_SYSTEM',\n          'comment': '/* system catalogs */'\n        },\n        {\n          'name': 'REINDEX_OBJECT_DATABASE',\n          'comment': '/* database */'\n        }\n      ],\n      'comment': '/* Reindex options */\\n'\n    },\n    'AlterTSConfigType': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'ALTER_TSCONFIG_ADD_MAPPING',\n          'comment': null\n        },\n        {\n          'name': 'ALTER_TSCONFIG_ALTER_MAPPING_FOR_TOKEN',\n          'comment': null\n        },\n        {\n          'name': 'ALTER_TSCONFIG_REPLACE_DICT',\n          'comment': null\n        },\n        {\n          'name': 'ALTER_TSCONFIG_REPLACE_DICT_FOR_TOKEN',\n          'comment': null\n        },\n        {\n          'name': 'ALTER_TSCONFIG_DROP_MAPPING',\n          'comment': null\n        }\n      ],\n      'comment': '/*\\n * TS Configuration stmts: DefineStmt, RenameStmt and DropStmt are default\\n */\\n'\n    },\n    'AlterSubscriptionType': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'ALTER_SUBSCRIPTION_OPTIONS',\n          'comment': null\n        },\n        {\n          'name': 'ALTER_SUBSCRIPTION_CONNECTION',\n          'comment': null\n        },\n        {\n          'name': 'ALTER_SUBSCRIPTION_PUBLICATION',\n          'comment': null\n        },\n        {\n          'name': 'ALTER_SUBSCRIPTION_REFRESH',\n          'comment': null\n        },\n        {\n          'name': 'ALTER_SUBSCRIPTION_ENABLED',\n          'comment': null\n        }\n      ],\n      'comment': null\n    }\n  },\n  'nodes/primnodes': {\n    'OnCommitAction': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'ONCOMMIT_NOOP',\n          'comment': '/* No ON COMMIT clause (do nothing) */'\n        },\n        {\n          'name': 'ONCOMMIT_PRESERVE_ROWS',\n          'comment': '/* ON COMMIT PRESERVE ROWS (do nothing) */'\n        },\n        {\n          'name': 'ONCOMMIT_DELETE_ROWS',\n          'comment': '/* ON COMMIT DELETE ROWS */'\n        },\n        {\n          'name': 'ONCOMMIT_DROP',\n          'comment': '/* ON COMMIT DROP */'\n        }\n      ],\n      'comment': '/* What to do at commit time for temporary relations */\\n'\n    },\n    'ParamKind': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'PARAM_EXTERN',\n          'comment': null\n        },\n        {\n          'name': 'PARAM_EXEC',\n          'comment': null\n        },\n        {\n          'name': 'PARAM_SUBLINK',\n          'comment': null\n        },\n        {\n          'name': 'PARAM_MULTIEXPR',\n          'comment': null\n        }\n      ],\n      'comment': \"/*\\n * Param\\n *\\n *\\t\\tparamkind specifies the kind of parameter. The possible values\\n *\\t\\tfor this field are:\\n *\\n *\\t\\tPARAM_EXTERN:  The parameter value is supplied from outside the plan.\\n *\\t\\t\\t\\tSuch parameters are numbered from 1 to n.\\n *\\n *\\t\\tPARAM_EXEC:  The parameter is an internal executor parameter, used\\n *\\t\\t\\t\\tfor passing values into and out of sub-queries or from\\n *\\t\\t\\t\\tnestloop joins to their inner scans.\\n *\\t\\t\\t\\tFor historical reasons, such parameters are numbered from 0.\\n *\\t\\t\\t\\tThese numbers are independent of PARAM_EXTERN numbers.\\n *\\n *\\t\\tPARAM_SUBLINK:\\tThe parameter represents an output column of a SubLink\\n *\\t\\t\\t\\tnode's sub-select.  The column number is contained in the\\n *\\t\\t\\t\\t`paramid' field.  (This type of Param is converted to\\n *\\t\\t\\t\\tPARAM_EXEC during planning.)\\n *\\n *\\t\\tPARAM_MULTIEXPR:  Like PARAM_SUBLINK, the parameter represents an\\n *\\t\\t\\t\\toutput column of a SubLink node's sub-select, but here, the\\n *\\t\\t\\t\\tSubLink is always a MULTIEXPR SubLink.  The high-order 16 bits\\n *\\t\\t\\t\\tof the `paramid' field contain the SubLink's subLinkId, and\\n *\\t\\t\\t\\tthe low-order 16 bits contain the column number.  (This type\\n *\\t\\t\\t\\tof Param is also converted to PARAM_EXEC during planning.)\\n */\\n\"\n    },\n    'CoercionContext': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'COERCION_IMPLICIT',\n          'comment': '/* coercion in context of expression */'\n        },\n        {\n          'name': 'COERCION_ASSIGNMENT',\n          'comment': '/* coercion in context of assignment */'\n        },\n        {\n          'name': 'COERCION_EXPLICIT',\n          'comment': '/* explicit cast operation */'\n        }\n      ],\n      'comment': '/*\\n * CoercionContext - distinguishes the allowed set of type casts\\n *\\n * NB: ordering of the alternatives is significant; later (larger) values\\n * allow more casts than earlier ones.\\n */\\n'\n    },\n    'CoercionForm': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'COERCE_EXPLICIT_CALL',\n          'comment': '/* display as a function call */'\n        },\n        {\n          'name': 'COERCE_EXPLICIT_CAST',\n          'comment': '/* display as an explicit cast */'\n        },\n        {\n          'name': 'COERCE_IMPLICIT_CAST',\n          'comment': '/* implicit cast, so hide it */'\n        }\n      ],\n      'comment': \"/*\\n * CoercionForm - how to display a node that could have come from a cast\\n *\\n * NB: equal() ignores CoercionForm fields, therefore this *must* not carry\\n * any semantically significant information.  We need that behavior so that\\n * the planner will consider equivalent implicit and explicit casts to be\\n * equivalent.  In cases where those actually behave differently, the coercion\\n * function's arguments will be different.\\n */\\n\"\n    },\n    'BoolExprType': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'AND_EXPR',\n          'comment': null\n        },\n        {\n          'name': 'OR_EXPR'\n        }\n      ],\n      'comment': '/*\\n * BoolExpr - expression node for the basic Boolean operators AND, OR, NOT\\n *\\n * Notice the arguments are given as a List.  For NOT, of course the list\\n * must always have exactly one element.  For AND and OR, there can be two\\n * or more arguments.\\n */\\n'\n    },\n    'SubLinkType': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'EXISTS_SUBLINK',\n          'comment': null\n        },\n        {\n          'name': 'ALL_SUBLINK',\n          'comment': null\n        },\n        {\n          'name': 'ANY_SUBLINK',\n          'comment': null\n        },\n        {\n          'name': 'ROWCOMPARE_SUBLINK',\n          'comment': null\n        },\n        {\n          'name': 'EXPR_SUBLINK',\n          'comment': null\n        },\n        {\n          'name': 'MULTIEXPR_SUBLINK',\n          'comment': null\n        },\n        {\n          'name': 'ARRAY_SUBLINK',\n          'comment': null\n        },\n        {\n          'name': 'CTE_SUBLINK',\n          'comment': '/* for SubPlans only */'\n        }\n      ],\n      'comment': \"/*\\n * SubLink\\n *\\n * A SubLink represents a subselect appearing in an expression, and in some\\n * cases also the combining operator(s) just above it.  The subLinkType\\n * indicates the form of the expression represented:\\n *\\tEXISTS_SUBLINK\\t\\tEXISTS(SELECT ...)\\n *\\tALL_SUBLINK\\t\\t\\t(lefthand) op ALL (SELECT ...)\\n *\\tANY_SUBLINK\\t\\t\\t(lefthand) op ANY (SELECT ...)\\n *\\tROWCOMPARE_SUBLINK\\t(lefthand) op (SELECT ...)\\n *\\tEXPR_SUBLINK\\t\\t(SELECT with single targetlist item ...)\\n *\\tMULTIEXPR_SUBLINK\\t(SELECT with multiple targetlist items ...)\\n *\\tARRAY_SUBLINK\\t\\tARRAY(SELECT with single targetlist item ...)\\n *\\tCTE_SUBLINK\\t\\t\\tWITH query (never actually part of an expression)\\n * For ALL, ANY, and ROWCOMPARE, the lefthand is a list of expressions of the\\n * same length as the subselect's targetlist.  ROWCOMPARE will *always* have\\n * a list with more than one entry; if the subselect has just one target\\n * then the parser will create an EXPR_SUBLINK instead (and any operator\\n * above the subselect will be represented separately).\\n * ROWCOMPARE, EXPR, and MULTIEXPR require the subselect to deliver at most\\n * one row (if it returns no rows, the result is NULL).\\n * ALL, ANY, and ROWCOMPARE require the combining operators to deliver boolean\\n * results.  ALL and ANY combine the per-row results using AND and OR\\n * semantics respectively.\\n * ARRAY requires just one target column, and creates an array of the target\\n * column's type using any number of rows resulting from the subselect.\\n *\\n * SubLink is classed as an Expr node, but it is not actually executable;\\n * it must be replaced in the expression tree by a SubPlan node during\\n * planning.\\n *\\n * NOTE: in the raw output of gram.y, testexpr contains just the raw form\\n * of the lefthand expression (if any), and operName is the String name of\\n * the combining operator.  Also, subselect is a raw parsetree.  During parse\\n * analysis, the parser transforms testexpr into a complete boolean expression\\n * that compares the lefthand value(s) to PARAM_SUBLINK nodes representing the\\n * output columns of the subselect.  And subselect is transformed to a Query.\\n * This is the representation seen in saved rules and in the rewriter.\\n *\\n * In EXISTS, EXPR, MULTIEXPR, and ARRAY SubLinks, testexpr and operName\\n * are unused and are always null.\\n *\\n * subLinkId is currently used only for MULTIEXPR SubLinks, and is zero in\\n * other SubLinks.  This number identifies different multiple-assignment\\n * subqueries within an UPDATE statement's SET list.  It is unique only\\n * within a particular targetlist.  The output column(s) of the MULTIEXPR\\n * are referenced by PARAM_MULTIEXPR Params appearing elsewhere in the tlist.\\n *\\n * The CTE_SUBLINK case never occurs in actual SubLink nodes, but it is used\\n * in SubPlans generated for WITH subqueries.\\n */\\n\"\n    },\n    'RowCompareType': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'comment': '\\t/* Values of this enum are chosen to match btree strategy numbers */\\n'\n        },\n        {\n          'name': 'ROWCOMPARE_LT',\n          'comment': null\n        },\n        {\n          'name': 'ROWCOMPARE_LE',\n          'comment': null\n        },\n        {\n          'name': 'ROWCOMPARE_EQ',\n          'comment': null\n        },\n        {\n          'name': 'ROWCOMPARE_GE',\n          'comment': null\n        },\n        {\n          'name': 'ROWCOMPARE_GT',\n          'comment': null\n        },\n        {\n          'name': 'ROWCOMPARE_NE',\n          'comment': null\n        }\n      ],\n      'comment': '/*\\n * RowCompareExpr - row-wise comparison, such as (a, b) <= (1, 2)\\n *\\n * We support row comparison for any operator that can be determined to\\n * act like =, <>, <, <=, >, or >= (we determine this by looking for the\\n * operator in btree opfamilies).  Note that the same operator name might\\n * map to a different operator for each pair of row elements, since the\\n * element datatypes can vary.\\n *\\n * A RowCompareExpr node is only generated for the < <= > >= cases;\\n * the = and <> cases are translated to simple AND or OR combinations\\n * of the pairwise comparisons.  However, we include = and <> in the\\n * RowCompareType enum for the convenience of parser logic.\\n */\\n'\n    },\n    'MinMaxOp': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'IS_GREATEST',\n          'comment': null\n        },\n        {\n          'name': 'IS_LEAST',\n          'comment': null\n        }\n      ],\n      'comment': '/*\\n * MinMaxExpr - a GREATEST or LEAST function\\n */\\n'\n    },\n    'SQLValueFunctionOp': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'SVFOP_CURRENT_DATE',\n          'comment': null\n        },\n        {\n          'name': 'SVFOP_CURRENT_TIME',\n          'comment': null\n        },\n        {\n          'name': 'SVFOP_CURRENT_TIME_N',\n          'comment': null\n        },\n        {\n          'name': 'SVFOP_CURRENT_TIMESTAMP',\n          'comment': null\n        },\n        {\n          'name': 'SVFOP_CURRENT_TIMESTAMP_N',\n          'comment': null\n        },\n        {\n          'name': 'SVFOP_LOCALTIME',\n          'comment': null\n        },\n        {\n          'name': 'SVFOP_LOCALTIME_N',\n          'comment': null\n        },\n        {\n          'name': 'SVFOP_LOCALTIMESTAMP',\n          'comment': null\n        },\n        {\n          'name': 'SVFOP_LOCALTIMESTAMP_N',\n          'comment': null\n        },\n        {\n          'name': 'SVFOP_CURRENT_ROLE',\n          'comment': null\n        },\n        {\n          'name': 'SVFOP_CURRENT_USER',\n          'comment': null\n        },\n        {\n          'name': 'SVFOP_USER',\n          'comment': null\n        },\n        {\n          'name': 'SVFOP_SESSION_USER',\n          'comment': null\n        },\n        {\n          'name': 'SVFOP_CURRENT_CATALOG',\n          'comment': null\n        },\n        {\n          'name': 'SVFOP_CURRENT_SCHEMA',\n          'comment': null\n        }\n      ],\n      'comment': \"/*\\n * SQLValueFunction - parameterless functions with special grammar productions\\n *\\n * The SQL standard categorizes some of these as <datetime value function>\\n * and others as <general value specification>.  We call 'em SQLValueFunctions\\n * for lack of a better term.  We store type and typmod of the result so that\\n * some code doesn't need to know each function individually, and because\\n * we would need to store typmod anyway for some of the datetime functions.\\n * Note that currently, all variants return non-collating datatypes, so we do\\n * not need a collation field; also, all these functions are stable.\\n */\\n\"\n    },\n    'XmlExprOp': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'IS_XMLCONCAT',\n          'comment': '/* XMLCONCAT(args) */'\n        },\n        {\n          'name': 'IS_XMLELEMENT',\n          'comment': '/* XMLELEMENT(name, xml_attributes, args) */'\n        },\n        {\n          'name': 'IS_XMLFOREST',\n          'comment': '/* XMLFOREST(xml_attributes) */'\n        },\n        {\n          'name': 'IS_XMLPARSE',\n          'comment': '/* XMLPARSE(text, is_doc, preserve_ws) */'\n        },\n        {\n          'name': 'IS_XMLPI',\n          'comment': '/* XMLPI(name [, args]) */'\n        },\n        {\n          'name': 'IS_XMLROOT',\n          'comment': '/* XMLROOT(xml, version, standalone) */'\n        },\n        {\n          'name': 'IS_XMLSERIALIZE',\n          'comment': '/* XMLSERIALIZE(is_document, xmlval) */'\n        },\n        {\n          'name': 'IS_DOCUMENT',\n          'comment': '/* xmlval IS DOCUMENT */'\n        }\n      ],\n      'comment': \"/*\\n * XmlExpr - various SQL/XML functions requiring special grammar productions\\n *\\n * 'name' carries the \\\"NAME foo\\\" argument (already XML-escaped).\\n * 'named_args' and 'arg_names' represent an xml_attribute list.\\n * 'args' carries all other arguments.\\n *\\n * Note: result type/typmod/collation are not stored, but can be deduced\\n * from the XmlExprOp.  The type/typmod fields are just used for display\\n * purposes, and are NOT necessarily the true result type of the node.\\n */\\n\"\n    },\n    'XmlOptionType': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'XMLOPTION_DOCUMENT',\n          'comment': null\n        },\n        {\n          'name': 'XMLOPTION_CONTENT',\n          'comment': null\n        }\n      ],\n      'comment': null\n    },\n    'NullTestType': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'IS_NULL',\n          'comment': null\n        },\n        {\n          'name': 'IS_NOT_NULL'\n        }\n      ],\n      'comment': \"/* ----------------\\n * NullTest\\n *\\n * NullTest represents the operation of testing a value for NULLness.\\n * The appropriate test is performed and returned as a boolean Datum.\\n *\\n * When argisrow is false, this simply represents a test for the null value.\\n *\\n * When argisrow is true, the input expression must yield a rowtype, and\\n * the node implements \\\"row IS [NOT] NULL\\\" per the SQL standard.  This\\n * includes checking individual fields for NULLness when the row datum\\n * itself isn't NULL.\\n *\\n * NOTE: the combination of a rowtype input and argisrow==false does NOT\\n * correspond to the SQL notation \\\"row IS [NOT] NULL\\\"; instead, this case\\n * represents the SQL notation \\\"row IS [NOT] DISTINCT FROM NULL\\\".\\n * ----------------\\n */\\n\"\n    },\n    'BoolTestType': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'IS_TRUE',\n          'comment': null\n        },\n        {\n          'name': 'IS_NOT_TRUE'\n        }\n      ],\n      'comment': '/*\\n * BooleanTest\\n *\\n * BooleanTest represents the operation of determining whether a boolean\\n * is TRUE, FALSE, or UNKNOWN (ie, NULL).  All six meaningful combinations\\n * are supported.  Note that a NULL input does *not* cause a NULL result.\\n * The appropriate test is performed and returned as a boolean Datum.\\n */\\n'\n    }\n  },\n  'nodes/lockoptions': {\n    'LockClauseStrength': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'LCS_NONE',\n          'comment': '/* no such clause - only used in PlanRowMark */'\n        },\n        {\n          'name': 'LCS_FORKEYSHARE',\n          'comment': '/* FOR KEY SHARE */'\n        },\n        {\n          'name': 'LCS_FORSHARE',\n          'comment': '/* FOR SHARE */'\n        },\n        {\n          'name': 'LCS_FORNOKEYUPDATE',\n          'comment': '/* FOR NO KEY UPDATE */'\n        },\n        {\n          'name': 'LCS_FORUPDATE',\n          'comment': '/* FOR UPDATE */'\n        }\n      ],\n      'comment': '/*\\n * This enum represents the different strengths of FOR UPDATE/SHARE clauses.\\n * The ordering here is important, because the highest numerical value takes\\n * precedence when a RTE is specified multiple ways.  See applyLockingClause.\\n */\\n'\n    },\n    'LockWaitPolicy': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'comment': '\\t/* Wait for the lock to become available (default behavior) */\\n'\n        },\n        {\n          'name': 'LockWaitBlock',\n          'comment': null\n        },\n        {\n          'comment': \"\\t/* Skip rows that can't be locked (SKIP LOCKED) */\\n\"\n        },\n        {\n          'name': 'LockWaitSkip',\n          'comment': null\n        },\n        {\n          'comment': '\\t/* Raise an error if a row cannot be locked (NOWAIT) */\\n'\n        },\n        {\n          'name': 'LockWaitError',\n          'comment': null\n        }\n      ],\n      'comment': '/*\\n * This enum controls how to deal with rows being locked by FOR UPDATE/SHARE\\n * clauses (i.e., it represents the NOWAIT and SKIP LOCKED options).\\n * The ordering here is important, because the highest numerical value takes\\n * precedence when a RTE is specified multiple ways.  See applyLockingClause.\\n */\\n'\n    }\n  },\n  'nodes/nodes': {\n    'NodeTag': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'T_Invalid',\n          'comment': null\n        },\n        {\n          'comment': ''\n        },\n        {\n          'comment': '\\t/*\\n\\t * TAGS FOR EXECUTOR NODES (execnodes.h)\\n\\t */\\n'\n        },\n        {\n          'name': 'T_IndexInfo',\n          'comment': null\n        },\n        {\n          'name': 'T_ExprContext',\n          'comment': null\n        },\n        {\n          'name': 'T_ProjectionInfo',\n          'comment': null\n        },\n        {\n          'name': 'T_JunkFilter',\n          'comment': null\n        },\n        {\n          'name': 'T_ResultRelInfo',\n          'comment': null\n        },\n        {\n          'name': 'T_EState',\n          'comment': null\n        },\n        {\n          'name': 'T_TupleTableSlot',\n          'comment': null\n        },\n        {\n          'comment': ''\n        },\n        {\n          'comment': '\\t/*\\n\\t * TAGS FOR PLAN NODES (plannodes.h)\\n\\t */\\n'\n        },\n        {\n          'name': 'T_Plan',\n          'comment': null\n        },\n        {\n          'name': 'T_Result',\n          'comment': null\n        },\n        {\n          'name': 'T_ProjectSet',\n          'comment': null\n        },\n        {\n          'name': 'T_ModifyTable',\n          'comment': null\n        },\n        {\n          'name': 'T_Append',\n          'comment': null\n        },\n        {\n          'name': 'T_MergeAppend',\n          'comment': null\n        },\n        {\n          'name': 'T_RecursiveUnion',\n          'comment': null\n        },\n        {\n          'name': 'T_BitmapAnd',\n          'comment': null\n        },\n        {\n          'name': 'T_BitmapOr',\n          'comment': null\n        },\n        {\n          'name': 'T_Scan',\n          'comment': null\n        },\n        {\n          'name': 'T_SeqScan',\n          'comment': null\n        },\n        {\n          'name': 'T_SampleScan',\n          'comment': null\n        },\n        {\n          'name': 'T_IndexScan',\n          'comment': null\n        },\n        {\n          'name': 'T_IndexOnlyScan',\n          'comment': null\n        },\n        {\n          'name': 'T_BitmapIndexScan',\n          'comment': null\n        },\n        {\n          'name': 'T_BitmapHeapScan',\n          'comment': null\n        },\n        {\n          'name': 'T_TidScan',\n          'comment': null\n        },\n        {\n          'name': 'T_SubqueryScan',\n          'comment': null\n        },\n        {\n          'name': 'T_FunctionScan',\n          'comment': null\n        },\n        {\n          'name': 'T_ValuesScan',\n          'comment': null\n        },\n        {\n          'name': 'T_TableFuncScan',\n          'comment': null\n        },\n        {\n          'name': 'T_CteScan',\n          'comment': null\n        },\n        {\n          'name': 'T_NamedTuplestoreScan',\n          'comment': null\n        },\n        {\n          'name': 'T_WorkTableScan',\n          'comment': null\n        },\n        {\n          'name': 'T_ForeignScan',\n          'comment': null\n        },\n        {\n          'name': 'T_CustomScan',\n          'comment': null\n        },\n        {\n          'name': 'T_Join',\n          'comment': null\n        },\n        {\n          'name': 'T_NestLoop',\n          'comment': null\n        },\n        {\n          'name': 'T_MergeJoin',\n          'comment': null\n        },\n        {\n          'name': 'T_HashJoin',\n          'comment': null\n        },\n        {\n          'name': 'T_Material',\n          'comment': null\n        },\n        {\n          'name': 'T_Sort',\n          'comment': null\n        },\n        {\n          'name': 'T_Group',\n          'comment': null\n        },\n        {\n          'name': 'T_Agg',\n          'comment': null\n        },\n        {\n          'name': 'T_WindowAgg',\n          'comment': null\n        },\n        {\n          'name': 'T_Unique',\n          'comment': null\n        },\n        {\n          'name': 'T_Gather',\n          'comment': null\n        },\n        {\n          'name': 'T_GatherMerge',\n          'comment': null\n        },\n        {\n          'name': 'T_Hash',\n          'comment': null\n        },\n        {\n          'name': 'T_SetOp',\n          'comment': null\n        },\n        {\n          'name': 'T_LockRows',\n          'comment': null\n        },\n        {\n          'name': 'T_Limit',\n          'comment': null\n        },\n        {\n          'comment': \"\\t/* these aren't subclasses of Plan: */\\n\"\n        },\n        {\n          'name': 'T_NestLoopParam',\n          'comment': null\n        },\n        {\n          'name': 'T_PlanRowMark',\n          'comment': null\n        },\n        {\n          'name': 'T_PlanInvalItem',\n          'comment': null\n        },\n        {\n          'comment': ''\n        },\n        {\n          'comment': '\\t/*\\n\\t * TAGS FOR PLAN STATE NODES (execnodes.h)\\n\\t *\\n\\t * These should correspond one-to-one with Plan node types.\\n\\t */\\n'\n        },\n        {\n          'name': 'T_PlanState',\n          'comment': null\n        },\n        {\n          'name': 'T_ResultState',\n          'comment': null\n        },\n        {\n          'name': 'T_ProjectSetState',\n          'comment': null\n        },\n        {\n          'name': 'T_ModifyTableState',\n          'comment': null\n        },\n        {\n          'name': 'T_AppendState',\n          'comment': null\n        },\n        {\n          'name': 'T_MergeAppendState',\n          'comment': null\n        },\n        {\n          'name': 'T_RecursiveUnionState',\n          'comment': null\n        },\n        {\n          'name': 'T_BitmapAndState',\n          'comment': null\n        },\n        {\n          'name': 'T_BitmapOrState',\n          'comment': null\n        },\n        {\n          'name': 'T_ScanState',\n          'comment': null\n        },\n        {\n          'name': 'T_SeqScanState',\n          'comment': null\n        },\n        {\n          'name': 'T_SampleScanState',\n          'comment': null\n        },\n        {\n          'name': 'T_IndexScanState',\n          'comment': null\n        },\n        {\n          'name': 'T_IndexOnlyScanState',\n          'comment': null\n        },\n        {\n          'name': 'T_BitmapIndexScanState',\n          'comment': null\n        },\n        {\n          'name': 'T_BitmapHeapScanState',\n          'comment': null\n        },\n        {\n          'name': 'T_TidScanState',\n          'comment': null\n        },\n        {\n          'name': 'T_SubqueryScanState',\n          'comment': null\n        },\n        {\n          'name': 'T_FunctionScanState',\n          'comment': null\n        },\n        {\n          'name': 'T_TableFuncScanState',\n          'comment': null\n        },\n        {\n          'name': 'T_ValuesScanState',\n          'comment': null\n        },\n        {\n          'name': 'T_CteScanState',\n          'comment': null\n        },\n        {\n          'name': 'T_NamedTuplestoreScanState',\n          'comment': null\n        },\n        {\n          'name': 'T_WorkTableScanState',\n          'comment': null\n        },\n        {\n          'name': 'T_ForeignScanState',\n          'comment': null\n        },\n        {\n          'name': 'T_CustomScanState',\n          'comment': null\n        },\n        {\n          'name': 'T_JoinState',\n          'comment': null\n        },\n        {\n          'name': 'T_NestLoopState',\n          'comment': null\n        },\n        {\n          'name': 'T_MergeJoinState',\n          'comment': null\n        },\n        {\n          'name': 'T_HashJoinState',\n          'comment': null\n        },\n        {\n          'name': 'T_MaterialState',\n          'comment': null\n        },\n        {\n          'name': 'T_SortState',\n          'comment': null\n        },\n        {\n          'name': 'T_GroupState',\n          'comment': null\n        },\n        {\n          'name': 'T_AggState',\n          'comment': null\n        },\n        {\n          'name': 'T_WindowAggState',\n          'comment': null\n        },\n        {\n          'name': 'T_UniqueState',\n          'comment': null\n        },\n        {\n          'name': 'T_GatherState',\n          'comment': null\n        },\n        {\n          'name': 'T_GatherMergeState',\n          'comment': null\n        },\n        {\n          'name': 'T_HashState',\n          'comment': null\n        },\n        {\n          'name': 'T_SetOpState',\n          'comment': null\n        },\n        {\n          'name': 'T_LockRowsState',\n          'comment': null\n        },\n        {\n          'name': 'T_LimitState',\n          'comment': null\n        },\n        {\n          'comment': ''\n        },\n        {\n          'comment': '\\t/*\\n\\t * TAGS FOR PRIMITIVE NODES (primnodes.h)\\n\\t */\\n'\n        },\n        {\n          'name': 'T_Alias',\n          'comment': null\n        },\n        {\n          'name': 'T_RangeVar',\n          'comment': null\n        },\n        {\n          'name': 'T_TableFunc',\n          'comment': null\n        },\n        {\n          'name': 'T_Expr',\n          'comment': null\n        },\n        {\n          'name': 'T_Var',\n          'comment': null\n        },\n        {\n          'name': 'T_Const',\n          'comment': null\n        },\n        {\n          'name': 'T_Param',\n          'comment': null\n        },\n        {\n          'name': 'T_Aggref',\n          'comment': null\n        },\n        {\n          'name': 'T_GroupingFunc',\n          'comment': null\n        },\n        {\n          'name': 'T_WindowFunc',\n          'comment': null\n        },\n        {\n          'name': 'T_ArrayRef',\n          'comment': null\n        },\n        {\n          'name': 'T_FuncExpr',\n          'comment': null\n        },\n        {\n          'name': 'T_NamedArgExpr',\n          'comment': null\n        },\n        {\n          'name': 'T_OpExpr',\n          'comment': null\n        },\n        {\n          'name': 'T_DistinctExpr',\n          'comment': null\n        },\n        {\n          'name': 'T_NullIfExpr',\n          'comment': null\n        },\n        {\n          'name': 'T_ScalarArrayOpExpr',\n          'comment': null\n        },\n        {\n          'name': 'T_BoolExpr',\n          'comment': null\n        },\n        {\n          'name': 'T_SubLink',\n          'comment': null\n        },\n        {\n          'name': 'T_SubPlan',\n          'comment': null\n        },\n        {\n          'name': 'T_AlternativeSubPlan',\n          'comment': null\n        },\n        {\n          'name': 'T_FieldSelect',\n          'comment': null\n        },\n        {\n          'name': 'T_FieldStore',\n          'comment': null\n        },\n        {\n          'name': 'T_RelabelType',\n          'comment': null\n        },\n        {\n          'name': 'T_CoerceViaIO',\n          'comment': null\n        },\n        {\n          'name': 'T_ArrayCoerceExpr',\n          'comment': null\n        },\n        {\n          'name': 'T_ConvertRowtypeExpr',\n          'comment': null\n        },\n        {\n          'name': 'T_CollateExpr',\n          'comment': null\n        },\n        {\n          'name': 'T_CaseExpr',\n          'comment': null\n        },\n        {\n          'name': 'T_CaseWhen',\n          'comment': null\n        },\n        {\n          'name': 'T_CaseTestExpr',\n          'comment': null\n        },\n        {\n          'name': 'T_ArrayExpr',\n          'comment': null\n        },\n        {\n          'name': 'T_RowExpr',\n          'comment': null\n        },\n        {\n          'name': 'T_RowCompareExpr',\n          'comment': null\n        },\n        {\n          'name': 'T_CoalesceExpr',\n          'comment': null\n        },\n        {\n          'name': 'T_MinMaxExpr',\n          'comment': null\n        },\n        {\n          'name': 'T_SQLValueFunction',\n          'comment': null\n        },\n        {\n          'name': 'T_XmlExpr',\n          'comment': null\n        },\n        {\n          'name': 'T_NullTest',\n          'comment': null\n        },\n        {\n          'name': 'T_BooleanTest',\n          'comment': null\n        },\n        {\n          'name': 'T_CoerceToDomain',\n          'comment': null\n        },\n        {\n          'name': 'T_CoerceToDomainValue',\n          'comment': null\n        },\n        {\n          'name': 'T_SetToDefault',\n          'comment': null\n        },\n        {\n          'name': 'T_CurrentOfExpr',\n          'comment': null\n        },\n        {\n          'name': 'T_NextValueExpr',\n          'comment': null\n        },\n        {\n          'name': 'T_InferenceElem',\n          'comment': null\n        },\n        {\n          'name': 'T_TargetEntry',\n          'comment': null\n        },\n        {\n          'name': 'T_RangeTblRef',\n          'comment': null\n        },\n        {\n          'name': 'T_JoinExpr',\n          'comment': null\n        },\n        {\n          'name': 'T_FromExpr',\n          'comment': null\n        },\n        {\n          'name': 'T_OnConflictExpr',\n          'comment': null\n        },\n        {\n          'name': 'T_IntoClause',\n          'comment': null\n        },\n        {\n          'comment': ''\n        },\n        {\n          'comment': \"\\t/*\\n\\t * TAGS FOR EXPRESSION STATE NODES (execnodes.h)\\n\\t *\\n\\t * ExprState represents the evaluation state for a whole expression tree.\\n\\t * Most Expr-based plan nodes do not have a corresponding expression state\\n\\t * node, they're fully handled within execExpr* - but sometimes the state\\n\\t * needs to be shared with other parts of the executor, as for example\\n\\t * with AggrefExprState, which nodeAgg.c has to modify.\\n\\t */\\n\"\n        },\n        {\n          'name': 'T_ExprState',\n          'comment': null\n        },\n        {\n          'name': 'T_AggrefExprState',\n          'comment': null\n        },\n        {\n          'name': 'T_WindowFuncExprState',\n          'comment': null\n        },\n        {\n          'name': 'T_SetExprState',\n          'comment': null\n        },\n        {\n          'name': 'T_SubPlanState',\n          'comment': null\n        },\n        {\n          'name': 'T_AlternativeSubPlanState',\n          'comment': null\n        },\n        {\n          'name': 'T_DomainConstraintState',\n          'comment': null\n        },\n        {\n          'comment': ''\n        },\n        {\n          'comment': '\\t/*\\n\\t * TAGS FOR PLANNER NODES (relation.h)\\n\\t */\\n'\n        },\n        {\n          'name': 'T_PlannerInfo',\n          'comment': null\n        },\n        {\n          'name': 'T_PlannerGlobal',\n          'comment': null\n        },\n        {\n          'name': 'T_RelOptInfo',\n          'comment': null\n        },\n        {\n          'name': 'T_IndexOptInfo',\n          'comment': null\n        },\n        {\n          'name': 'T_ForeignKeyOptInfo',\n          'comment': null\n        },\n        {\n          'name': 'T_ParamPathInfo',\n          'comment': null\n        },\n        {\n          'name': 'T_Path',\n          'comment': null\n        },\n        {\n          'name': 'T_IndexPath',\n          'comment': null\n        },\n        {\n          'name': 'T_BitmapHeapPath',\n          'comment': null\n        },\n        {\n          'name': 'T_BitmapAndPath',\n          'comment': null\n        },\n        {\n          'name': 'T_BitmapOrPath',\n          'comment': null\n        },\n        {\n          'name': 'T_TidPath',\n          'comment': null\n        },\n        {\n          'name': 'T_SubqueryScanPath',\n          'comment': null\n        },\n        {\n          'name': 'T_ForeignPath',\n          'comment': null\n        },\n        {\n          'name': 'T_CustomPath',\n          'comment': null\n        },\n        {\n          'name': 'T_NestPath',\n          'comment': null\n        },\n        {\n          'name': 'T_MergePath',\n          'comment': null\n        },\n        {\n          'name': 'T_HashPath',\n          'comment': null\n        },\n        {\n          'name': 'T_AppendPath',\n          'comment': null\n        },\n        {\n          'name': 'T_MergeAppendPath',\n          'comment': null\n        },\n        {\n          'name': 'T_ResultPath',\n          'comment': null\n        },\n        {\n          'name': 'T_MaterialPath',\n          'comment': null\n        },\n        {\n          'name': 'T_UniquePath',\n          'comment': null\n        },\n        {\n          'name': 'T_GatherPath',\n          'comment': null\n        },\n        {\n          'name': 'T_GatherMergePath',\n          'comment': null\n        },\n        {\n          'name': 'T_ProjectionPath',\n          'comment': null\n        },\n        {\n          'name': 'T_ProjectSetPath',\n          'comment': null\n        },\n        {\n          'name': 'T_SortPath',\n          'comment': null\n        },\n        {\n          'name': 'T_GroupPath',\n          'comment': null\n        },\n        {\n          'name': 'T_UpperUniquePath',\n          'comment': null\n        },\n        {\n          'name': 'T_AggPath',\n          'comment': null\n        },\n        {\n          'name': 'T_GroupingSetsPath',\n          'comment': null\n        },\n        {\n          'name': 'T_MinMaxAggPath',\n          'comment': null\n        },\n        {\n          'name': 'T_WindowAggPath',\n          'comment': null\n        },\n        {\n          'name': 'T_SetOpPath',\n          'comment': null\n        },\n        {\n          'name': 'T_RecursiveUnionPath',\n          'comment': null\n        },\n        {\n          'name': 'T_LockRowsPath',\n          'comment': null\n        },\n        {\n          'name': 'T_ModifyTablePath',\n          'comment': null\n        },\n        {\n          'name': 'T_LimitPath',\n          'comment': null\n        },\n        {\n          'comment': \"\\t/* these aren't subclasses of Path: */\\n\"\n        },\n        {\n          'name': 'T_EquivalenceClass',\n          'comment': null\n        },\n        {\n          'name': 'T_EquivalenceMember',\n          'comment': null\n        },\n        {\n          'name': 'T_PathKey',\n          'comment': null\n        },\n        {\n          'name': 'T_PathTarget',\n          'comment': null\n        },\n        {\n          'name': 'T_RestrictInfo',\n          'comment': null\n        },\n        {\n          'name': 'T_PlaceHolderVar',\n          'comment': null\n        },\n        {\n          'name': 'T_SpecialJoinInfo',\n          'comment': null\n        },\n        {\n          'name': 'T_AppendRelInfo',\n          'comment': null\n        },\n        {\n          'name': 'T_PartitionedChildRelInfo',\n          'comment': null\n        },\n        {\n          'name': 'T_PlaceHolderInfo',\n          'comment': null\n        },\n        {\n          'name': 'T_MinMaxAggInfo',\n          'comment': null\n        },\n        {\n          'name': 'T_PlannerParamItem',\n          'comment': null\n        },\n        {\n          'name': 'T_RollupData',\n          'comment': null\n        },\n        {\n          'name': 'T_GroupingSetData',\n          'comment': null\n        },\n        {\n          'name': 'T_StatisticExtInfo',\n          'comment': null\n        },\n        {\n          'comment': ''\n        },\n        {\n          'comment': '\\t/*\\n\\t * TAGS FOR MEMORY NODES (memnodes.h)\\n\\t */\\n'\n        },\n        {\n          'name': 'T_MemoryContext',\n          'comment': null\n        },\n        {\n          'name': 'T_AllocSetContext',\n          'comment': null\n        },\n        {\n          'name': 'T_SlabContext',\n          'comment': null\n        },\n        {\n          'comment': ''\n        },\n        {\n          'comment': '\\t/*\\n\\t * TAGS FOR VALUE NODES (value.h)\\n\\t */\\n'\n        },\n        {\n          'name': 'T_Value',\n          'comment': null\n        },\n        {\n          'name': 'T_Integer',\n          'comment': null\n        },\n        {\n          'name': 'T_Float',\n          'comment': null\n        },\n        {\n          'name': 'T_String',\n          'comment': null\n        },\n        {\n          'name': 'T_BitString',\n          'comment': null\n        },\n        {\n          'name': 'T_Null',\n          'comment': null\n        },\n        {\n          'comment': ''\n        },\n        {\n          'comment': '\\t/*\\n\\t * TAGS FOR LIST NODES (pg_list.h)\\n\\t */\\n'\n        },\n        {\n          'name': 'T_List',\n          'comment': null\n        },\n        {\n          'name': 'T_IntList',\n          'comment': null\n        },\n        {\n          'name': 'T_OidList',\n          'comment': null\n        },\n        {\n          'comment': ''\n        },\n        {\n          'comment': '\\t/*\\n\\t * TAGS FOR EXTENSIBLE NODES (extensible.h)\\n\\t */\\n'\n        },\n        {\n          'name': 'T_ExtensibleNode',\n          'comment': null\n        },\n        {\n          'comment': ''\n        },\n        {\n          'comment': '\\t/*\\n\\t * TAGS FOR STATEMENT NODES (mostly in parsenodes.h)\\n\\t */\\n'\n        },\n        {\n          'name': 'T_RawStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_Query',\n          'comment': null\n        },\n        {\n          'name': 'T_PlannedStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_InsertStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_DeleteStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_UpdateStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_SelectStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterTableStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterTableCmd',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterDomainStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_SetOperationStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_GrantStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_GrantRoleStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterDefaultPrivilegesStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_ClosePortalStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_ClusterStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CopyStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_DefineStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_DropStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_TruncateStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CommentStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_FetchStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_IndexStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateFunctionStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterFunctionStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_DoStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_RenameStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_RuleStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_NotifyStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_ListenStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_UnlistenStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_TransactionStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_ViewStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_LoadStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateDomainStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreatedbStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_DropdbStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_VacuumStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_ExplainStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateTableAsStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateSeqStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterSeqStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_VariableSetStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_VariableShowStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_DiscardStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateTrigStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreatePLangStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateRoleStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterRoleStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_DropRoleStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_LockStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_ConstraintsSetStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_ReindexStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CheckPointStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateSchemaStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterDatabaseStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterDatabaseSetStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterRoleSetStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateConversionStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateCastStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateOpClassStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateOpFamilyStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterOpFamilyStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_PrepareStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_ExecuteStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_DeallocateStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_DeclareCursorStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateTableSpaceStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_DropTableSpaceStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterObjectDependsStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterObjectSchemaStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterOwnerStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterOperatorStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_DropOwnedStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_ReassignOwnedStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CompositeTypeStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateEnumStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateRangeStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterEnumStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterTSDictionaryStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterTSConfigurationStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateFdwStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterFdwStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateForeignServerStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterForeignServerStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateUserMappingStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterUserMappingStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_DropUserMappingStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterTableSpaceOptionsStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterTableMoveAllStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_SecLabelStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateForeignTableStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_ImportForeignSchemaStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateExtensionStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterExtensionStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterExtensionContentsStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateEventTrigStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterEventTrigStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_RefreshMatViewStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_ReplicaIdentityStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterSystemStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreatePolicyStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterPolicyStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateTransformStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateAmStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreatePublicationStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterPublicationStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateSubscriptionStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterSubscriptionStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_DropSubscriptionStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateStatsStmt',\n          'comment': null\n        },\n        {\n          'name': 'T_AlterCollationStmt',\n          'comment': null\n        },\n        {\n          'comment': ''\n        },\n        {\n          'comment': '\\t/*\\n\\t * TAGS FOR PARSE TREE NODES (parsenodes.h)\\n\\t */\\n'\n        },\n        {\n          'name': 'T_A_Expr',\n          'comment': null\n        },\n        {\n          'name': 'T_ColumnRef',\n          'comment': null\n        },\n        {\n          'name': 'T_ParamRef',\n          'comment': null\n        },\n        {\n          'name': 'T_A_Const',\n          'comment': null\n        },\n        {\n          'name': 'T_FuncCall',\n          'comment': null\n        },\n        {\n          'name': 'T_A_Star',\n          'comment': null\n        },\n        {\n          'name': 'T_A_Indices',\n          'comment': null\n        },\n        {\n          'name': 'T_A_Indirection',\n          'comment': null\n        },\n        {\n          'name': 'T_A_ArrayExpr',\n          'comment': null\n        },\n        {\n          'name': 'T_ResTarget',\n          'comment': null\n        },\n        {\n          'name': 'T_MultiAssignRef',\n          'comment': null\n        },\n        {\n          'name': 'T_TypeCast',\n          'comment': null\n        },\n        {\n          'name': 'T_CollateClause',\n          'comment': null\n        },\n        {\n          'name': 'T_SortBy',\n          'comment': null\n        },\n        {\n          'name': 'T_WindowDef',\n          'comment': null\n        },\n        {\n          'name': 'T_RangeSubselect',\n          'comment': null\n        },\n        {\n          'name': 'T_RangeFunction',\n          'comment': null\n        },\n        {\n          'name': 'T_RangeTableSample',\n          'comment': null\n        },\n        {\n          'name': 'T_RangeTableFunc',\n          'comment': null\n        },\n        {\n          'name': 'T_RangeTableFuncCol',\n          'comment': null\n        },\n        {\n          'name': 'T_TypeName',\n          'comment': null\n        },\n        {\n          'name': 'T_ColumnDef',\n          'comment': null\n        },\n        {\n          'name': 'T_IndexElem',\n          'comment': null\n        },\n        {\n          'name': 'T_Constraint',\n          'comment': null\n        },\n        {\n          'name': 'T_DefElem',\n          'comment': null\n        },\n        {\n          'name': 'T_RangeTblEntry',\n          'comment': null\n        },\n        {\n          'name': 'T_RangeTblFunction',\n          'comment': null\n        },\n        {\n          'name': 'T_TableSampleClause',\n          'comment': null\n        },\n        {\n          'name': 'T_WithCheckOption',\n          'comment': null\n        },\n        {\n          'name': 'T_SortGroupClause',\n          'comment': null\n        },\n        {\n          'name': 'T_GroupingSet',\n          'comment': null\n        },\n        {\n          'name': 'T_WindowClause',\n          'comment': null\n        },\n        {\n          'name': 'T_ObjectWithArgs',\n          'comment': null\n        },\n        {\n          'name': 'T_AccessPriv',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateOpClassItem',\n          'comment': null\n        },\n        {\n          'name': 'T_TableLikeClause',\n          'comment': null\n        },\n        {\n          'name': 'T_FunctionParameter',\n          'comment': null\n        },\n        {\n          'name': 'T_LockingClause',\n          'comment': null\n        },\n        {\n          'name': 'T_RowMarkClause',\n          'comment': null\n        },\n        {\n          'name': 'T_XmlSerialize',\n          'comment': null\n        },\n        {\n          'name': 'T_WithClause',\n          'comment': null\n        },\n        {\n          'name': 'T_InferClause',\n          'comment': null\n        },\n        {\n          'name': 'T_OnConflictClause',\n          'comment': null\n        },\n        {\n          'name': 'T_CommonTableExpr',\n          'comment': null\n        },\n        {\n          'name': 'T_RoleSpec',\n          'comment': null\n        },\n        {\n          'name': 'T_TriggerTransition',\n          'comment': null\n        },\n        {\n          'name': 'T_PartitionElem',\n          'comment': null\n        },\n        {\n          'name': 'T_PartitionSpec',\n          'comment': null\n        },\n        {\n          'name': 'T_PartitionBoundSpec',\n          'comment': null\n        },\n        {\n          'name': 'T_PartitionRangeDatum',\n          'comment': null\n        },\n        {\n          'name': 'T_PartitionCmd',\n          'comment': null\n        },\n        {\n          'comment': ''\n        },\n        {\n          'comment': '\\t/*\\n\\t * TAGS FOR REPLICATION GRAMMAR PARSE NODES (replnodes.h)\\n\\t */\\n'\n        },\n        {\n          'name': 'T_IdentifySystemCmd',\n          'comment': null\n        },\n        {\n          'name': 'T_BaseBackupCmd',\n          'comment': null\n        },\n        {\n          'name': 'T_CreateReplicationSlotCmd',\n          'comment': null\n        },\n        {\n          'name': 'T_DropReplicationSlotCmd',\n          'comment': null\n        },\n        {\n          'name': 'T_StartReplicationCmd',\n          'comment': null\n        },\n        {\n          'name': 'T_TimeLineHistoryCmd',\n          'comment': null\n        },\n        {\n          'name': 'T_SQLCmd',\n          'comment': null\n        },\n        {\n          'comment': ''\n        },\n        {\n          'comment': \"\\t/*\\n\\t * TAGS FOR RANDOM OTHER STUFF\\n\\t *\\n\\t * These are objects that aren't part of parse/plan/execute node tree\\n\\t * structures, but we give them NodeTags anyway for identification\\n\\t * purposes (usually because they are involved in APIs where we want to\\n\\t * pass multiple object types through the same pointer).\\n\\t */\\n\"\n        },\n        {\n          'name': 'T_TriggerData',\n          'comment': '/* in commands/trigger.h */'\n        },\n        {\n          'name': 'T_EventTriggerData',\n          'comment': '/* in commands/event_trigger.h */'\n        },\n        {\n          'name': 'T_ReturnSetInfo',\n          'comment': '/* in nodes/execnodes.h */'\n        },\n        {\n          'name': 'T_WindowObjectData',\n          'comment': '/* private in nodeWindowAgg.c */'\n        },\n        {\n          'name': 'T_TIDBitmap',\n          'comment': '/* in nodes/tidbitmap.h */'\n        },\n        {\n          'name': 'T_InlineCodeBlock',\n          'comment': '/* in nodes/parsenodes.h */'\n        },\n        {\n          'name': 'T_FdwRoutine',\n          'comment': '/* in foreign/fdwapi.h */'\n        },\n        {\n          'name': 'T_IndexAmRoutine',\n          'comment': '/* in access/amapi.h */'\n        },\n        {\n          'name': 'T_TsmRoutine',\n          'comment': '/* in access/tsmapi.h */'\n        },\n        {\n          'name': 'T_ForeignKeyCacheInfo',\n          'comment': '/* in utils/rel.h */'\n        }\n      ],\n      'comment': \"/*\\n * The first field of every node is NodeTag. Each node created (with makeNode)\\n * will have one of the following tags as the value of its first field.\\n *\\n * Note that inserting or deleting node types changes the numbers of other\\n * node types later in the list.  This is no problem during development, since\\n * the node numbers are never stored on disk.  But don't do it in a released\\n * branch, because that would represent an ABI break for extensions.\\n */\\n\"\n    },\n    'CmdType': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'CMD_UNKNOWN',\n          'comment': null\n        },\n        {\n          'name': 'CMD_SELECT',\n          'comment': '/* select stmt */'\n        },\n        {\n          'name': 'CMD_UPDATE',\n          'comment': '/* update stmt */'\n        },\n        {\n          'name': 'CMD_INSERT',\n          'comment': '/* insert stmt */'\n        },\n        {\n          'name': 'CMD_DELETE',\n          'comment': null\n        },\n        {\n          'name': 'CMD_UTILITY',\n          'comment': '/* cmds like create, destroy, copy, vacuum,\\n\\t\\t\\t\\t\\t\\t\\t\\t * etc. */\\n'\n        },\n        {\n          'name': 'CMD_NOTHING',\n          'comment': '/* dummy command for instead nothing rules\\n\\t\\t\\t\\t\\t\\t\\t\\t * with qual */\\n'\n        }\n      ],\n      'comment': '/*\\n * CmdType -\\n *\\t  enums for type of operation represented by a Query or PlannedStmt\\n *\\n * This is needed in both parsenodes.h and plannodes.h, so put it here...\\n */\\n'\n    },\n    'JoinType': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'comment': '\\t/*\\n\\t * The canonical kinds of joins according to the SQL JOIN syntax. Only\\n\\t * these codes can appear in parser output (e.g., JoinExpr nodes).\\n\\t */\\n'\n        },\n        {\n          'name': 'JOIN_INNER',\n          'comment': '/* matching tuple pairs only */'\n        },\n        {\n          'name': 'JOIN_LEFT',\n          'comment': '/* pairs + unmatched LHS tuples */'\n        },\n        {\n          'name': 'JOIN_FULL',\n          'comment': '/* pairs + unmatched LHS + unmatched RHS */'\n        },\n        {\n          'name': 'JOIN_RIGHT',\n          'comment': '/* pairs + unmatched RHS tuples */'\n        },\n        {\n          'comment': ''\n        },\n        {\n          'comment': '\\t/*\\n\\t * Semijoins and anti-semijoins (as defined in relational theory) do not\\n\\t * appear in the SQL JOIN syntax, but there are standard idioms for\\n\\t * representing them (e.g., using EXISTS).  The planner recognizes these\\n\\t * cases and converts them to joins.  So the planner and executor must\\n\\t * support these codes.  NOTE: in JOIN_SEMI output, it is unspecified\\n\\t * which matching RHS row is joined to.  In JOIN_ANTI output, the row is\\n\\t * guaranteed to be null-extended.\\n\\t */\\n'\n        },\n        {\n          'name': 'JOIN_SEMI',\n          'comment': '/* 1 copy of each LHS row that has match(es) */'\n        },\n        {\n          'name': 'JOIN_ANTI',\n          'comment': '/* 1 copy of each LHS row that has no match */'\n        },\n        {\n          'comment': ''\n        },\n        {\n          'comment': '\\t/*\\n\\t * These codes are used internally in the planner, but are not supported\\n\\t * by the executor (nor, indeed, by most of the planner).\\n\\t */\\n'\n        },\n        {\n          'name': 'JOIN_UNIQUE_OUTER',\n          'comment': '/* LHS path must be made unique */'\n        },\n        {\n          'name': 'JOIN_UNIQUE_INNER',\n          'comment': '/* RHS path must be made unique */'\n        },\n        {\n          'comment': ''\n        },\n        {\n          'comment': '\\t/*\\n\\t * We might need additional join types someday.\\n\\t */\\n'\n        }\n      ],\n      'comment': '/*\\n * JoinType -\\n *\\t  enums for types of relation joins\\n *\\n * JoinType determines the exact semantics of joining two relations using\\n * a matching qualification.  For example, it tells what to do with a tuple\\n * that has no match in the other relation.\\n *\\n * This is needed in both parsenodes.h and plannodes.h, so put it here...\\n */\\n'\n    },\n    'AggStrategy': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'AGG_PLAIN',\n          'comment': '/* simple agg across all input rows */'\n        },\n        {\n          'name': 'AGG_SORTED',\n          'comment': '/* grouped agg, input must be sorted */'\n        },\n        {\n          'name': 'AGG_HASHED',\n          'comment': '/* grouped agg, use internal hashtable */'\n        },\n        {\n          'name': 'AGG_MIXED',\n          'comment': '/* grouped agg, hash and sort both used */'\n        }\n      ],\n      'comment': '/*\\n * AggStrategy -\\n *\\t  overall execution strategies for Agg plan nodes\\n *\\n * This is needed in both plannodes.h and relation.h, so put it here...\\n */\\n'\n    },\n    'AggSplit': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'comment': '\\t/* Basic, non-split aggregation: */\\n'\n        },\n        {\n          'name': 'AGGSPLIT_SIMPLE',\n          'comment': null\n        },\n        {\n          'comment': '\\t/* Initial phase of partial aggregation, with serialization: */\\n'\n        },\n        {\n          'name': 'AGGSPLIT_INITIAL_SERIAL',\n          'comment': null\n        },\n        {\n          'comment': '\\t/* Final phase of partial aggregation, with deserialization: */\\n'\n        },\n        {\n          'name': 'AGGSPLIT_FINAL_DESERIAL',\n          'comment': null\n        }\n      ],\n      'comment': '/* Supported operating modes (i.e., useful combinations of these options): */\\n'\n    },\n    'SetOpCmd': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'SETOPCMD_INTERSECT',\n          'comment': null\n        },\n        {\n          'name': 'SETOPCMD_INTERSECT_ALL',\n          'comment': null\n        },\n        {\n          'name': 'SETOPCMD_EXCEPT',\n          'comment': null\n        },\n        {\n          'name': 'SETOPCMD_EXCEPT_ALL',\n          'comment': null\n        }\n      ],\n      'comment': '/*\\n * SetOpCmd and SetOpStrategy -\\n *\\t  overall semantics and execution strategies for SetOp plan nodes\\n *\\n * This is needed in both plannodes.h and relation.h, so put it here...\\n */\\n'\n    },\n    'SetOpStrategy': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'SETOP_SORTED',\n          'comment': '/* input must be sorted */'\n        },\n        {\n          'name': 'SETOP_HASHED',\n          'comment': '/* use internal hashtable */'\n        }\n      ],\n      'comment': null\n    },\n    'OnConflictAction': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'ONCONFLICT_NONE',\n          'comment': '/* No \"ON CONFLICT\" clause */'\n        },\n        {\n          'name': 'ONCONFLICT_NOTHING',\n          'comment': '/* ON CONFLICT ... DO NOTHING */'\n        },\n        {\n          'name': 'ONCONFLICT_UPDATE',\n          'comment': '/* ON CONFLICT ... DO UPDATE */'\n        }\n      ],\n      'comment': '/*\\n * OnConflictAction -\\n *\\t  \"ON CONFLICT\" clause type of query\\n *\\n * This is needed in both parsenodes.h and plannodes.h, so put it here...\\n */\\n'\n    }\n  },\n  'nodes/params': {\n  },\n  'access/attnum': {\n  },\n  'c': {\n  },\n  'postgres': {\n    'vartag_external': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'VARTAG_INDIRECT',\n          'comment': null\n        },\n        {\n          'name': 'VARTAG_EXPANDED_RO',\n          'comment': null\n        },\n        {\n          'name': 'VARTAG_EXPANDED_RW',\n          'comment': null\n        },\n        {\n          'name': 'VARTAG_ONDISK',\n          'comment': null\n        }\n      ],\n      'comment': \"/*\\n * Type tag for the various sorts of \\\"TOAST pointer\\\" datums.  The peculiar\\n * value for VARTAG_ONDISK comes from a requirement for on-disk compatibility\\n * with a previous notion that the tag field was the pointer datum's length.\\n */\\n\"\n    }\n  },\n  'postgres_ext': {\n  },\n  'storage/block': {\n  },\n  'access/sdir': {\n    'ScanDirection': {\n      'values': [\n        {\n          'comment': ''\n        },\n        {\n          'name': 'BackwardScanDirection',\n          'comment': null\n        },\n        {\n          'name': 'NoMovementScanDirection',\n          'comment': null\n        },\n        {\n          'name': 'ForwardScanDirection',\n          'comment': null\n        }\n      ],\n      'comment': \"/*\\n * ScanDirection was an int8 for no apparent reason. I kept the original\\n * values because I'm not sure if I'll break anything otherwise.  -ay 2/95\\n */\\n\"\n    }\n  }\n};\n"]}